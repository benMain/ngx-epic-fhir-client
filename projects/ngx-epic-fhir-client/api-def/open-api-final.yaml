openapi: 3.0.1
info:
  title: Epic on Fhir
  description: All of the components of the Change Healthcare Interoperability Apis
  contact:
    email: bmain@lumeris.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://fhir.epic.com/interconnect-fhir-oauth/api/FHIR
security:
  - bearer_auth: []
paths:
  /R4/AdverseEvent/{ID}:
    get:
      tags:
        - AdverseEvent
        - Read(R4)
      operationId: AdverseEvent_ReadR4
      parameters:
        - name: ID
          in: path
          description: The Adverse Event FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdverseEventR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/AdverseEvent:
    get:
      tags:
        - AdverseEvent
        - Search(R4)
      operationId: AdverseEvent_SearchR4
      parameters:
        - name: seriousness
          in: query
          description: |-
            <p>Seriousness of the event. Possible values are:</p>
            <ul>
            <li>Serious</li>
            <li>Non-Serious</li>
            </ul>
          required: false
          schema:
            type: string
        - name: study
          in: query
          description: A ResearchStudy FHIR ID.
          required: true
          schema:
            type: string
        - name: subject
          in: query
          description: A Patient FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_AdverseEventR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/AllergyIntolerance:
    post:
      tags:
        - AllergyIntolerance
        - Create(R4)
      operationId: AllergyIntolerance_CreateR4
      parameters: []
      responses:
        '201':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllergyIntoleranceR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
      requestBody:
        description: payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllergyIntoleranceR4'
    get:
      tags:
        - AllergyIntolerance
        - Search(R4)
      operationId: AllergyIntolerance_SearchR4
      parameters:
        - name: clinical-status
          in: query
          description: |-
            <p>The current status of the allergy. Only "active" is accepted.
            <p>Starting in the August 2021 version of Epic, this parameter is no longer required, and if is not specified, both active and inactive/resolved allergies are returned.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: Reference to a patient resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_AllergyIntoleranceR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/AllergyIntolerance:
    post:
      tags:
        - AllergyIntolerance
        - Create(STU3)
      operationId: AllergyIntolerance_CreateSTU3
      parameters: []
      responses:
        '201':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllergyIntoleranceSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
      requestBody:
        description: payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllergyIntoleranceSTU3'
    get:
      tags:
        - AllergyIntolerance
        - Search(STU3)
      operationId: AllergyIntolerance_SearchSTU3
      parameters:
        - name: patient
          in: query
          description: Reference to a patient resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_AllergyIntoleranceSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/AllergyIntolerance/{ID}:
    get:
      tags:
        - AllergyIntolerance
        - Read(DSTU2)
      operationId: AllergyIntolerance_ReadDSTU2
      parameters:
        - name: ID
          in: path
          description: The AllergyIntolerance FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllergyIntoleranceDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/AllergyIntolerance/{ID}:
    get:
      tags:
        - AllergyIntolerance
        - Read(R4)
      operationId: AllergyIntolerance_ReadR4
      parameters:
        - name: ID
          in: path
          description: The AllergyIntolerance FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllergyIntoleranceR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/AllergyIntolerance/{ID}:
    get:
      tags:
        - AllergyIntolerance
        - Read(STU3)
      operationId: AllergyIntolerance_ReadSTU3
      parameters:
        - name: ID
          in: path
          description: The AllergyIntolerance FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllergyIntoleranceSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/AllergyIntolerance:
    get:
      tags:
        - AllergyIntolerance
        - Search(DSTU2)
      operationId: AllergyIntolerance_SearchDSTU2
      parameters:
        - name: patient
          in: query
          description: Reference to a patient resource.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Reference to a patient resource.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_AllergyIntoleranceDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Appointment/{ID}:
    get:
      tags:
        - Appointment
        - Read(STU3)
      operationId: Appointment_ReadSTU3
      parameters:
        - name: ID
          in: path
          description: FHIR identifier for an Appointment resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Appointment:
    get:
      tags:
        - Appointment
        - Search(STU3)
      operationId: Appointment_SearchSTU3
      parameters:
        - name: date
          in: query
          description: Appointment date.
          required: false
          schema:
            type: string
        - name: identifier
          in: query
          description: Appointment identifier (encounter CSN).
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: Reference to the Patient resource.
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: |-
            Appointment status. Supported values include:
            <ul>
            <li>booked</li>
            <li>fulfilled</li>
            <li>cancelled</li>
            <li>noshow</li>
            <li>arrived</li>
            <li>proposed</li>
            </ul>
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_AppointmentSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Binary/{ID}:
    get:
      tags:
        - Binary
        - Read(RadiologyResults)(STU3)
      operationId: Binary_ReadRadiologyResultsSTU3
      parameters:
        - name: ID
          in: path
          description: The Binary FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BinarySTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Binary/{ID}:
    get:
      tags:
        - Binary
        - Read(RadiologyResults)(R4)
      operationId: Binary_ReadRadiologyResultsR4
      parameters:
        - name: ID
          in: path
          description: <p>The Binary FHIR ID.</p>
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BinaryR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/Binary/{ID}:
    get:
      tags:
        - Binary
        - Read(GeneratedCCDA)(DSTU2)
      operationId: Binary_ReadGeneratedCCDADSTU2
      parameters:
        - name: ID
          in: path
          description: <p>The FHIR ID.</p>
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BinaryDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/BodyStructure/{ID}:
    get:
      tags:
        - BodyStructure
        - Read(Tooth)(R4)
      operationId: BodyStructure_ReadToothR4
      parameters:
        - name: ID
          in: path
          description: BodyStructure identifier.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BodyStructureR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/BodyStructure:
    get:
      tags:
        - BodyStructure
        - Search(Tooth)(R4)
      operationId: BodyStructure_SearchToothR4
      parameters:
        - name: location
          in: query
          description: 'Accepts a string for a specific tooth in the patient’s mouth. Format: “[Notation OID]|[tooth ID]”, where “Notation OID” is the OID matching the tooth notation system used to communicate the tooth ID. May send multiple entries separated by commas. Supported notations are Universal (94010), FDI (94011) and Palmer (94013). Ex. “urn:oid:1.2.840.114350.1.13.861.1.7.3.866976.94010|32”'
          required: false
          schema:
            type: string
        - name: morphology
          in: query
          description: Points a search to the correct subresource of tooth. Either “teeth” or “302214001” are accepted. These values are functionally equivalent.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: The patient to search for.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: The patient to search for.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_BodyStructureR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /BulkRequest/{BulkRequestID}:
    get:
      tags:
        - BulkDataStatusRequest
      operationId: BulkDataStatusRequest
      parameters:
        - name: BulkRequestID
          in: path
          description: The Adverse Event FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                type: object
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/MedicationRequest/{ID}:
    get:
      tags:
        - MedicationRequest
        - |
          Read(Orders)(R4)
      operationId: |
        MedicationRequest_ReadOrdersR4
      parameters:
        - name: ID
          in: path
          description: A medicationRequest FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationRequestR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/ServiceRequest/{ID}:
    get:
      tags:
        - ServiceRequest
        - Read(Referral)(R4)
      operationId: ServiceRequest_ReadReferralR4
      parameters:
        - name: ID
          in: path
          description: FHIR ServiceRequest ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceRequestR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/CarePlan/{ID}:
    get:
      tags:
        - CarePlan
        - Read(QuestionnairesDue)(R4)
      operationId: CarePlan_ReadQuestionnairesDueR4
      parameters:
        - name: ID
          in: path
          description: FHIR identifier for a CarePlan resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarePlanR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/CarePlan/{ID}:
    get:
      tags:
        - CarePlan
        - Read(Encounter-Level,Longitudinal)(DSTU2)
      operationId: CarePlan_ReadEncounter-Level,LongitudinalDSTU2
      parameters:
        - name: ID
          in: path
          description: The CarePlan FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarePlanDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/CarePlan:
    get:
      tags:
        - CarePlan
        - Search(QuestionnairesDue)(R4)
      operationId: CarePlan_SearchQuestionnairesDueR4
      parameters:
        - name: activity-date
          in: query
          description: Date when the questionnaires are due before.
          required: true
          schema:
            type: string
        - name: category
          in: query
          description: Always set to SNOMED 719091000000102.
          required: true
          schema:
            type: string
        - name: patient
          in: query
          description: Patient FHIR resource ID for the patient associated with the care plan.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_CarePlanR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/CarePlan:
    get:
      tags:
        - CarePlan
        - Search(Encounter-Level,Longitudinal)(DSTU2)
      operationId: CarePlan_SearchEncounter-Level,LongitudinalDSTU2
      parameters:
        - name: _id
          in: query
          description: A parameter
          required: false
          schema:
            type: string
        - name: category
          in: query
          description: |-
            <p>Further refine which CarePlan resources are returned by category. There are two supported categories:</p>
            <ul>
            <li>38717003 returns only the Longitudinal care plan.</li>
            <li>734163000 returns encounter-level care plans.</li>
            </ul>
            <p>If no category is specified, the web service returns only the Longitudinal care plan.</p>
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: The reference to a patient resource.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: The reference to a patient resource.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_CarePlanDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/CareTeam/{ID}:
    get:
      tags:
        - CareTeam
        - Read(Episode)(R4)
      operationId: CareTeam_ReadEpisodeR4
      parameters:
        - name: ID
          in: path
          description: FHIR ID for this CareTeam instance
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CareTeamR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/CareTeam:
    get:
      tags:
        - CareTeam
        - Search(Longitudinal)(R4)
      operationId: CareTeam_SearchLongitudinalR4
      parameters:
        - name: patient
          in: query
          description: Patient FHIR resource ID.
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: CareTeam status. The only supported value is "active".
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Patient FHIR resource ID.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_CareTeamR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Communication:
    post:
      tags:
        - Communication
        - Create(CommunityResource)(R4)
      operationId: Communication_CreateCommunityResourceR4
      parameters: []
      responses:
        '201':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
      requestBody:
        description: payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommunicationR4'
    get:
      tags:
        - Communication
        - Search(CommunityResource)(R4)
      operationId: Communication_SearchCommunityResourceR4
      parameters:
        - name: part-of
          in: query
          description: Reference to the Task resource this Communication belongs to.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: Search for Communication resources for a specified patient ID. You can use both "patient" and "subject" equivalently, but if you use both they must look to the same value.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Search for Communication resources for a specified subject. You can use both "patient" and "subject" equivalently, but if you use both they must look to the same value.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_CommunicationR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Communication/{ID}:
    get:
      tags:
        - Communication
        - Read(CommunityResource)(R4)
      operationId: Communication_ReadCommunityResourceR4
      parameters:
        - name: ID
          in: path
          description: The FHIR identifier for the target Communication resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommunicationR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Condition:
    post:
      tags:
        - Condition
        - Create(Problems)(R4)
      operationId: Condition_CreateProblemsR4
      parameters: []
      responses:
        '201':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
      requestBody:
        description: payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionR4'
    get:
      tags:
        - Condition
        - Search(ReasonforVisit)(R4)
      operationId: Condition_SearchReasonforVisitR4
      parameters:
        - name: category
          in: query
          description: |
            Always “reason-for-visit” for this API.
            Multiple category values are allowed if the requestor is authorized to search multiple Condition categories.
          required: false
          schema:
            type: string
        - name: encounter
          in: query
          description: Reference to an encounter resource the condition is for.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: Reference to a patient resource the condition is for.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Reference to a patient resource the condition is for.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ConditionR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Condition:
    post:
      tags:
        - Condition
        - Create(Problems)(STU3)
      operationId: Condition_CreateProblemsSTU3
      parameters: []
      responses:
        '201':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
      requestBody:
        description: payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionSTU3'
    get:
      tags:
        - Condition
        - Search(EncounterDiagnosis,Problems)(STU3)
      operationId: Condition_SearchEncounterDiagnosis,ProblemsSTU3
      parameters:
        - name: category
          in: query
          description: This is "problem-list-item", "encounter-diagnosis", or "health-concern". The default is to return problem list conditions.
          required: false
          schema:
            type: string
        - name: clinical-status
          in: query
          description: |-
            <p>Status of the condition</p>
            <table class="table table-hover">
            <tr>
            <th>FHIR Status</th>
            <th>Epic Status</th>
            </tr>
            <tr>
            <td>active</td>
            <td>active conditions</td>
            </tr>
            <tr>
            <td>resolved</td>
            <td> resolved conditions</td>
            </tr>
            <tr>
            <td>inactive</td>
            <td>deleted conditions</td>
            </tr>
            </table>
            <p>If no status is specified all active (confirmed) conditions will be returned. </p>
            <p>*Note: Any FHIR Status not listed in the above table is not returned.</p>
          required: false
          schema:
            type: string
        - name: encounter
          in: query
          description: A reference to an Encounter resource that the diagnosis is asserted. If not provided, only problem list conditions will be returned.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: The Patient FHIR resource ID.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Subject of the Condition.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ConditionSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Condition/{ID}:
    get:
      tags:
        - Condition
        - Read(ReasonforVisit)(R4)
      operationId: Condition_ReadReasonforVisitR4
      parameters:
        - name: ID
          in: path
          description: FHIR identifier for the target Condition resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Condition/{ID}:
    get:
      tags:
        - Condition
        - Read(EncounterDiagnosis,Problems)(STU3)
      operationId: Condition_ReadEncounterDiagnosis,ProblemsSTU3
      parameters:
        - name: ID
          in: path
          description: The Condition FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/Condition/{ID}:
    get:
      tags:
        - Condition
        - Read(Problems)(DSTU2)
      operationId: Condition_ReadProblemsDSTU2
      parameters:
        - name: ID
          in: path
          description: The Condition FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/Condition:
    get:
      tags:
        - Condition
        - Search(Problems)(DSTU2)
      operationId: Condition_SearchProblemsDSTU2
      parameters:
        - name: category
          in: query
          description: Type of condition – must be “Diagnosis”.
          required: false
          schema:
            type: string
        - name: clinicalStatus
          in: query
          description: |-
            <p>Status of the condition</p>
            <table class="table table-hover">
            <tr>
            <th>FHIR Status</th>
            <th>Epic Status</th>
            </tr>
            <tr>
            <td>active</td>
            <td>active conditions</td>
            </tr>
            <tr>
            <td>resolved</td>
            <td> resolved conditions</td>
            </tr>
            <tr>
            <td>inactive</td>
            <td>deleted conditions</td>
            </tr>
            </table>
            <p>If no status is specified all active (confirmed) conditions will be returned. </p>
            <p>*Note: Any FHIR Status not listed in the above table is not returned.</p>
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: The Patient FHIR resource ID.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Subject of the condition.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ConditionDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Consent/{ID}:
    get:
      tags:
        - Consent
        - Read(Document)(R4)
      operationId: Consent_ReadDocumentR4
      parameters:
        - name: ID
          in: path
          description: The FHIR ID for a Consent resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Consent/{ID}:
    get:
      tags:
        - Consent
        - Read(Document)(STU3)
      operationId: Consent_ReadDocumentSTU3
      parameters:
        - name: ID
          in: path
          description: The Consent FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Consent:
    get:
      tags:
        - Consent
        - Search(CodeStatus)(R4)
      operationId: Consent_SearchCodeStatusR4
      parameters:
        - name: category
          in: query
          description: The type of code status. Code statuses always include the Advanced Directive (acd) category from the specification of the FHIR ConsentCategoryCodes (consent-category) value set, and additional information about what type of code status.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: FHIR ID for the Patient the consent applies to.
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: 'The state of the code status for a patient. This value follows the specification of the FHIR ConsentState value set. '
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: FHIR ID for the Patient the consent applies to.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ConsentR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Consent:
    get:
      tags:
        - Consent
        - Search(Document)(STU3)
      operationId: Consent_SearchDocumentSTU3
      parameters:
        - name: category
          in: query
          description: |-
            <p>The type of consent document. This value follows the specification of the FHIR ConsentCategoryCodes (consent-category) value set, which includes LOINC codes and other identifiers. Additional values can be mapped by Epic organizations if desired.</p>
            <p>Supported consent categories include:</p>
            <ul>
            <li>59284-0 (Consent Document)</li>
            <li>64292-6 (Release of information Consent Document)</li>
            <li>84095-9 (Do not resuscitate)</li>
            <li>59284-0 (Clinical Consent)</li>
            <li>64293-4 (Procedure Consent Document)</li>
            <li>61359-6 (Anesthesia Consent Document)</li>
            <li>61358-8 (Surgical operation Consent Document)</li>
            <li>52027-0 (Abortion Consent Document)</li>
            <li>52029-6 (Sterilization Consent Document)</li>
            <li>64300-7 (Organ donation Consent Document)</li>
            <li>83930-8 (Research Consent Document)</li>
            </ul>
            <p>This API also supports SNOMED code 11341000146107-Advance Directive as a category.</p>
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: FHIR ID for the Patient the consent applies to.
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: |-
            <p>The state of the consent. This value follows the specification of the FHIR ConsentState value set. The following values have default out-of-the-box support in Epic. Additional statuses can be mapped by Epic organizations if desired.</p>
            <ul>
            <li>draft</li>
            <ul>
            <li>Corresponds to Epic value 11-Not Received</li>
            </ul>
            <li>active</li>
            <ul>
            <li>Corresponds to Epic values 10-Received and 20-Accepted</li>
            </ul>
            <li>rejected</li>
            <ul>
            <li>Corresponds to Epic value 1-Unknown</li>
            </ul>
            <li>entered-in-error</li>
            <ul>
            <li>Corresponds to Epic value 35-Error</li>
            </ul>
            <li>inactive</li>
            <ul>
            <li>Does not correspond to any Epic value by default</li>
            </ul>
            <li>proposed</li>
            <ul>
            <li>Does not correspond to any Epic value by default</li>
            </ul>
            </ul>
            <p>Consent documents with no status specified in Epic are returned when searching without a status parameter</p>
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: FHIR ID for the Patient the consent applies to.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ConsentSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Coverage/{ID}:
    get:
      tags:
        - Coverage
        - Read(R4)
      operationId: Coverage_ReadR4
      parameters:
        - name: ID
          in: path
          description: The FHIR Coverage ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoverageR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Coverage/{ID}:
    get:
      tags:
        - Coverage
        - Read(STU3)
      operationId: Coverage_ReadSTU3
      parameters:
        - name: ID
          in: path
          description: The Coverage FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoverageSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Coverage:
    get:
      tags:
        - Coverage
        - Search(R4)
      operationId: Coverage_SearchR4
      parameters:
        - name: beneficiary
          in: query
          description: <p>Either the beneficiary or the patient must be specified in the search request. If both are specified, they must match.</p>
          required: true
          schema:
            type: string
        - name: patient
          in: query
          description: <p>Either the beneficiary or the patient must be specified in the search request. If both are specified, they must match.</p>
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_CoverageR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Coverage:
    get:
      tags:
        - Coverage
        - Search(STU3)
      operationId: Coverage_SearchSTU3
      parameters:
        - name: beneficiary
          in: query
          description: <p>Either the beneficiary or the patient must be specified in the search request. If both are specified, they must match.</p>
          required: true
          schema:
            type: string
        - name: patient
          in: query
          description: <p>Either the beneficiary or the patient must be specified in the search request. If both are specified, they must match.</p>
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_CoverageSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/Device/{ID}:
    get:
      tags:
        - Device
        - Read(DSTU2)
      operationId: Device_ReadDSTU2
      parameters:
        - name: ID
          in: path
          description: The Device FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Device/{ID}:
    get:
      tags:
        - Device
        - Read(Implants)(R4)
      operationId: Device_ReadImplantsR4
      parameters:
        - name: ID
          in: path
          description: The Device FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Device/{ID}:
    get:
      tags:
        - Device
        - Read(ImplantsandExternalDevices)(STU3)
      operationId: Device_ReadImplantsandExternalDevicesSTU3
      parameters:
        - name: ID
          in: path
          description: The Device FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/Device:
    get:
      tags:
        - Device
        - Search(DSTU2)
      operationId: Device_SearchDSTU2
      parameters:
        - name: _id
          in: query
          description: A parameter
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: <p>Patient is always required.</p>
          required: true
          schema:
            type: string
        - name: type
          in: query
          description: <p>The type of the device.</p>
          required: false
          schema:
            type: string
        - name: udi
          in: query
          description: <p>FDA mandated Unique Device Identifier.</p>
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_DeviceDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Device:
    get:
      tags:
        - Device
        - Search(Implants)(R4)
      operationId: Device_SearchImplantsR4
      parameters:
        - name: device-name
          in: query
          description: <p>A string that may match the device UDI name.</p>
          required: false
          schema:
            type: string
        - name: manufacturer
          in: query
          description: <p>Device manufacturer.</p>
          required: false
          schema:
            type: string
        - name: model
          in: query
          description: <p>Device model.</p>
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: |-
            <p>Patient identifier for the patient to whom the device is affixed.</p>
            <p>This property is always required by Epic.</p>
          required: true
          schema:
            type: string
        - name: udi-carrier
          in: query
          description: <p>The UDI barcode string either in HRF format or AIDC format.</p>
          required: false
          schema:
            type: string
        - name: udi-di
          in: query
          description: |-
            <p>UDI device identifier.</p>
            <p>Under FDA regulations, all medical devices are required to include a Unique Device Identifier (UDI) on device labels and packages, in both human-readable and barcode format. The FDA also maintains a public database of medical devices and UDI information called the <a href="https://accessgudid.nlm.nih.gov/">Global Unique Device Identification Database (GUDID)</a>.</p>
            <p>A Unique Device Identifier (UDI) is a unique numeric or alphanumeric code that is comprised of two components:</p>
            <ul>
              <li>Device Identifier (DI) ("Static UDI") – a mandatory, fixed portion of a UDI that identifies the labeler and specific version or model of a device.</li>
              <li>Production Identifiers (PI) ("Dynamic UDI") – a conditional, variable portion of a UDI that identifies one or more of the following:</li>
              <ul>
              <li>Lot or batch number within which a device was manufactured</li>
              <li>Serial number of a specific device</li>
              <li>Expiration date of a specific device</li>
              <li>Production date of a specific device</li>
              <li>Distinct identification code for a human cell, tissue, or cellular- and tissue-based product</li>
            </ul>
            </ul>
            <p>When documenting a UDI for an implant in OpTime, you will need to use an identifier that is in a valid format for the selected issuer. Here are some example UDIs you can use for testing:</p>
            <table class="table table-hover">
            <tr>
              <th>UDI Type / Issuer</th>
              <th>Example Device ID</th>
            </tr>
            <tr>
              <td>ICCBBA</td>
              <td>W4184228005T0473</td>
            </tr>
            <tr>
              <td>HIBC</td>
              <td>MDLXMAG120200</td>
            </tr>
            <tr>
              <td>GS1</td>
              <td>00822409025305</td>
            </tr>
            </table>
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_DeviceR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Device:
    get:
      tags:
        - Device
        - Search(ImplantsandExternalDevices)(STU3)
      operationId: Device_SearchImplantsandExternalDevicesSTU3
      parameters:
        - name: device-name
          in: query
          description: <p>A string that may match the device UDI name.</p>
          required: false
          schema:
            type: string
        - name: manufacturer
          in: query
          description: <p>Device manufacturer.</p>
          required: false
          schema:
            type: string
        - name: model
          in: query
          description: <p>Device model.</p>
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: <p>Patient identifier for the patient to whom the device is affixed.</p>
          required: true
          schema:
            type: string
        - name: udi-carrier
          in: query
          description: <p>The UDI barcode string either in HRF format or AIDC format.</p>
          required: false
          schema:
            type: string
        - name: udi-di
          in: query
          description: |-
            <p>UDI device identifier.</p>
            <p>Under FDA regulations, all medical devices are required to include a Unique Device Identifier (UDI) on device labels and packages, in both human-readable and barcode format. The FDA also maintains a public database of medical devices and UDI information called the <a href="https://accessgudid.nlm.nih.gov/">Global Unique Device Identification Database (GUDID)</a>.</p>
            <p>A Unique Device Identifier (UDI) is a unique numeric or alphanumeric code that is comprised of two components:</p>
            <ul>
              <li>Device Identifier (DI) ("Static UDI") – a mandatory, fixed portion of a UDI that identifiers the labeler and specific version or model of a device.</li>
              <li>Production Identifiers (PI) ("Dynamic UDI") – a conditional, variable portion of a UDI that identifies one or more of the following:</li>
              <ul>
              <li>Lot or batch number within which a device was manufactured</li>
              <li>Serial number of a specific device</li>
              <li>Expiration date of a specific device</li>
              <li>Production date of a specific device</li>
              <li>Distinct identification code for a human cell, tissue, or cellular- and tissue-based product</li>
            </ul>
            </ul>
            <p>When documenting a UDI for an implant in OpTime, you will need to use an identifier that is in a valid format for the selected issuer. Here are some example UDIs you can use for testing:</p>
            <table class="table table-hover">
            <tr>
              <th>UDI Type / Issuer</th>
              <th>Example Device ID</th>
            </tr>
            <tr>
              <td>ICCBBA</td>
              <td>W4184228005T0473</td>
            </tr>
            <tr>
              <td>HIBC</td>
              <td>MDLXMAG120200</td>
            </tr>
            <tr>
              <td>GS1</td>
              <td>00822409025305</td>
            </tr>
            </table>
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_DeviceSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/DeviceRequest/{ID}:
    get:
      tags:
        - DeviceRequest
        - Read(R4)
      operationId: DeviceRequest_ReadR4
      parameters:
        - name: ID
          in: path
          description: The DeviceRequest FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceRequestR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/DeviceRequest/{ID}:
    get:
      tags:
        - DeviceRequest
        - Read(STU3)
      operationId: DeviceRequest_ReadSTU3
      parameters:
        - name: ID
          in: path
          description: The DeviceRequest FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceRequestSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/DeviceRequest:
    get:
      tags:
        - DeviceRequest
        - Search(R4)
      operationId: DeviceRequest_SearchR4
      parameters:
        - name: patient
          in: query
          description: |-
            <p>Patient identifier for the patient who is the target of the request</p>
            <p>This property is always required by Epic.</p>
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: |-
            <p>The status of a request. Can be one of the following:</p>
            <ul>
            <li>active</li>
            <li>completed</li>
            <li>draft</li>
            <li>cancelled</li>
            <li>unknown</li>
            </ul>
            <p>If unspecified, returns requests of all statuses.</p>
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_DeviceRequestR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/DeviceRequest:
    get:
      tags:
        - DeviceRequest
        - Search(STU3)
      operationId: DeviceRequest_SearchSTU3
      parameters:
        - name: patient
          in: query
          description: |-
            <p>Patient identifier for the patient who is the target of the request</p>
            <p>This property is always required by Epic.</p>
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: |-
            <p>The status of a request. Can be one of the following:</p>
            <ul>
            <li>active</li>
            <li>completed</li>
            <li>draft</li>
            <li>cancelled</li>
            <li>unknown</li>
            </ul>
            <p>If unspecified, returns requests of all statuses.</p>
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_DeviceRequestSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/DeviceUseStatement/{ID}:
    get:
      tags:
        - DeviceUseStatement
        - Read(Implants)(R4)
      operationId: DeviceUseStatement_ReadImplantsR4
      parameters:
        - name: ID
          in: path
          description: The DeviceUseStatement FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceUseStatementR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/DeviceUseStatement/{ID}:
    get:
      tags:
        - DeviceUseStatement
        - Read(ImplantsandExternalDevices)(STU3)
      operationId: DeviceUseStatement_ReadImplantsandExternalDevicesSTU3
      parameters:
        - name: ID
          in: path
          description: The DeviceUseStatement FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceUseStatementSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/DeviceUseStatement:
    get:
      tags:
        - DeviceUseStatement
        - Search(Implants)(R4)
      operationId: DeviceUseStatement_SearchImplantsR4
      parameters:
        - name: patient
          in: query
          description: A parameter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_DeviceUseStatementR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/DeviceUseStatement:
    get:
      tags:
        - DeviceUseStatement
        - Search(ImplantsandExternalDevices)(STU3)
      operationId: DeviceUseStatement_SearchImplantsandExternalDevicesSTU3
      parameters:
        - name: patient
          in: query
          description: Patient identifier for the patient using the device.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_DeviceUseStatementSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/DiagnosticReport/{ID}:
    get:
      tags:
        - DiagnosticReport
        - Read(Results)(DSTU2)
      operationId: DiagnosticReport_ReadResultsDSTU2
      parameters:
        - name: ID
          in: path
          description: The DiagnosticReport FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticReportDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/DiagnosticReport/{ID}:
    get:
      tags:
        - DiagnosticReport
        - Read(Results)(R4)
      operationId: DiagnosticReport_ReadResultsR4
      parameters:
        - name: ID
          in: path
          description: The DiagnosticReport FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticReportR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/DiagnosticReport/{ID}:
    get:
      tags:
        - DiagnosticReport
        - Read(Results)(STU3)
      operationId: DiagnosticReport_ReadResultsSTU3
      parameters:
        - name: ID
          in: path
          description: The DiagnosticReport FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiagnosticReportSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/DiagnosticReport:
    get:
      tags:
        - DiagnosticReport
        - Search(Results)(DSTU2)
      operationId: DiagnosticReport_SearchResultsDSTU2
      parameters:
        - name: code
          in: query
          description: LOINC code of procedure(s).
          required: false
          schema:
            type: string
        - name: date
          in: query
          description: Date when obtained.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: The patient FHIR ID.
          required: true
          schema:
            type: string
        - name: subject
          in: query
          description: The patient FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_DiagnosticReportDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/DiagnosticReport:
    get:
      tags:
        - DiagnosticReport
        - Search(Results)(R4)
      operationId: DiagnosticReport_SearchResultsR4
      parameters:
        - name: category
          in: query
          description: |-
            <p>The service category.</p>
            <ul><li>Starting in the November 2021 version of Epic (or the August 2021 version with special updates), this can be either an Epic order type or a value from the <a href="http://hl7.org/fhir/us/core/2019Sep/ValueSet-us-core-diagnosticreport-category.html">US Core valueset for DiagnosticReport</a>.
            <li>In earlier versions, this must be a value from the <a href="http://hl7.org/fhir/us/core/2019Sep/ValueSet-us-core-diagnosticreport-category.html">US Core valueset for DiagnosticReport</a>.</ul>
          required: false
          schema:
            type: string
        - name: code
          in: query
          description: |
            The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result. 
            <ul><li>Starting in the November 2021 version of Epic, or the August 2021 version with special updates, this can be any code type associated with the procedures, including LOINC, CPT, SNOMED, or other code types mapped to a procedure in Epic.</li>
            <li>In earlier versions, this can only be a LOINC code.</li></ul>
          required: false
          schema:
            type: string
        - name: date
          in: query
          description: The date or date range the order was resulted.
          required: false
          schema:
            type: string
        - name: identifier
          in: query
          description: An identifier for the report. This can be the Epic order ID or the accession number.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: The reference to a patient resource.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: The reference to a patient resource.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_DiagnosticReportR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/DiagnosticReport:
    get:
      tags:
        - DiagnosticReport
        - Search(Results)(STU3)
      operationId: DiagnosticReport_SearchResultsSTU3
      parameters:
        - name: code
          in: query
          description: |
            The code for the report as a whole, as opposed to codes for the atomic results, which are the names on the observation resource referred to from the result. 
            <ul><li>Starting in the November 2021 version of Epic, or the August 2021 version with special updates, this can be any code type associated with the procedures, including LOINC, CPT, SNOMED, or other code types mapped to a procedure in Epic.</li>
            <li>In earlier versions, this can only be a LOINC code.</li></ul>
          required: false
          schema:
            type: string
        - name: date
          in: query
          description: The date or date range the order was resulted.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: The subject of the report if it is a patient.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: The subject of the report if it is a patient.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_DiagnosticReportSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/DocumentReference:
    post:
      tags:
        - DocumentReference
        - Create(ClinicalNotes)(STU3)
      operationId: DocumentReference_CreateClinicalNotesSTU3
      parameters: []
      responses:
        '201':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentReferenceSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
      requestBody:
        description: payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentReferenceSTU3'
    get:
      tags:
        - DocumentReference
        - Search(RadiologyResults)(STU3)
      operationId: DocumentReference_SearchRadiologyResultsSTU3
      parameters:
        - name: author
          in: query
          description: FHIR ID for the providers who signed or addended the study.
          required: false
          schema:
            type: string
        - name: class
          in: query
          description: Must be set to “imaging-result” if specified.
          required: false
          schema:
            type: string
        - name: indexed
          in: query
          description: The instant or range of instants when a study was addended or finalized.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: 'FHIR Patient ID. If provided, the search returns all matching results for this patient. '
          required: false
          schema:
            type: string
        - name: period
          in: query
          description: The instant when the exam was performed.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: 'FHIR Patient ID. If provided, the search returns all matching results for this patient. '
          required: false
          schema:
            type: string
        - name: type
          in: query
          description: LOINC code for the radiology result.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_DocumentReferenceSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/DocumentReference/{ID}:
    get:
      tags:
        - DocumentReference
        - Read(RadiologyResults)(STU3)
      operationId: DocumentReference_ReadRadiologyResultsSTU3
      parameters:
        - name: ID
          in: path
          description: The DocumentReference FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentReferenceSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/DocumentReference/{ID}:
    get:
      tags:
        - DocumentReference
        - Read(RadiologyResults)(R4)
      operationId: DocumentReference_ReadRadiologyResultsR4
      parameters:
        - name: ID
          in: path
          description: The DocumentReference FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentReferenceR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/DocumentReference/{ID}:
    get:
      tags:
        - DocumentReference
        - Read(GeneratedCCDA)(DSTU2)
      operationId: DocumentReference_ReadGeneratedCCDADSTU2
      parameters:
        - name: ID
          in: path
          description: The DocumentReference FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentReferenceDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/DocumentReference:
    get:
      tags:
        - DocumentReference
        - Search(RadiologyResults)(R4)
      operationId: DocumentReference_SearchRadiologyResultsR4
      parameters:
        - name: author
          in: query
          description: 'FHIR ID for the providers who signed or addended the study. '
          required: false
          schema:
            type: string
        - name: category
          in: query
          description: Must be set to “imaging-result” if specified.
          required: false
          schema:
            type: string
        - name: date
          in: query
          description: The instant or range of instants when a study was addended or finalized.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: The subject of the report if a patient
          required: false
          schema:
            type: string
        - name: period
          in: query
          description: The instant when the exam was performed.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: The patient that is the subject of the note.
          required: false
          schema:
            type: string
        - name: type
          in: query
          description: The LOINC or system code for the radiology result.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_DocumentReferenceR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/DocumentReference:
    get:
      tags:
        - DocumentReference
        - Search(GeneratedCCDA)(DSTU2)
      operationId: DocumentReference_SearchGeneratedCCDADSTU2
      parameters:
        - name: _id
          in: query
          description: Search for DocumentReference resources using one or more server IDs (equivalent to one or more Get /DocumentReference/{ID} requests). If _id is included in your search, all other parameters are ignored.
          required: false
          schema:
            type: string
        - name: class
          in: query
          description: Refine a search for DocumentReference resources by passing a LOINC code for document class (CCD and encounter supported). The default LOINC code for CCD is 34133-9 - Summarization of Episode Note. The default LOINC code for Encounter is 11506-3 - Subsequent Evaluation Note.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: Search for DocumentReference resources for a specified patient ID. You can use "patient" or "subject" equivalently, but they cannot be used at the same time for different references.
          required: false
          schema:
            type: string
        - name: period
          in: query
          description: Refine a search for DocumentReference resources by specifying a date or date range for the DocumentReference content. Enter dates in ISO 8601 format (YYYY[-MM[-DD[THH:MM[:SS][TZ]]]]). Local server time is assumed if time zone information is not included. Common FHIR operators such as gt, lt, ge, le, =, and ap are supported. When no period is specified, a customer setting is used to determine how far to look back. There is also a setting capping lookback. Another setting can limit what encounter types are returned. Encounters without clinical data will not be returned.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Search for DocumentReference resources for a specified patient ID. You can use "patient" or "subject" equivalently, but they cannot be used at the same time for different references.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_DocumentReferenceDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Encounter/{ID}:
    get:
      tags:
        - Encounter
        - Read(R4)
      operationId: Encounter_ReadR4
      parameters:
        - name: ID
          in: path
          description: The Encounter FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncounterR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Encounter/{ID}:
    get:
      tags:
        - Encounter
        - Read(STU3)
      operationId: Encounter_ReadSTU3
      parameters:
        - name: ID
          in: path
          description: The Encounter FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncounterSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Encounter:
    get:
      tags:
        - Encounter
        - Search(R4)
      operationId: Encounter_SearchR4
      parameters:
        - name: class
          in: query
          description: |+
            Classification of patient encounter. For organizations in the Netherlands, this element includes only the ACT encounter code.

          required: true
          schema:
            type: string
        - name: date
          in: query
          description: A date range that the encounter takes place.
          required: true
          schema:
            type: string
        - name: identifier
          in: query
          description: |-
            <p>Identifiers by which this encounter is known in the format &lt;code system&gt;|&lt;code&gt;.</p>
            <p>This search parameter is available starting in the August 2021 version of Epic.</p>
          required: true
          schema:
            type: string
        - name: onlyscannable
          in: query
          description: If "true", only scannable encounters are returned in the response. This feature requires a user to have login department context as part of the API request, otherwise error code 59100 is returned.
          required: true
          schema:
            type: string
        - name: patient
          in: query
          description: Reference to a patient resource.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Reference to a patient resource.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_EncounterR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Encounter:
    get:
      tags:
        - Encounter
        - Search(STU3)
      operationId: Encounter_SearchSTU3
      parameters:
        - name: class
          in: query
          description: Classification of patient encounter. For organizations in the Netherlands, this element includes only the ACT encounter code.
          required: false
          schema:
            type: string
        - name: date
          in: query
          description: A date range that the encounter takes place.
          required: false
          schema:
            type: string
        - name: identifier
          in: query
          description: |-
            <p>Identifiers by which this encounter is known in the format &lt;code system&gt;|&lt;code&gt;.</p>
            <p>This search parameter is available starting in the August 2021 version of Epic.</p>
          required: true
          schema:
            type: string
        - name: patient
          in: query
          description: Reference to a patient resource.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Reference to a patient resource.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_EncounterSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Endpoint/{ID}:
    get:
      tags:
        - Endpoint
        - Read(R4)
      operationId: Endpoint_ReadR4
      parameters:
        - name: ID
          in: path
          description: <p>The FHIR ID.</p>
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Endpoint/{ID}:
    get:
      tags:
        - Endpoint
        - Read(STU3)
      operationId: Endpoint_ReadSTU3
      parameters:
        - name: ID
          in: path
          description: <p>The FHIR ID.</p>
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/EpisodeOfCare/{ID}:
    get:
      tags:
        - EpisodeOfCare
        - Read(R4)
      operationId: EpisodeOfCare_ReadR4
      parameters:
        - name: ID
          in: path
          description: FHIR ID for this EpisodeOfCare instance.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpisodeOfCareR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/ExplanationOfBenefit/{ID}:
    get:
      tags:
        - ExplanationOfBenefit
        - Read(R4)
      operationId: ExplanationOfBenefit_ReadR4
      parameters:
        - name: ID
          in: path
          description: The FHIR ID for an ExplanationOfBenefit resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplanationOfBenefitR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/ExplanationOfBenefit:
    get:
      tags:
        - ExplanationOfBenefit
        - Search(R4)
      operationId: ExplanationOfBenefit_SearchR4
      parameters:
        - name: created
          in: query
          description: Creation date of the claim.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: The patient for whom claims data is being retrieved.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ExplanationOfBenefitR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/FamilyMemberHistory/{ID}:
    get:
      tags:
        - FamilyMemberHistory
        - Read(R4)
      operationId: FamilyMemberHistory_ReadR4
      parameters:
        - name: ID
          in: path
          description: FHIR ID for this FamilyMemberHistory instance
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FamilyMemberHistoryR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/FamilyMemberHistory:
    get:
      tags:
        - FamilyMemberHistory
        - Search(DSTU2)
      operationId: FamilyMemberHistory_SearchDSTU2
      parameters:
        - name: patient
          in: query
          description: The Patient resource with the associated FamilyMemberHistory.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: The Patient resource with the associated FamilyMemberHistory.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_FamilyMemberHistoryDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Flag/{ID}:
    get:
      tags:
        - Flag
        - Read(PatientFYI)(R4)
      operationId: Flag_ReadPatientFYIR4
      parameters:
        - name: ID
          in: path
          description: The Flag FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Flag/{ID}:
    get:
      tags:
        - Flag
        - Read(PatientFYI)(STU3)
      operationId: Flag_ReadPatientFYISTU3
      parameters:
        - name: ID
          in: path
          description: The Flag FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Flag:
    get:
      tags:
        - Flag
        - Search(Isolation)(R4)
      operationId: Flag_SearchIsolationR4
      parameters:
        - name: category
          in: query
          description: Always "isolation" for this sub-resource.
          required: false
          schema:
            type: string
        - name: encounter
          in: query
          description: Reference to an Encounter resource associated with an isolation. If no encounter is specified, all isolations are returned.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: Reference to a patient resource the isolation is for.
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Status of the isolation. If no status is specified, all isolations are returned.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Reference to a patient resource the isolation is for.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_FlagR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Flag:
    get:
      tags:
        - Flag
        - Search(Infection)(STU3)
      operationId: Flag_SearchInfectionSTU3
      parameters:
        - name: category
          in: query
          description: Always "infection" for this web service.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: Reference to a Patient resource the Flag is for.
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: 'The status of the infection: active or inactive.'
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Reference to a Patient resource the Flag is for.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_FlagSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Goal:
    post:
      tags:
        - Goal
        - Create(Patient)(STU3)
      operationId: Goal_CreatePatientSTU3
      parameters: []
      responses:
        '201':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
      requestBody:
        description: payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoalSTU3'
    get:
      tags:
        - Goal
        - Search(Patient)(STU3)
      operationId: Goal_SearchPatientSTU3
      parameters:
        - name: category
          in: query
          description: 'Based on  the category number by default, with Title and then Synonym as backups. Can use SNOMED if OID is specified and a mapping table has been built by the Epic community member. Ex: treatment, dietary, or behavioral.'
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: Associated Patient FHIR Resource ID.
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: |-
            <p>The current status of the goal. The following values are supported:</p>
            <ul>
            <li>in-progress,</li>
            <li>achieved</li>
            <li>cancelled</li>
            </ul>
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Associated Patient FHIR Resource ID.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_GoalSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Goal/{ID}:
    get:
      tags:
        - Goal
        - Read(Patient)(R4)
      operationId: Goal_ReadPatientR4
      parameters:
        - name: ID
          in: path
          description: The Goal FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/Goal/{ID}:
    get:
      tags:
        - Goal
        - Read(Patient)(DSTU2)
      operationId: Goal_ReadPatientDSTU2
      parameters:
        - name: ID
          in: path
          description: The Goal FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Goal/{ID}:
    get:
      tags:
        - Goal
        - Read(Patient)(STU3)
      operationId: Goal_ReadPatientSTU3
      parameters:
        - name: ID
          in: path
          description: The Goal FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Goal:
    get:
      tags:
        - Goal
        - Search(Patient)(R4)
      operationId: Goal_SearchPatientR4
      parameters:
        - name: category
          in: query
          description: 'Based on  the category number by default, with Title and then Synonym as backups. Can use SNOMED if OID is specified and a mapping table has been built by the Epic community member. Ex: treatment, dietary, or behavioral.'
          required: false
          schema:
            type: string
        - name: lifecycle-status
          in: query
          description: |-
            <p>The current status of the goal.  Previously called "status" in STU3. The following values are supported:</p>
            <ul>
            <li>active</li>
            <li>completed</li>
            <li>cancelled</li>
            </ul>
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: Associated Patient FHIR Resource ID.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Associated Patient FHIR Resource ID.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_GoalR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/Goal:
    get:
      tags:
        - Goal
        - Search(Patient)(DSTU2)
      operationId: Goal_SearchPatientDSTU2
      parameters:
        - name: category
          in: query
          description: Based on  the category number by default, with Title and then Synonym as backups. Can use SNOMED if OID is specified and a mapping table has been built by the Epic community member.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: Associated Patient FHIR Resource ID.
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: |-
            <p>The current status of the goal. The following values are supported:</p>
            <ul>
            <li>in-progress,</li>
            <li>achieved</li>
            <li>cancelled</li>
            </ul>
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Associated Patient FHIR Resource ID.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_GoalDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/Immunization/{ID}:
    get:
      tags:
        - Immunization
        - Read(DSTU2)
      operationId: Immunization_ReadDSTU2
      parameters:
        - name: ID
          in: path
          description: Immunization FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImmunizationDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Immunization/{ID}:
    get:
      tags:
        - Immunization
        - Read(R4)
      operationId: Immunization_ReadR4
      parameters:
        - name: ID
          in: path
          description: The Immunization FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImmunizationR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Immunization/{ID}:
    get:
      tags:
        - Immunization
        - Read(STU3)
      operationId: Immunization_ReadSTU3
      parameters:
        - name: ID
          in: path
          description: The Immunization FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImmunizationSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/Immunization:
    get:
      tags:
        - Immunization
        - Search(DSTU2)
      operationId: Immunization_SearchDSTU2
      parameters:
        - name: date
          in: query
          description: Vaccination administration date.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: Reference to the Patient who was immunized.
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: |-
            <p>Status of the Immunization. Possible values are:</p>
            <ul>
            <li>completed</li>
            <li>entered-in-error</li>
            <li>in-progress</li>
            <li>on-hold</li>
            </ul>
            <p>If not provided, will default to include only "completed" and "on-hold" immunizations.</p>
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Reference to the Patient who was immunized.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ImmunizationDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Immunization:
    get:
      tags:
        - Immunization
        - Search(R4)
      operationId: Immunization_SearchR4
      parameters:
        - name: date
          in: query
          description: Vaccination administration date.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: Reference to the Patient who was immunized.
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: |-
            <p>Status of the Immunization. Possible values are:</p>
            <ul>
            <li>completed</li>
            <li>entered-in-error</li>
            <li>not-done</li>
            </ul>
            <p>*Note: incomplete Immunizations are not supported.</p>
            <p> If no status is specified, all statuses are returned.</p>
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ImmunizationR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Immunization:
    get:
      tags:
        - Immunization
        - Search(STU3)
      operationId: Immunization_SearchSTU3
      parameters:
        - name: date
          in: query
          description: Vaccination administration date.
          required: false
          schema:
            type: string
        - name: notgiven
          in: query
          description: Flag for whether the immunization was given. If not provided, defaults to "false" to return only given immunizations.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: Reference to the Patient who was immunized.
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: <p>Immunization event status. “Completed” is the only supported value, and this value is used by default if no status value is specified.</p>
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ImmunizationSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/ImmunizationRecommendation/{ID}:
    get:
      tags:
        - ImmunizationRecommendation
        - Read(R4)
      operationId: ImmunizationRecommendation_ReadR4
      parameters:
        - name: ID
          in: path
          description: The FHIR ID of the recommended immunization order.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImmunizationRecommendationR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/ImmunizationRecommendation/{ID}:
    get:
      tags:
        - ImmunizationRecommendation
        - Read(STU3)
      operationId: ImmunizationRecommendation_ReadSTU3
      parameters:
        - name: ID
          in: path
          description: The FHIR ID of the recommended immunization order.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImmunizationRecommendationSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/ImmunizationRecommendation:
    get:
      tags:
        - ImmunizationRecommendation
        - Search(R4)
      operationId: ImmunizationRecommendation_SearchR4
      parameters:
        - name: patient
          in: query
          description: The patient associated with the immunization recommendation. Reference to the Patient resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ImmunizationRecommendationR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/ImmunizationRecommendation:
    get:
      tags:
        - ImmunizationRecommendation
        - Search(STU3)
      operationId: ImmunizationRecommendation_SearchSTU3
      parameters:
        - name: patient
          in: query
          description: The patient associated with the immunization recommendation. Reference to the Patient resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ImmunizationRecommendationSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/List/{ID}:
    get:
      tags:
        - List
        - Read(Problems)(R4)
      operationId: List_ReadProblemsR4
      parameters:
        - name: ID
          in: path
          description: The List FHIR ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/List/{ID}:
    get:
      tags:
        - List
        - Read(PatientsWithQuestionnairesDue)(STU3)
      operationId: List_ReadPatientsWithQuestionnairesDueSTU3
      parameters:
        - name: ID
          in: path
          description: The encoded list ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/List:
    get:
      tags:
        - List
        - Search(Medications)(R4)
      operationId: List_SearchMedicationsR4
      parameters:
        - name: code
          in: query
          description: The code representing the type of list to search. Must be "medications".
          required: false
          schema:
            type: string
        - name: encounter
          in: query
          description: Reference to the Encounter resource with which the List is associated.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: The Patient resource with whom the List is associated.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Reference to the Patient resource with whom the List is associated.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ListR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/List:
    get:
      tags:
        - List
        - Search(PatientsWithQuestionnairesDue)(STU3)
      operationId: List_SearchPatientsWithQuestionnairesDueSTU3
      parameters:
        - name: code
          in: query
          description: Always set to "patientswithquestionnairesduelist"
          required: true
          schema:
            type: string
        - name: date
          in: query
          description: Date by which the questionnaires are due.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ListSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Location/{ID}:
    get:
      tags:
        - Location
        - Read(R4)
      operationId: Location_ReadR4
      parameters:
        - name: ID
          in: path
          description: The Location FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Location/{ID}:
    get:
      tags:
        - Location
        - Read(STU3)
      operationId: Location_ReadSTU3
      parameters:
        - name: ID
          in: path
          description: 'The Location FHIR ID. '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Location:
    get:
      tags:
        - Location
        - Search(R4)
      operationId: Location_SearchR4
      parameters: []
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_LocationR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/Medication/{ID}:
    get:
      tags:
        - Medication
        - Read(DSTU2)
      operationId: Medication_ReadDSTU2
      parameters:
        - name: ID
          in: path
          description: <p>The FHIR ID referencing a medication.</p>
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Medication/{ID}:
    get:
      tags:
        - Medication
        - Read(R4)
      operationId: Medication_ReadR4
      parameters:
        - name: ID
          in: path
          description: <p>The FHIR ID referencing a medication.</p>
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Medication/{ID}:
    get:
      tags:
        - Medication
        - Read(STU3)
      operationId: Medication_ReadSTU3
      parameters:
        - name: ID
          in: path
          description: <p>The FHIR ID referencing a medication.</p>
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/Medication:
    get:
      tags:
        - Medication
        - Search(DSTU2)
      operationId: Medication_SearchDSTU2
      parameters:
        - name: _id
          in: query
          description: <p>The FHIR ID referencing a medication.</p>
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_MedicationDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Medication:
    get:
      tags:
        - Medication
        - Search(R4)
      operationId: Medication_SearchR4
      parameters: []
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_MedicationR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/MedicationDispense/{ID}:
    get:
      tags:
        - MedicationDispense
        - Read(VerifiedOrders)(R4)
      operationId: MedicationDispense_ReadVerifiedOrdersR4
      parameters:
        - name: ID
          in: path
          description: The MedicationDispense FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationDispenseR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/MedicationDispense/{ID}:
    get:
      tags:
        - MedicationDispense
        - Read(VerifiedOrders)(STU3)
      operationId: MedicationDispense_ReadVerifiedOrdersSTU3
      parameters:
        - name: ID
          in: path
          description: The MedicationDispense FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationDispenseSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/MedicationDispense:
    get:
      tags:
        - MedicationDispense
        - Search(VerifiedOrders)(R4)
      operationId: MedicationDispense_SearchVerifiedOrdersR4
      parameters:
        - name: patient
          in: query
          description: The Patient FHIR ID.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: The Patient FHIR ID.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_MedicationDispenseR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/MedicationDispense:
    get:
      tags:
        - MedicationDispense
        - Search(VerifiedOrders)(STU3)
      operationId: MedicationDispense_SearchVerifiedOrdersSTU3
      parameters:
        - name: patient
          in: query
          description: The FHIR Patient ID.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: The FHIR Patient ID.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_MedicationDispenseSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/MedicationOrder/{ID}:
    get:
      tags:
        - MedicationOrder
        - Read(DSTU2)
      operationId: MedicationOrder_ReadDSTU2
      parameters:
        - name: ID
          in: path
          description: FHIR ID of the MedicationOrder resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationOrderDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/MedicationOrder:
    get:
      tags:
        - MedicationOrder
        - Search(DSTU2)
      operationId: MedicationOrder_SearchDSTU2
      parameters:
        - name: _id
          in: query
          description: FHIR ID of the MedicationOrder resource(s). If _id is included in the search, all other parameters are ignored.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: FHIR ID for a patient to list dispenses for.
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: By default, active medications are returned. Statuses of completed, on-hold, and stopped can also be specified.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: FHIR ID for a patient to list dispenses for.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_MedicationOrderDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/MedicationRequest/{ID}:
    get:
      tags:
        - MedicationRequest
        - |
          Read(Orders)(STU3)
      operationId: |
        MedicationRequest_ReadOrdersSTU3
      parameters:
        - name: ID
          in: path
          description: A medicationRequest FHIR ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationRequestSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/MedicationRequest:
    get:
      tags:
        - MedicationRequest
        - Search(Orders)(R4)
      operationId: MedicationRequest_SearchOrdersR4
      parameters:
        - name: authoredon
          in: query
          description: This parameter is allowed, but ignored.
          required: true
          schema:
            type: string
        - name: category
          in: query
          description: |-
            <p>The category of medication orders to search for. By default all categories are searched.</p>
            Supported categories:
            <ul>
            <li>Inpatient</li>
            <li>Outpatient (those administered in the clinic - CAMS)</li>
            <li>Community (prescriptions)</li>
            </ul>
          required: true
          schema:
            type: string
        - name: intent
          in: query
          description: Only ‘order’ and ‘plan’ are supported.
          required: true
          schema:
            type: string
        - name: patient
          in: query
          description: The FHIR patient ID.
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: |-
            <p>The status for medication orders. By default, all statuses are returned.</p>
            Supported statuses:
            <ul>
            <li>On-hold</li>
            <li>Completed</li>
            <li>Stopped</li>
            <li>Active</li>
            </ul>
          required: true
          schema:
            type: string
        - name: subject
          in: query
          description: The FHIR patient ID.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_MedicationRequestR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/MedicationRequest:
    get:
      tags:
        - MedicationRequest
        - Search(Orders)(STU3)
      operationId: MedicationRequest_SearchOrdersSTU3
      parameters:
        - name: authoredon
          in: query
          description: This parameter is allowed, but ignored.
          required: true
          schema:
            type: string
        - name: category
          in: query
          description: |-
            <p>The category of medication orders to search for. By default all categories are searched.</p>
            <br>
            <p>Supported categories:</p>
            <ul><li>inpatient</li>
            <li>outpatient</li>
            <li>community</li>
            <li>patientspecified</li></ul>
          required: true
          schema:
            type: string
        - name: date
          in: query
          description: A parameter
          required: true
          schema:
            type: string
        - name: patient
          in: query
          description: The FHIR Patient ID. Either this element or Subject is required.
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: |-
            <p>The status for medication orders. By default, active is assumed. Active must be present in all searches (i.e. you cannot search for just completed meds).</p>
            <br>
            <p>Supported statuses:</p>
            <ul><li>On-hold</li>
            <li>Completed</li>
            <li>Stopped</li>
            <li>Active</li></ul>
          required: true
          schema:
            type: string
        - name: subject
          in: query
          description: The FHIR patient ID. Either this element or Patient is required.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_MedicationRequestSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/MedicationStatement/{ID}:
    get:
      tags:
        - MedicationStatement
        - Read(DSTU2)
      operationId: MedicationStatement_ReadDSTU2
      parameters:
        - name: ID
          in: path
          description: The FHIR ID of the MedicationStatement resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationStatementDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/MedicationStatement/{ID}:
    get:
      tags:
        - MedicationStatement
        - Read(STU3)
      operationId: MedicationStatement_ReadSTU3
      parameters:
        - name: ID
          in: path
          description: The MedicationStatement FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationStatementSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/MedicationStatement:
    get:
      tags:
        - MedicationStatement
        - Search(DSTU2)
      operationId: MedicationStatement_SearchDSTU2
      parameters:
        - name: _id
          in: query
          description: The FHIR resource ID of an individual MedicationStatement resource. If specified, other search parameters are ignored.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: The FHIR resource ID of the linked patient.
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: The status of the order. If a status is not provided in the search, then only medications with an active status are returned. This is to avoid end user confusion and protect patient safety.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_MedicationStatementDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/MedicationStatement:
    get:
      tags:
        - MedicationStatement
        - Search(STU3)
      operationId: MedicationStatement_SearchSTU3
      parameters:
        - name: category
          in: query
          description: |-
            <p>The category of medication orders to search for. By default all categories are searched.</p>

            Supported categories:
            <ul>
            <li>inpatient</li>
            <li>outpatient</li>
            <li>community</li>
            <li>patientspecified</li>

            <p>Starting in February 2022 or November 2021 with special update, organizations in the Netherlands can use the code 6 to search for MedicationUse profiles.</p>
          required: false
          schema:
            type: string
        - name: effective
          in: query
          description: Date when patient was taking (or not taking) the medication.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: The FHIR Patient ID. Either this element or Subject is required.
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: |-
            <p>The status for medication orders. By default, active is assumed. Active must be present in all searches (i.e. you cannot search for just completed meds).</p>

            Supported statuses:
            <ul>
            <li>On-hold</li>
            <li>Completed</li>
            <li>Stopped</li>
            <li>Active</li>
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: The FHIR patient ID. Either this element or Patient is required.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_MedicationStatementSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/NutritionOrder/{ID}:
    get:
      tags:
        - NutritionOrder
        - Read(R4)
      operationId: NutritionOrder_ReadR4
      parameters:
        - name: ID
          in: path
          description: FHIR identifier for a NutritionOrder resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NutritionOrderR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/NutritionOrder/{ID}:
    get:
      tags:
        - NutritionOrder
        - Read(STU3)
      operationId: NutritionOrder_ReadSTU3
      parameters:
        - name: ID
          in: path
          description: FHIR identifier for a NutritionOrder resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NutritionOrderSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/NutritionOrder:
    get:
      tags:
        - NutritionOrder
        - Search(R4)
      operationId: NutritionOrder_SearchR4
      parameters:
        - name: patient
          in: query
          description: FHIR identifier for the patient whose nutrition order details are being requested.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_NutritionOrderR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/NutritionOrder:
    get:
      tags:
        - NutritionOrder
        - Search(STU3)
      operationId: NutritionOrder_SearchSTU3
      parameters:
        - name: patient
          in: query
          description: FHIR identifier for the patient whose nutrition order details are being requested.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_NutritionOrderSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Observation/$lastn:
    get:
      tags:
        - Observation
        - $lastn(SocialHistory)(STU3)
      operationId: Observation_$lastnSocialHistorySTU3
      parameters:
        - name: category
          in: query
          description: Use "social-history" to search for living situation observations.
          required: false
          schema:
            type: string
        - name: code
          in: query
          description: |-
            <p>Use the following SNOMED code to search for living situation:</p>
            <ul><li>365508006: Living situation</li></ul>
          required: true
          schema:
            type: string
        - name: max
          in: query
          description: The maximum amount of responses for each subtype of the category.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: Reference to a patient resource.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: The reference to a patient resource.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ObservationSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Observation:
    post:
      tags:
        - Observation
        - Create(Vitals)(R4)
      operationId: Observation_CreateVitalsR4
      parameters: []
      responses:
        '201':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
      requestBody:
        description: payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservationR4'
    get:
      tags:
        - Observation
        - Search(Vitals)(R4)
      operationId: Observation_SearchVitalsR4
      parameters:
        - name: category
          in: query
          description: Use "vital-signs" to search for vitals observations. Either this element or code must be provided, but not both.
          required: true
          schema:
            type: string
        - name: code
          in: query
          description: |-
            <p>LOINC code, CADSR code, flowsheet ID, or encoded flowsheet ID. Either this element or category must be provided, but not both.</p>
            <p>The code element value varies depending upon what is passed (for example, a flowsheet ID vs. a LOINC code). If using a flowsheet ID, the system value is different between Epic organizations, and it is also different between production and non-production environments for the same organization.</p>
          required: true
          schema:
            type: string
        - name: date
          in: query
          description: |-
            <p>The date range for when the observation was taken.
            <p>For growth chart data (Epic version August 2021 and later), only the most recent observation within the timeframe is returned.
          required: true
          schema:
            type: string
        - name: patient
          in: query
          description: Reference to a patient resource the observation is about. Either this element or subject must be provided. If both are provided, they must match.
          required: true
          schema:
            type: string
        - name: subject
          in: query
          description: Reference to a patient resource the observation is about. Either this element or patient must be provided. If both are provided, they must match.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ObservationR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Observation:
    post:
      tags:
        - Observation
        - Create(Vitals)(STU3)
      operationId: Observation_CreateVitalsSTU3
      parameters: []
      responses:
        '201':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
      requestBody:
        description: payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservationSTU3'
    get:
      tags:
        - Observation
        - Search(Vitals)(STU3)
      operationId: Observation_SearchVitalsSTU3
      parameters:
        - name: category
          in: query
          description: Use "vital-signs" to search for vitals observations. Either this element or code must be provided, but not both.
          required: true
          schema:
            type: string
        - name: code
          in: query
          description: |-
            <p>LOINC code, CADSR code, or encoded flowsheet ID. Either this element or category must be provided, but not both.</p>
            <p>The code element value varies depending upon what is passed (for example, a flowsheet ID vs. a LOINC code). If using a flowsheet ID, the system value is different between Epic organizations, and it is also different between production and non-production environments for the same organization.</p>
          required: true
          schema:
            type: string
        - name: date
          in: query
          description: The date range for when the observation was taken.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: Reference to a patient resource the observation is about. Either this element or subject must be provided. If both are provided, they must match.
          required: true
          schema:
            type: string
        - name: subject
          in: query
          description: Reference to a patient resource the observation is about. Either this element or patient must be provided. If both are provided, they must match.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ObservationSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
    put:
      tags:
        - Observation
        - Update(LDA-W)(STU3)
      operationId: Observation_UpdateLDA-WSTU3
      parameters: []
      responses:
        '201':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
      requestBody:
        description: payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservationSTU3'
  /R4/Observation/{ID}:
    get:
      tags:
        - Observation
        - Read(Vitals)(R4)
      operationId: Observation_ReadVitalsR4
      parameters:
        - name: ID
          in: path
          description: The observation FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
    put:
      tags:
        - Observation
        - Update(LDA-W)(R4)
      operationId: Observation_UpdateLDA-WR4
      parameters:
        - name: ID
          in: path
          description: The Observation ID.
          required: true
          schema:
            type: string
      responses:
        '201':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
      requestBody:
        description: payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservationR4'
  /STU3/Observation/{ID}:
    get:
      tags:
        - Observation
        - Read(Vitals)(STU3)
      operationId: Observation_ReadVitalsSTU3
      parameters:
        - name: ID
          in: path
          description: The observation FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/Observation/{ID}:
    get:
      tags:
        - Observation
        - Read(Vitals)(DSTU2)
      operationId: Observation_ReadVitalsDSTU2
      parameters:
        - name: ID
          in: path
          description: A parameter
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/Observation:
    get:
      tags:
        - Observation
        - Search(Vitals)(DSTU2)
      operationId: Observation_SearchVitalsDSTU2
      parameters:
        - name: _id
          in: query
          description: List of Observation Read Ids.
          required: true
          schema:
            type: string
        - name: category
          in: query
          description: Search for Observation resources for a valid category (vital-signs, social-history, laboratory). Both patient and category (or code) are required for a valid patient-based search.
          required: true
          schema:
            type: string
        - name: code
          in: query
          description: LOINC code for the type of observation - translated to a flowsheet id by EXM mapping.
          required: false
          schema:
            type: string
        - name: date
          in: query
          description: Date or date range for which the observation applies.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: FHIR Patient ID
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ObservationDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Organization/{ID}:
    get:
      tags:
        - Organization
        - Read(R4)
      operationId: Organization_ReadR4
      parameters:
        - name: ID
          in: path
          description: <p>The Organization FHIR ID.</p>
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Organization/{ID}:
    get:
      tags:
        - Organization
        - Read(STU3)
      operationId: Organization_ReadSTU3
      parameters:
        - name: ID
          in: path
          description: <p>The Organization FHIR ID.</p>
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Organization:
    get:
      tags:
        - Organization
        - Search(R4)
      operationId: Organization_SearchR4
      parameters: []
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_OrganizationR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Patient:
    post:
      tags:
        - Patient
        - Create(R4)
      operationId: Patient_CreateR4
      parameters: []
      responses:
        '201':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
      requestBody:
        description: payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientR4'
    get:
      tags:
        - Patient
        - Search(R4)
      operationId: Patient_SearchR4
      parameters:
        - name: address
          in: query
          description: The patient's street address.
          required: false
          schema:
            type: string
        - name: address-city
          in: query
          description: The city for patient's home address.
          required: false
          schema:
            type: string
        - name: address-postalcode
          in: query
          description: The postal code for patient's home address.
          required: false
          schema:
            type: string
        - name: address-state
          in: query
          description: The state for the patient's home address.
          required: false
          schema:
            type: string
        - name: birthdate
          in: query
          description: The patient's date of birth in the format YYYY-MM-DD.
          required: false
          schema:
            type: string
        - name: family
          in: query
          description: The patient's family (last) name.
          required: false
          schema:
            type: string
        - name: gender
          in: query
          description: The patient's legal sex. Starting in the August 2021 version of Epic, the legal-sex parameter is preferred.
          required: false
          schema:
            type: string
        - name: given
          in: query
          description: The patient's given name. May include first and middle names.
          required: false
          schema:
            type: string
        - name: identifier
          in: query
          description: |-
            <p>The patient's identifier.</p>

            <p>Starting in November 2018, this web service supports using ID and ID type combinations, such as Patient?identifier=MRN|202497.</p>
          required: false
          schema:
            type: string
        - name: legal-sex
          in: query
          description: The patient’s legal sex. Takes precedence over the gender search parameter. Available starting in the August 2021 version of Epic.
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: Any part of the patient's name. When discrete name parameters are used, such as family or given, this parameter is ignored.
          required: false
          schema:
            type: string
        - name: own-name
          in: query
          description: The patient's own last name. Usually used in non-US names.
          required: false
          schema:
            type: string
        - name: own-prefix
          in: query
          description: The patient's own prefix. Usually used in non-US names.
          required: false
          schema:
            type: string
        - name: partner-name
          in: query
          description: The patient's spouse's last name. Usually used in non-US names.
          required: false
          schema:
            type: string
        - name: partner-prefix
          in: query
          description: The patient's spouse's prefix. Usually used in non-US names.
          required: false
          schema:
            type: string
        - name: telecom
          in: query
          description: The patient's phone number or email.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_PatientR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Patient:
    post:
      tags:
        - Patient
        - Create(STU3)
      operationId: Patient_CreateSTU3
      parameters: []
      responses:
        '201':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
      requestBody:
        description: payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientSTU3'
    get:
      tags:
        - Patient
        - Search(STU3)
      operationId: Patient_SearchSTU3
      parameters:
        - name: address
          in: query
          description: The patient's street address.
          required: false
          schema:
            type: string
        - name: address-city
          in: query
          description: The city for patient's home address.
          required: false
          schema:
            type: string
        - name: address-postalcode
          in: query
          description: The postal code for patient's home address.
          required: false
          schema:
            type: string
        - name: address-state
          in: query
          description: The state for the patient's home address.
          required: false
          schema:
            type: string
        - name: birthdate
          in: query
          description: The patient's date of birth in the format YYYY-MM-DD.
          required: false
          schema:
            type: string
        - name: family
          in: query
          description: The patient's family (last) name.
          required: false
          schema:
            type: string
        - name: gender
          in: query
          description: The patient's legal sex. Starting in the August 2021 version of Epic, the legal-sex parameter is preferred.
          required: false
          schema:
            type: string
        - name: given
          in: query
          description: The patient's given name. May include first and middle names.
          required: false
          schema:
            type: string
        - name: identifier
          in: query
          description: |-
            <p>The patient's identifier.</p>

            <p>This web service supports using ID and ID type combinations, such as Patient?identifier=MRN|202497.</p>
          required: false
          schema:
            type: string
        - name: legal-sex
          in: query
          description: The patient’s legal sex. Takes precedence over the gender search parameter.   Available starting in the August 2021 version of Epic.
          required: false
          schema:
            type: string
        - name: own-name
          in: query
          description: The patient's own last name. Usually used in non-US names.
          required: false
          schema:
            type: string
        - name: own-prefix
          in: query
          description: The patient's own prefix. Usually used in non-US names.
          required: false
          schema:
            type: string
        - name: partner-name
          in: query
          description: The patient's spouse's last name. Usually used in non-US names.
          required: false
          schema:
            type: string
        - name: partner-prefix
          in: query
          description: The patient's spouse's prefix. Usually used in non-US names.
          required: false
          schema:
            type: string
        - name: telecom
          in: query
          description: The patient's phone number or email.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_PatientSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/Patient/{ID}:
    get:
      tags:
        - Patient
        - Read(DSTU2)
      operationId: Patient_ReadDSTU2
      parameters:
        - name: ID
          in: path
          description: The Patient's FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Patient/{ID}:
    get:
      tags:
        - Patient
        - Read(R4)
      operationId: Patient_ReadR4
      parameters:
        - name: ID
          in: path
          description: The patient FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Patient/{ID}:
    get:
      tags:
        - Patient
        - Read(STU3)
      operationId: Patient_ReadSTU3
      parameters:
        - name: ID
          in: path
          description: The patient FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/Patient:
    get:
      tags:
        - Patient
        - Search(DSTU2)
      operationId: Patient_SearchDSTU2
      parameters:
        - name: _id
          in: query
          description: The Patient's FHIR ID.
          required: false
          schema:
            type: string
        - name: address
          in: query
          description: Addresses for the patient.
          required: false
          schema:
            type: string
        - name: birthdate
          in: query
          description: The patient's date of birth in the format YYYY-MM-DD.
          required: false
          schema:
            type: string
        - name: family
          in: query
          description: 'The patient''s family (last) name. '
          required: false
          schema:
            type: string
        - name: gender
          in: query
          description: The patient's legal sex.
          required: false
          schema:
            type: string
        - name: given
          in: query
          description: The patient's given name. May include first and middle names.
          required: false
          schema:
            type: string
        - name: identifier
          in: query
          description: Identifiers and assigning authorities associated with a patient. These are of the format &lt;OID&gt;|&lt;value&gt;.
          required: false
          schema:
            type: string
        - name: telecom
          in: query
          description: 'Telephone numbers and email addresses for the patient, along with their use (i.e. home, work, etc.)  '
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_PatientDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/Practitioner/{ID}:
    get:
      tags:
        - Practitioner
        - Read(DSTU2)
      operationId: Practitioner_ReadDSTU2
      parameters:
        - name: ID
          in: path
          description: The FHIR ID of a practitioner.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Practitioner/{ID}:
    get:
      tags:
        - Practitioner
        - Read(R4)
      operationId: Practitioner_ReadR4
      parameters:
        - name: ID
          in: path
          description: The ID of a practitioner.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Practitioner/{ID}:
    get:
      tags:
        - Practitioner
        - Read(STU3)
      operationId: Practitioner_ReadSTU3
      parameters:
        - name: ID
          in: path
          description: The ID of a practitioner.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/Practitioner:
    get:
      tags:
        - Practitioner
        - Search(DSTU2)
      operationId: Practitioner_SearchDSTU2
      parameters:
        - name: address
          in: query
          description: Search for Practitioner resources by any part of an address, such as street or city, where a practitioner can be found.
          required: false
          schema:
            type: string
        - name: address_city
          in: query
          description: Search for Practitioner resources using the city portion of the address at which the practitioner can be found. This parameter must be used with the address_postalcode parameter.
          required: false
          schema:
            type: string
        - name: address_postalcode
          in: query
          description: Search for Practitioner resources using the postal code portion of the address at which the practitioner can be found.
          required: false
          schema:
            type: string
        - name: address_state
          in: query
          description: Search for Practitioner resources using the state portion of the address at which the practitioner can be found.
          required: false
          schema:
            type: string
        - name: family
          in: query
          description: |-
            <p>Search for Practitioner resources by family (last) name. Family name searching supports both exact and "sounds like" matches.</p>

            <p>Either Family or Specialty is required for a search to succeed.</p>
          required: false
          schema:
            type: string
        - name: gender
          in: query
          description: 'Search for Practitioner resources using the following gender codes: "female", "male", or "unknown".'
          required: false
          schema:
            type: string
        - name: given
          in: query
          description: Search for Practitioner resources by given (first) name. Given name searching supports both exact and "sounds like" matches.
          required: false
          schema:
            type: string
        - name: specialty
          in: query
          description: |-
            <p>Search for Practitioner resources by specialty in the format [code system]|[code].</p>

            <p>Either Family or Specialty is required for a search to succeed.</p>
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_PractitionerDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Practitioner:
    get:
      tags:
        - Practitioner
        - Search(R4)
      operationId: Practitioner_SearchR4
      parameters:
        - name: address
          in: query
          description: The free-text address.
          required: false
          schema:
            type: string
        - name: address-city
          in: query
          description: The city specified in the address. City cannot be specified without state or ZIP code.
          required: false
          schema:
            type: string
        - name: address-postalcode
          in: query
          description: A ZIP code specified in the address.
          required: false
          schema:
            type: string
        - name: address-state
          in: query
          description: A state specified in the address.
          required: false
          schema:
            type: string
        - name: family
          in: query
          description: A portion of the family name. If name or identifier is provided, this is not required.
          required: true
          schema:
            type: string
        - name: given
          in: query
          description: A portion of the given name. If Given is provided, Family must also be provided.
          required: false
          schema:
            type: string
        - name: identifier
          in: query
          description: A practitioner's identifier, such as NPI. If Family or Name is provided, this is not required. This web service supports using ID and ID type combinations, such as Practitioner?identifier=External|802559.
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: Free text that can match either Family or Given (or both). If Family or Identifier is provided, this is not required.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_PractitionerR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Practitioner:
    get:
      tags:
        - Practitioner
        - Search(STU3)
      operationId: Practitioner_SearchSTU3
      parameters:
        - name: address
          in: query
          description: The free-text address.
          required: false
          schema:
            type: string
        - name: address-city
          in: query
          description: The city specified in the address. City cannot be specified without state or ZIP code.
          required: false
          schema:
            type: string
        - name: address-postalcode
          in: query
          description: A ZIP code specified in the address.
          required: false
          schema:
            type: string
        - name: address-state
          in: query
          description: A state specified in the address.
          required: false
          schema:
            type: string
        - name: family
          in: query
          description: A portion of the family name. If name or identifier is provided, this is not required.
          required: true
          schema:
            type: string
        - name: given
          in: query
          description: A portion of the given name. If Given is provided, Family must also be provided.
          required: false
          schema:
            type: string
        - name: identifier
          in: query
          description: |-
            <p>A practitioner's identifier, such as NPI. If Family or Name is provided, this is not required.</p>

            <p>Starting in November 2018, this web service supports using ID and ID type combinations, such as Practitioner?identifier=External|802559.</p>
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: Free text that can match either Family or Given (or both). If Family or Identifier is provided, this is not required.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_PractitionerSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/PractitionerRole/{ID}:
    get:
      tags:
        - PractitionerRole
        - Read(R4)
      operationId: PractitionerRole_ReadR4
      parameters:
        - name: ID
          in: path
          description: The read interaction enables the look up of a PractitionerRole resource by a constant server ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerRoleR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/PractitionerRole/{ID}:
    get:
      tags:
        - PractitionerRole
        - Read(STU3)
      operationId: PractitionerRole_ReadSTU3
      parameters:
        - name: ID
          in: path
          description: The read interaction enables the look up of a PractitionerRole resource by a constant server ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PractitionerRoleSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/PractitionerRole:
    get:
      tags:
        - PractitionerRole
        - Search(R4)
      operationId: PractitionerRole_SearchR4
      parameters:
        - name: email
          in: query
          description: Value in an email contact.
          required: false
          schema:
            type: string
        - name: identifier
          in: query
          description: A practitioner's identifier.
          required: false
          schema:
            type: string
        - name: location
          in: query
          description: Reference to one of the locations at which this practitioner provides care.
          required: false
          schema:
            type: string
        - name: organization
          in: query
          description: Reference to the organization that the practitioner represents or acts on behalf of.
          required: false
          schema:
            type: string
        - name: phone
          in: query
          description: A value in a phone contact.
          required: false
          schema:
            type: string
        - name: practitioner
          in: query
          description: A practitioner that can provide the defined services for the organization.
          required: false
          schema:
            type: string
        - name: role
          in: query
          description: The role a practitioner can perform at an organization.
          required: false
          schema:
            type: string
        - name: specialty
          in: query
          description: The practitioner's specialty at an organization.
          required: false
          schema:
            type: string
        - name: telecom
          in: query
          description: The value in any kind of contact.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_PractitionerRoleR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/PractitionerRole:
    get:
      tags:
        - PractitionerRole
        - Search(STU3)
      operationId: PractitionerRole_SearchSTU3
      parameters:
        - name: email
          in: query
          description: Value in an email contact.
          required: false
          schema:
            type: string
        - name: identifier
          in: query
          description: 'A practitioner''s identifier. A successful identifier search comprises of a token that is a URN:OID: + the code system, and a code in the format identifier=code system|code.'
          required: false
          schema:
            type: string
        - name: location
          in: query
          description: One of the locations at which this practitioner provides care.
          required: false
          schema:
            type: string
        - name: organization
          in: query
          description: The organization that the practitioner represents or acts on behalf of.
          required: false
          schema:
            type: string
        - name: phone
          in: query
          description: A value in a phone contact.
          required: false
          schema:
            type: string
        - name: practitioner
          in: query
          description: A practitioner that can provide the defined services for the organization.
          required: false
          schema:
            type: string
        - name: role
          in: query
          description: The role a practitioner can perform at an organization.
          required: false
          schema:
            type: string
        - name: specialty
          in: query
          description: The practitioner's specialty at an organization.
          required: false
          schema:
            type: string
        - name: telecom
          in: query
          description: The value in any kind of contact.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_PractitionerRoleSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/Procedure/{ID}:
    get:
      tags:
        - Procedure
        - Read(Orders)(DSTU2)
      operationId: Procedure_ReadOrdersDSTU2
      parameters:
        - name: ID
          in: path
          description: The Procedure FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcedureDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Procedure/{ID}:
    get:
      tags:
        - Procedure
        - Read(SurgicalHistory)(R4)
      operationId: Procedure_ReadSurgicalHistoryR4
      parameters:
        - name: ID
          in: path
          description: The Procedure FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcedureR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Procedure/{ID}:
    get:
      tags:
        - Procedure
        - Read(Orders,Surgeries)(STU3)
      operationId: Procedure_ReadOrders,SurgeriesSTU3
      parameters:
        - name: ID
          in: path
          description: The Procedure FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcedureSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /DSTU2/Procedure:
    get:
      tags:
        - Procedure
        - Search(Orders)(DSTU2)
      operationId: Procedure_SearchOrdersDSTU2
      parameters:
        - name: date
          in: query
          description: The date or date range the Procedure was performed.
          required: true
          schema:
            type: string
        - name: patient
          in: query
          description: The Patient FHIR resource ID.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Subject of the procedure.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ProcedureDSTU2'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Procedure:
    get:
      tags:
        - Procedure
        - Search(SurgicalHistory)(R4)
      operationId: Procedure_SearchSurgicalHistoryR4
      parameters:
        - name: category
          in: query
          description: 'A code that classifies the procedure. This will always be SNOMED code 387713003 (Surgical procedure) for the Procedure (Surgical history) API.  '
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: The Patient FHIR resource ID.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Subject of the Procedure.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ProcedureR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Procedure:
    get:
      tags:
        - Procedure
        - Search(Orders,Surgeries)(STU3)
      operationId: Procedure_SearchOrders,SurgeriesSTU3
      parameters:
        - name: category
          in: query
          description: 'A code that classifies the procedure. The following SNOMED codes are acceptable values: 387713003 (Surgical procedure), 103693007 (Diagnostic procedure)'
          required: false
          schema:
            type: string
        - name: date
          in: query
          description: Date or period that the procedure was performed, using the FHIR date parameter format.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: The Patient FHIR resource ID.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Subject of the procedure.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ProcedureSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/ProcedureRequest/{ID}:
    get:
      tags:
        - ProcedureRequest
        - Read(Orders)(STU3)
      operationId: ProcedureRequest_ReadOrdersSTU3
      parameters:
        - name: ID
          in: path
          description: FHIR ProcedureRequest ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcedureRequestSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/ProcedureRequest:
    get:
      tags:
        - ProcedureRequest
        - Search(Orders)(STU3)
      operationId: ProcedureRequest_SearchOrdersSTU3
      parameters:
        - name: encounter
          in: query
          description: The patient's encounter FHIR ID.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: The patient FHIR ID.
          required: false
          schema:
            type: string
        - name: requester
          in: query
          description: Reference to a practitioner resource who is the authorizing provider for the procedure request. Default is all.
          required: true
          schema:
            type: string
        - name: status
          in: query
          description: The status code to filter the search. The full list of potential values can be found <a href="http://hl7.org/fhir/stu3/valueset-request-status.html">here</a>. The default is to return active ProcedureRequests.
          required: true
          schema:
            type: string
        - name: subject
          in: query
          description: A parameter
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ProcedureRequestSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Provenance/{ID}:
    get:
      tags:
        - Provenance
        - Read(R4)
      operationId: Provenance_ReadR4
      parameters:
        - name: ID
          in: path
          description: Provenance FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvenanceR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Questionnaire/{ID}:
    get:
      tags:
        - Questionnaire
        - Read(Patient-EnteredQuestionnaires)(R4)
      operationId: Questionnaire_ReadPatient-EnteredQuestionnairesR4
      parameters:
        - name: ID
          in: path
          description: The Questionaire Fhir ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Questionnaire:
    get:
      tags:
        - Questionnaire
        - Search(Patient-EnteredQuestionnaires)(R4)
      operationId: Questionnaire_SearchPatient-EnteredQuestionnairesR4
      parameters: []
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_QuestionnaireR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/QuestionnaireResponse:
    post:
      tags:
        - QuestionnaireResponse
        - |
          Create(Patient-EnteredQuestionnaires)(R4)
      operationId: |
        QuestionnaireResponse_CreatePatient-EnteredQuestionnairesR4
      parameters: []
      responses:
        '201':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireResponseR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
      requestBody:
        description: payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionnaireResponseR4'
    get:
      tags:
        - QuestionnaireResponse
        - Search(Patient-EnteredQuestionnaires)(R4)
      operationId: QuestionnaireResponse_SearchPatient-EnteredQuestionnairesR4
      parameters:
        - name: encounter
          in: query
          description: FHIR Encounter IDs. If provided, the search returns only those patient-entered questionnaire responses associated with the specified encounter(s).
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: 'FHIR Patient ID. All patient-entered questionnaire responses from the specified patient will be returned. Multiple patients cannot be referenced in the search request. '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_QuestionnaireResponseR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/QuestionnaireResponse/{ID}:
    get:
      tags:
        - QuestionnaireResponse
        - Read(Patient-EnteredQuestionnaires)(R4)
      operationId: QuestionnaireResponse_ReadPatient-EnteredQuestionnairesR4
      parameters:
        - name: ID
          in: path
          description: The Questionaire FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireResponseR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/RelatedPerson/{ID}:
    get:
      tags:
        - RelatedPerson
        - Read(R4)
      operationId: RelatedPerson_ReadR4
      parameters:
        - name: ID
          in: path
          description: The Related Person FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelatedPersonR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/RequestGroup/{ID}:
    get:
      tags:
        - RequestGroup
        - Read(OncologyPlanDay)(R4)
      operationId: RequestGroup_ReadOncologyPlanDayR4
      parameters:
        - name: ID
          in: path
          description: FHIR identifier for a RequestGroup resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestGroupR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/RequestGroup:
    get:
      tags:
        - RequestGroup
        - Search(OncologyPlanDay)(R4)
      operationId: RequestGroup_SearchOncologyPlanDayR4
      parameters: []
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_RequestGroupR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/ResearchStudy/{ID}:
    get:
      tags:
        - ResearchStudy
        - Read(R4)
      operationId: ResearchStudy_ReadR4
      parameters:
        - name: ID
          in: path
          description: The ResearchStudy FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResearchStudyR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/ResearchStudy:
    get:
      tags:
        - ResearchStudy
        - Search(R4)
      operationId: ResearchStudy_SearchR4
      parameters:
        - name: identifier
          in: query
          description: The study code.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ResearchStudyR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/ResearchSubject/{ID}:
    get:
      tags:
        - ResearchSubject
        - Read(R4)
      operationId: ResearchSubject_ReadR4
      parameters:
        - name: ID
          in: path
          description: The research study enrollment record FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResearchSubjectR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Schedule/{ID}:
    get:
      tags:
        - Schedule
        - Read(STU3)
      operationId: Schedule_ReadSTU3
      parameters:
        - name: ID
          in: path
          description: FHIR identifier for a Schedule resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/ServiceRequest:
    get:
      tags:
        - ServiceRequest
        - Search(Orders)(R4)
      operationId: ServiceRequest_SearchOrdersR4
      parameters:
        - name: category
          in: query
          description: |
            <p>Set category to the following token construction: system | code, where:</p>
            <ul>
            <li>system: “http://snomed.info/sct”</li>
            <li>code: “307835004”</li>
            </ul>
            <p>The code SCTID: 307835004 represents the  ‘Referral by service’, in order to find CRRN type of ServiceRequests.
            Either the patient, subject, or encounter must be provided.</p>
          required: true
          schema:
            type: string
        - name: encounter
          in: query
          description: Reference to an Encounter resource the procedure request is in.
          required: false
          schema:
            type: string
        - name: onlyscannable
          in: query
          description: If “true”,  only scannable orders and procedures are returned in the response. This feature requires a user to have login department context as part of the API request, otherwise error code 59100 is returned.
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: Reference to a patient resource for which the request is ordered.
          required: false
          schema:
            type: string
        - name: requester
          in: query
          description: Reference to a practitioner resource who is the authorizing provider for the procedure request.
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: |-
            <p>The status of the request. Supported values include:</p>
            <ul>
            <li>draft</li>
            <li>active</li>
            <li>completed</li>
            <li>revoked</li>
            <li> unknown</li>
            </ul>
            <p>This service returns all statuses if this element is not specified.</p>
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Reference to a patient resource for which the request is ordered.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_ServiceRequestR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Slot/{ID}:
    get:
      tags:
        - Slot
        - Read(STU3)
      operationId: Slot_ReadSTU3
      parameters:
        - name: ID
          in: path
          description: FHIR identifier for a Slot resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlotSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Specimen/{ID}:
    get:
      tags:
        - Specimen
        - Read(R4)
      operationId: Specimen_ReadR4
      parameters:
        - name: ID
          in: path
          description: The Specimen FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecimenR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Specimen/{ID}:
    get:
      tags:
        - Specimen
        - Read(STU3)
      operationId: Specimen_ReadSTU3
      parameters:
        - name: ID
          in: path
          description: The specimen’s FHIR ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecimenSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Specimen:
    get:
      tags:
        - Specimen
        - Search(R4)
      operationId: Specimen_SearchR4
      parameters: []
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_SpecimenR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /STU3/Specimen:
    get:
      tags:
        - Specimen
        - Search(STU3)
      operationId: Specimen_SearchSTU3
      parameters: []
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_SpecimenSTU3'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Substance/{ID}:
    get:
      tags:
        - Substance
        - Read(R4)
      operationId: Substance_ReadR4
      parameters:
        - name: ID
          in: path
          description: FHIR identifier for a Substance resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubstanceR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Substance:
    get:
      tags:
        - Substance
        - Search(R4)
      operationId: Substance_SearchR4
      parameters: []
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_SubstanceR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/Task/{ID}:
    get:
      tags:
        - Task
        - Read(CommunityResource)(R4)
      operationId: Task_ReadCommunityResourceR4
      parameters:
        - name: ID
          in: path
          description: FHIR identifier for a Task resource.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
    put:
      tags:
        - Task
        - Update(CommunityResource)(R4)
      operationId: Task_UpdateCommunityResourceR4
      parameters:
        - name: ID
          in: path
          description: FHIR identifier for a Task resource.
          required: true
          schema:
            type: string
      responses:
        '201':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
      requestBody:
        description: payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskR4'
  /R4/Task:
    get:
      tags:
        - Task
        - Search(CommunityResource)(R4)
      operationId: Task_SearchCommunityResourceR4
      parameters:
        - name: code
          in: query
          description: |
            Search for “community-resource” type of tasks only. This corresponds to Community Resource Tasks and is used to refine to only such Tasks. If not specified, all valid Task resources/subresources are returned.
          required: false
          schema:
            type: string
        - name: encounter
          in: query
          description: 'Reference to the encounter that the Task  belongs to. '
          required: false
          schema:
            type: string
        - name: patient
          in: query
          description: Search for Task resources for a specified patient ID. You can use both "patient" and "subject", but if you use both they must look to the same value.
          required: false
          schema:
            type: string
        - name: subject
          in: query
          description: Search for Task resources for a specified subject. You can use both "patient" and "subject", but if you use both they must look to the same value.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bundle_TaskR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
  /R4/ValueSet/$expand:
    get:
      tags:
        - ValueSet
        - $expand(R4)
      operationId: ValueSet_$expandR4
      parameters:
        - name: context
          in: query
          description: |-
            <p>The path to the element in the resource.</p>
            <ul>
            <li>Expected format: &lt;ResourceName&gt;.&lt;ElementPath&gt;</li>
            <li>Example: DocumentReference.type</li>
            </ul>
            <p>Epic currently supports the following contexts:</p>
            <ul>
            <li>DocumentReference.type</li>
            <li>DocumentReference.docStatus</li>
            </ul>
          required: true
          schema:
            type: string
        - name: contextdirection
          in: query
          description: |-
            <p>Specifies the direction of the interaction with regards to the ValueSet. Options include "outgoing" or "incoming". </p>
            <ul>
            <li>outgoing - for query parameters and response content</li>
            <li>incoming - for incoming POST/PUT body</li>
            </ul>
          required: true
          schema:
            type: string
        - name: filter
          in: query
          description: |-
            <p>A filter string used to further refine the ValueSet context to a specific sub-resource based on the resource's category element, and in some cases, additional details.</p>
            <ul>
            <li>Example: <code>filter=category:document-information,workflow:registration, level:encounter,resource:ej5R7X.4RdaFNR5vWdsTpVTtccmkRkWJcKixc5XVY4cQ3</code>
            </ul>
            <p>Epic currently supports the following filters:</p>
            <ul>
            <li><code>category:clinical-note</code>
            <li><code>category:document-information</code>
            </ul>
            <p>The following additional filters can be combined with <code>category:document-information</code> to further refine results:</p>
            <ul>
            <li><code>workflow:general</code></li>
            <li><code>workflow:registration</code></li>
            <li><code>level:patient</code></li>
            <li><code>level:encounter</code></li>
            <li><code>level:order</code></li>
            <li><code>resource:&lt;patient FHIR ID&gt;</code></li>
            <li><code>resource:&lt;encounter FHIR ID&gt;</code></li>
            </ul>
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The response object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValueSetR4'
        '400':
          description: The resource request contained an invalid parameter. Invalid parameter such as a nonexistent id.
          content: {}
        '401':
          description: User not authorized for request. Request data that the authenticated user is not allowed access to view (i.e. a patient asking for data about a stranger's allergies).
          content: {}
        '403':
          description: Forbidden
          content: {}
        '404':
          description: The resource is not found
          content: {}
components:
  schemas:
    Range:
      description: A set of ordered Quantities defined by a low and high limit.
      properties:
        id:
          type: string
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        low:
          $ref: '#/components/schemas/Quantity'
        high:
          $ref: '#/components/schemas/Quantity'
      additionalProperties: false
    Element:
      description: Base definition for all elements in a resource.
      properties:
        id:
          type: string
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
      additionalProperties: false
    Period:
      description: A time period defined by a start and end date and optionally time.
      properties:
        id:
          type: string
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        start:
          type: string
        end:
          type: string
      additionalProperties: false
    Identifier:
      description: An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.
      properties:
        id:
          type: string
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        use:
          description: The purpose of this identifier.
          enum:
            - usual
            - official
            - temp
            - secondary
            - old
        type:
          $ref: '#/components/schemas/CodeableConcept'
        system:
          type: string
        value:
          type: string
        period:
          $ref: '#/components/schemas/Period'
        assigner:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
    Extension:
      description: Optional Extension Element - found in all resources.
      properties:
        id:
          type: string
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        url:
          type: string
        valueBase64Binary:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^(\s*([0-9a-zA-Z\+/=]){4}\s*)+$
          type: string
        valueBoolean:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^true|false$
          type: boolean
        valueCanonical:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^\S*$
          type: string
        valueCode:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^[^\s]+(\s[^\s]+)*$
          type: string
        valueDate:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?$
          type: string
        valueDateTime:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?$
          type: string
        valueDecimal:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?$
          type: number
        valueId:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^[A-Za-z0-9\-\.]{1,64}$
          type: string
        valueInstant:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
          type: string
        valueInteger:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^-?([0]|([1-9][0-9]*))$
          type: number
        valueMarkdown:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^[ \r\n\t\S]+$
          type: string
        valueOid:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$
          type: string
        valuePositiveInt:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^[1-9][0-9]*$
          type: number
        valueString:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^[ \r\n\t\S]+$
          type: string
        valueTime:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?$
          type: string
        valueUnsignedInt:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^[0]|([1-9][0-9]*)$
          type: number
        valueUri:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^\S*$
          type: string
        valueUrl:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^\S*$
          type: string
        valueUuid:
          description: Value of extension - must be one of a constrained set of the data types (see [Extensibility](extensibility.html) for a list).
          pattern: ^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
          type: string
    CodeableConcept:
      description: A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.
      properties:
        id:
          type: string
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        coding:
          description: A reference to a code defined by a terminology system.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
        text:
          type: string
      additionalProperties: false
    Coding:
      description: A reference to a code defined by a terminology system.
      properties:
        system:
          type: string
        code:
          type: string
      additionalProperties: false
    url:
      type: string
    instant:
      pattern: ^([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\.[0-9]+)?(Z|(\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))$
      type: string
      description: An instant in time - known at least to the second
    canonical:
      pattern: ^\S*$
      type: string
      description: A URI that is a reference to a canonical URL on a FHIR resource
    unsignedInt:
      pattern: ^[0]|([1-9][0-9]*)$
      type: number
      description: An integer with a value that is not negative (e.g. >= 0)
    markdown:
      pattern: ^[ \r\n\t\S]+$
      type: string
      description: A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine
    ContactPoint:
      description: Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.
      properties:
        id:
          type: string
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        system:
          description: Telecommunications form for contact point - what communications system is required to make use of the contact.
          enum:
            - phone
            - fax
            - email
            - pager
            - url
            - sms
            - other
        value:
          type: string
        use:
          description: Identifies the purpose for the contact point.
          enum:
            - home
            - work
            - temp
            - old
            - mobile
        rank:
          type: number
        period:
          $ref: '#/components/schemas/Period'
      additionalProperties: false
    UsageContext:
      description: Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).
      properties:
        id:
          type: string
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        code:
          $ref: '#/components/schemas/Coding'
        valueCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        valueQuantity:
          $ref: '#/components/schemas/Quantity'
        valueRange:
          $ref: '#/components/schemas/Range'
        valueReference:
          $ref: '#/components/schemas/Reference'
      additionalProperties: false
      required:
        - code
    ContactDetail:
      description: Specifies contact information for a person or organization.
      properties:
        id:
          type: string
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        name:
          type: string
        telecom:
          description: The contact details for the individual (if a name was provided) or the organization.
          items:
            $ref: '#/components/schemas/ContactPoint'
          type: array
      additionalProperties: false
    uri:
      pattern: ^\S*$
      type: string
      description: String of characters used to identify a name or a resource
    Quantity:
      description: A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.
      properties:
        id:
          type: string
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        value:
          type: number
        comparator:
          description: How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is "<" , then the real value is < stated value.
          enum:
            - <
            - <=
            - '>='
            - '>'
        unit:
          type: string
        system:
          type: string
        code:
          type: string
      additionalProperties: false
    Reference:
      description: A reference from one resource to another.
      properties:
        id:
          type: string
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        reference:
          type: string
        type:
          type: string
        identifier:
          $ref: '#/components/schemas/Identifier'
        display:
          type: string
      additionalProperties: false
    Narrative:
      description: A human-readable summary of the resource conveying the essential clinical and business information for the resource.
      properties:
        id:
          type: string
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        status:
          description: The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.
          enum:
            - generated
            - extensions
            - additional
            - empty
        div:
          type: string
      additionalProperties: false
      required:
        - div
    Resource:
      properties:
        id:
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        implicitRules:
          type: string
        language:
          type: string
      additionalProperties: false
    Annotation:
      type: object
      properties:
        id:
          type: string
        extension:
          type: array
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
        authorReference:
          $ref: '#/components/schemas/Reference'
        authorString:
          pattern: ^[ \r\n\t\S]+$
          type: string
          description: The individual responsible for making the annotation.
        time:
          type: string
        text:
          type: string
      description: A  text note which also  contains information about who made the statement and when.
    Meta:
      description: The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
      type: object
      properties:
        id:
          type: string
        extension:
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
          type: array
        versionId:
          type: string
        lastUpdated:
          type: string
        source:
          type: string
        profile:
          description: A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].
          items:
            $ref: '#/components/schemas/canonical'
          type: array
        security:
          description: Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
        tag:
          description: Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.
          items:
            $ref: '#/components/schemas/Coding'
          type: array
      additionalProperties: false
    Address:
      type: object
      properties:
        id:
          type: string
        extension:
          type: array
          description: May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
          items:
            $ref: '#/components/schemas/Extension'
        use:
          type: string
          description: The purpose of this address.
          enum:
            - home
            - work
            - temp
            - old
            - billing
        type:
          type: string
          description: Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.
          enum:
            - postal
            - physical
            - both
        text:
          type: string
        line:
          type: array
          description: This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.
          items:
            type: string
        city:
          type: string
        district:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
        period:
          type: string
      description: An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.
    AdverseEventR4:
      type: object
      description: A single instance of a FHIR AdverseEvent resource.
      properties:
        actuality:
          type: string
          description: The nature of the adverse event, either real or potential.
        extension:
          $ref: '#/components/schemas/Extension'
        category:
          $ref: '#/components/schemas/CodeableConcept'
        date:
          type: string
          description: When the event occurred.
        encounter:
          $ref: '#/components/schemas/Reference'
        event:
          $ref: '#/components/schemas/CodeableConcept'
        id:
          type: string
          description: The Adverse Event FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        location:
          $ref: '#/components/schemas/Reference'
        outcome:
          $ref: '#/components/schemas/CodeableConcept'
        recordedDate:
          type: string
          description: When the event was recorded from the audit trail. This is when the event was first recorded.
        recorder:
          $ref: '#/components/schemas/Reference'
        seriousness:
          $ref: '#/components/schemas/CodeableConcept'
        severity:
          $ref: '#/components/schemas/CodeableConcept'
        study:
          $ref: '#/components/schemas/Reference'
        subject:
          $ref: '#/components/schemas/Reference'
        suspectEntity:
          type: object
      required:
        - extension
    Bundle_AdverseEventR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_AdverseEventR4'
          type: array
    Bundle_Entry_AdverseEventR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/AdverseEventR4'
    AllergyIntoleranceDSTU2:
      type: object
      description: A single AllergyIntolerance resource.
      properties:
        category:
          type: string
          description: Refers to food, medication, or environmental allergies.
        criticality:
          type: string
          description: Refers to the risk of clinical harm of a reaction to the substance.
        id:
          type: string
          description: The AllergyIntolerance FHIR ID.
        note:
          $ref: '#/components/schemas/Annotation'
        onset:
          type: string
          description: Date allergy was first noticed.
        patient:
          $ref: '#/components/schemas/Reference'
        reaction:
          type: object
          description: List of known reactions the patient had to the substance.
          properties:
            certainty:
              type: string
              description: Will always be "confirmed". All allergies documented within Epic are known allergies and are confirmed.
            manifestation:
              $ref: '#/components/schemas/CodeableConcept'
            onset:
              type: string
              description: Date allergy was first noticed.
            substance:
              $ref: '#/components/schemas/CodeableConcept'
          required:
            - certainty
            - onset
            - substance
        recordedDate:
          type: string
          description: The date the allergy was added to the patient.
        recorder:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: Confirmation status of the resource. The only options we will send for this field will be "confirmed" for active allergies or "resolved" for expired allergies. Otherwise, we will send nothing.
        substance:
          $ref: '#/components/schemas/CodeableConcept'
      required:
        - category
        - criticality
        - note
        - recordedDate
        - recorder
        - status
    AllergyIntoleranceR4:
      type: object
      description: A single AllergyIntollerance resource.
      properties:
        category:
          type: string
          description: |-
            <p>The category of the allergy.</p>
            <p>The following default values are supported, but additional values may be configured by each Epic organization:</p>
            <ul>
            <li>food
            <li>medication
            <li>environment
            <li>biologic
            </ul>
            <p>Starting in the May 2021 version of Epic, multiple category values can be returned in this element.</p>
        clinicalStatus:
          $ref: '#/components/schemas/CodeableConcept'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        criticality:
          type: string
          description: Refers to the risk of clinical harm of a reaction to the substance.
        id:
          type: string
          description: The AllergyIntolerance FHIR ID.
        note:
          $ref: '#/components/schemas/Annotation'
        onsetPeriod:
          $ref: '#/components/schemas/Period'
        patient:
          $ref: '#/components/schemas/Reference'
        reaction:
          type: object
          description: A Response Type
          properties:
            description:
              type: string
              description: The name of the reaction.
            manifestation:
              $ref: '#/components/schemas/CodeableConcept'
            severity:
              type: string
              description: |-
                <p>The degree of the patient's reaction. Possible values are:</p>
                <li>mild</li>
                <li>moderate</li>
                <li>severe</li>
                </ul>
        recordedDate:
          type: string
          description: The date the allergy was recorded in Epic. Called "assertedDate" in STU3.
        recorder:
          $ref: '#/components/schemas/Reference'
        verificationStatus:
          $ref: '#/components/schemas/CodeableConcept'
      required:
        - code
        - criticality
        - note
        - onsetPeriod
        - patient
        - recorder
    AllergyIntoleranceSTU3:
      type: object
      description: A single AllergyIntolerance resource.
      properties:
        assertedDate:
          type: string
          description: The date the allergy was recorded in Epic.
        category:
          type: string
          description: |-
            <p>The category of the allergy.</p>
            <p>The following default values are supported, but additional values may be configured by each Epic organization:</p>
            <ul>
            <li>food
            <li>medication
            <li>environment
            <li>biologic
            </ul>
            <p>Starting in the May 2021 version of Epic, multiple category values can be returned in this element.</p>
        clinicalStatus:
          type: string
          description: "The current status of the allergy. Possible values include:\n•\tactive\n•\tresolved\n•\tinactive\n\nStarting in the February 2022 version of Epic, or in the November 2021 version by special update, if no known allergies on file, value will be \"active\". In earlier versions of Epic, this element is not returned if no known allergies are on file."
        code:
          $ref: '#/components/schemas/CodeableConcept'
        criticality:
          type: string
          description: Refers to the risk of clinical harm of a reaction to the substance.
        id:
          type: string
          description: The AllergyIntolerance FHIR ID.
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://nictiz.nl/fhir/StructureDefinition/zib-AllergyIntolerance'
          required:
            - profile
        note:
          $ref: '#/components/schemas/Annotation'
        onsetPeriod:
          $ref: '#/components/schemas/Period'
        patient:
          $ref: '#/components/schemas/Reference'
        reaction:
          type: object
          description: List of known reactions the patient had to the substance.
          properties:
            description:
              type: string
              description: The name of the reaction.
            manifestation:
              $ref: '#/components/schemas/CodeableConcept'
            severity:
              type: string
              description: |-
                <p>The degree of the patient's reaction. Possible values are:</p>
                <li>mild</li>
                <li>moderate</li>
                <li>severe</li>
                </ul>
          required:
            - description
            - severity
        verificationStatus:
          type: string
          description: If the allergy is on the patient's chart, this element specifies "confirmed". If it is a newly created allergy and and still needs to be reconciled, it is "unconfirmed".
      required:
        - assertedDate
        - code
        - meta
        - note
        - onsetPeriod
        - reaction
    Bundle_AllergyIntoleranceDSTU2:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_AllergyIntoleranceDSTU2'
          type: array
    Bundle_Entry_AllergyIntoleranceDSTU2:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/AllergyIntoleranceDSTU2'
    Bundle_AllergyIntoleranceR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_AllergyIntoleranceR4'
          type: array
    Bundle_Entry_AllergyIntoleranceR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/AllergyIntoleranceR4'
    Bundle_AllergyIntoleranceSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_AllergyIntoleranceSTU3'
          type: array
    Bundle_Entry_AllergyIntoleranceSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/AllergyIntoleranceSTU3'
    AppointmentSTU3:
      type: object
      description: An instance of the STU3 Appointment resource.
      properties:
        extension:
          $ref: '#/components/schemas/Extension'
        appointmentType:
          $ref: '#/components/schemas/CodeableConcept'
        comment:
          type: string
          description: The appointment notes.
        created:
          type: string
          description: The date when the appointment was created.
        end:
          type: string
          description: The appointment end time.
        identifier:
          $ref: '#/components/schemas/Identifier'
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://nictiz.nl/fhir/StructureDefinition/eAfspraak-Appointment'
          required:
            - profile
        minutesDuration:
          type: object
          description: The estimated length of the appointment.
          properties: {}
        participant:
          type: object
          description: Patient, providers, and locations associated with the appointment.
          properties: {}
        reason:
          $ref: '#/components/schemas/CodeableConcept'
        serviceType:
          $ref: '#/components/schemas/CodeableConcept'
        slot:
          $ref: '#/components/schemas/Reference'
        specialty:
          $ref: '#/components/schemas/CodeableConcept'
        start:
          type: string
          description: The appointment start time.
        status:
          type: string
          description: The appointment status.
      required:
        - extension
        - appointmentType
        - comment
        - created
        - end
        - identifier
        - meta
        - minutesDuration
        - reason
        - serviceType
        - slot
        - specialty
        - start
    Bundle_AppointmentSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_AppointmentSTU3'
          type: array
    Bundle_Entry_AppointmentSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/AppointmentSTU3'
    BinarySTU3:
      type: object
      description: A Response Type
      properties:
        content:
          type: string
          description: The note or document content as a base64-encoded value.
        contentType:
          type: string
          description: This is always "application/pdf" for radiology result data.
        id:
          type: string
          description: The Binary FHIR ID.
    BinaryR4:
      type: object
      description: A single instance of a FHIR Binary resource.
      properties:
        contentType:
          type: string
          description: This is always "application/pdf" for radiology result data.
        data:
          type: string
          description: The note or document content as a base64-encoded value.
        id:
          type: string
          description: <p>The Binary FHIR ID.</p>
    BinaryDSTU2:
      type: object
      description: A Response Type
      properties:
        content:
          type: string
          description: <p>The actual content.</p>
        contentType:
          type: string
          description: <p>MimeType of the binary content. This is always "application/xml" as CDA documents are the only Binary content supported.</p>
    BodyStructureR4:
      type: object
      description: An instance of the R4 BodyStructure resource.
      properties:
        active:
          type: boolean
          description: True if the tooth is actively in a patient’s dentition. False if it has been removed.
        extension:
          $ref: '#/components/schemas/Extension'
        location:
          $ref: '#/components/schemas/CodeableConcept'
        morphology:
          $ref: '#/components/schemas/CodeableConcept'
        patient:
          $ref: '#/components/schemas/Reference'
      required:
        - active
        - extension
        - location
        - morphology
    Bundle_BodyStructureR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_BodyStructureR4'
          type: array
    Bundle_Entry_BodyStructureR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/BodyStructureR4'
    CDSHooksMedicationRequestR4:
      type: object
      description: An instance of the R4 MedicationRequest FHIR resource.
      properties:
        category:
          $ref: '#/components/schemas/CodeableConcept'
        dispenseRequest:
          type: object
          description: Parameter group containing information about the dispense.
          properties:
            expectedSupplyDuration:
              type: object
              description: Number of days supply is expected to last.
              properties: {}
            numberOfRepeatsAllowed:
              type: object
              description: Value for number of refills allowed for this medication.
              properties: {}
            performer:
              $ref: '#/components/schemas/Reference'
            quantity:
              type: object
              description: Dispense quantity for the medication.
              properties: {}
            validityPeriod:
              $ref: '#/components/schemas/Period'
          required:
            - numberOfRepeatsAllowed
        encounter:
          $ref: '#/components/schemas/Reference'
        identifier:
          $ref: '#/components/schemas/Identifier'
        intent:
          type: string
          description: Returns “plan” for historical medications. Returns “order” for other medications.
        medicationReference:
          $ref: '#/components/schemas/Reference'
        priorPrescription:
          $ref: '#/components/schemas/Reference'
        reportedBoolean:
          type: boolean
          description: Determines whether the order is historical.
        requester:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: Always set to "draft".
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - reportedBoolean
    CDSHooksServiceRequestR4:
      type: object
      description: An instance of the R4 ServiceRequest resource.
      properties:
        asNeededBoolean:
          type: boolean
          description: If set to true, indicates that the order is only performed when needed within the specified schedule.
        code:
          $ref: '#/components/schemas/CodeableConcept'
        encounter:
          $ref: '#/components/schemas/Reference'
        id:
          type: string
          description: FHIR ServiceRequest ID.
        intent:
          type: string
          description: |-
            <p>The intent code. Epic supported values include:</p>
            <ul>
            <li>order</li>
            </ul>
        extension:
          $ref: '#/components/schemas/Extension'
        note:
          $ref: '#/components/schemas/Annotation'
        occurrenceTiming:
          type: object
          description: This event element is populated for auto-released orders.
          properties: {}
        priority:
          type: string
          description: 'The priority. The value returned here depends on custom mapping configuration completed by the Epic organization. '
        reasonCode:
          $ref: '#/components/schemas/CodeableConcept'
        requester:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: |-
            <p>The status of the request. Supported values include:</p>
            <ul>
            <li>draft</li>
            </ul>
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - asNeededBoolean
        - code
        - encounter
        - extension
        - note
        - occurrenceTiming
        - priority
        - reasonCode
        - requester
    CarePlanR4:
      type: object
      description: An instance of the R4 CarePlan resource.
      properties:
        activity:
          type: object
          description: Actions to occur as part of the care plan.
          properties:
            detail:
              type: object
              description: Details for this activity.
              properties:
                code:
                  $ref: '#/components/schemas/CodeableConcept'
                instantiatesCanonical:
                  type: string
                  description: This contains all the questionnaires associated with the encounter.
                scheduledPeriod:
                  $ref: '#/components/schemas/Period'
                status:
                  type: string
                  description: Set to In-progress, unless all questionnaires are answered. If all questionnaires are answered, set to Completed.
              required:
                - code
                - instantiatesCanonical
                - scheduledPeriod
            reference:
              $ref: '#/components/schemas/Reference'
          required:
            - detail
            - reference
        category:
          $ref: '#/components/schemas/CodeableConcept'
        intent:
          type: string
          description: Always "order."
        status:
          type: string
          description: Always "active."
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - activity
        - category
    CarePlanDSTU2:
      type: object
      description: A single CarePlan resource.
      properties:
        activity:
          type: object
          description: Action to occur as part of the plan.
          properties:
            detail:
              type: object
              description: Description of the activity.
              properties:
                category:
                  $ref: '#/components/schemas/CodeableConcept'
                code:
                  $ref: '#/components/schemas/CodeableConcept'
                prohibited:
                  type: boolean
                  description: Flag indicating the activity should NOT be performed. Always 'false'.
                scheduledPeriod:
                  $ref: '#/components/schemas/Period'
              required:
                - scheduledPeriod
        addresses:
          $ref: '#/components/schemas/Reference'
        goal:
          $ref: '#/components/schemas/Reference'
        id:
          type: string
          description: The CarePlan FHIR ID.
        status:
          type: string
          description: Status of the CarePlan. Always returns "Active".
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - addresses
        - goal
    Bundle_CarePlanR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_CarePlanR4'
          type: array
    Bundle_Entry_CarePlanR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/CarePlanR4'
    Bundle_CarePlanDSTU2:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_CarePlanDSTU2'
          type: array
    Bundle_Entry_CarePlanDSTU2:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/CarePlanDSTU2'
    CareTeamR4:
      type: object
      description: A Response Type
      properties:
        extension:
          $ref: '#/components/schemas/Extension'
        category:
          $ref: '#/components/schemas/CodeableConcept'
        id:
          type: string
          description: CareTeam FHIR ID
        name:
          type: string
          description: The name of the care team.
        participant:
          type: object
          description: |-
            <p>A participant in the care team.
            <p>In scenarios where a provider on the care team has multiple specialties, this service returns one participant element for each unique combination of provider and specialty. For example, if a provider is listed on the care team twice, once with a specialty of "Radiology" and once with a specialty of "Behavioral Health", there will be two participant elements returned by this resource. They will have the same member reference but will have different roles.
          properties:
            member:
              $ref: '#/components/schemas/Reference'
            period:
              $ref: '#/components/schemas/Period'
            role:
              $ref: '#/components/schemas/CodeableConcept'
        period:
          $ref: '#/components/schemas/Period'
        status:
          type: string
          description: The status of the episode for which the care team is defined.
        subject:
          $ref: '#/components/schemas/Reference'
    Bundle_CareTeamR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_CareTeamR4'
          type: array
    Bundle_Entry_CareTeamR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/CareTeamR4'
    CommunicationR4:
      type: object
      description: An instance of the R4 Communication FHIR resource.
      properties:
        basedOn:
          $ref: '#/components/schemas/Reference'
        encounter:
          $ref: '#/components/schemas/Reference'
        inResponseTo:
          $ref: '#/components/schemas/Reference'
        partOf:
          $ref: '#/components/schemas/Reference'
        payload:
          type: object
          description: <p>Message or Attachment (PDF) payload.</p>
          properties:
            contentReference:
              $ref: '#/components/schemas/Reference'
            contentString:
              type: string
              description: <p>Contains the content. Append all payload.contentString elements together to form the entire message body.</p>
        recipient:
          $ref: '#/components/schemas/Reference'
        sender:
          $ref: '#/components/schemas/Reference'
        sent:
          type: string
          description: The date and time when the communication was sent.
        status:
          type: string
          description: The FHIR status code (EventStatus).
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - inResponseTo
        - partOf
    Bundle_CommunicationR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_CommunicationR4'
          type: array
    Bundle_Entry_CommunicationR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/CommunicationR4'
    ConditionR4:
      type: object
      description: An instance of the R4 Condition resource.
      properties:
        bodySite:
          $ref: '#/components/schemas/CodeableConcept'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        encounter:
          $ref: '#/components/schemas/Reference'
        id:
          type: string
          description: The condition FHIR ID
        note:
          $ref: '#/components/schemas/Annotation'
        onsetDateTime:
          type: string
          description: The date the condition began.
        recordedDate:
          type: string
          description: The date the condition was recorded.
        recorder:
          $ref: '#/components/schemas/Reference'
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - bodySite
        - code
        - encounter
        - note
        - onsetDateTime
        - recordedDate
        - recorder
    ConditionSTU3:
      type: object
      description: A Response Type
      properties:
        abatementPeriod:
          $ref: '#/components/schemas/Period'
        assertedDate:
          type: string
          description: The date the condition was noted.
        category:
          $ref: '#/components/schemas/CodeableConcept'
        clinicalStatus:
          type: string
          description: 'The status of the problem. Can be active, inactive, or resolved. '
        code:
          $ref: '#/components/schemas/CodeableConcept'
        context:
          $ref: '#/components/schemas/Reference'
        id:
          type: string
          description: The FHIR ID for this Condition.
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://nictiz.nl/fhir/StructureDefinition/zib-Problem'
          required:
            - profile
        note:
          $ref: '#/components/schemas/Annotation'
        onsetPeriod:
          $ref: '#/components/schemas/Period'
        severity:
          $ref: '#/components/schemas/CodeableConcept'
        subject:
          $ref: '#/components/schemas/Reference'
        verificationStatus:
          type: string
          description: If this is on the patient's local chart, the value is "confirmed". If it is outside data, it is "unconfirmed".
      required:
        - abatementPeriod
        - assertedDate
        - category
        - context
        - meta
        - note
        - onsetPeriod
        - severity
    ConditionDSTU2:
      type: object
      description: A single Condition resource.
      properties:
        abatementDateTime:
          type: string
          description: Date the problem was resolved.
        asserter:
          $ref: '#/components/schemas/Reference'
        category:
          $ref: '#/components/schemas/CodeableConcept'
        clinicalStatus:
          type: string
          description: 'The status of the problem. Can be active, inactive, or resolved. '
        code:
          $ref: '#/components/schemas/CodeableConcept'
        dateRecorded:
          type: string
          description: Date the problem was added to the patient’s chart.
        id:
          type: string
          description: The Condition FHIR ID.
        notes:
          type: string
          description: Free text comment.
        onsetDateTime:
          type: string
          description: Date the problem began.
        patient:
          $ref: '#/components/schemas/Reference'
        severity:
          $ref: '#/components/schemas/CodeableConcept'
      required:
        - abatementDateTime
        - dateRecorded
    Bundle_ConditionR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ConditionR4'
          type: array
    Bundle_Entry_ConditionR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ConditionR4'
    Bundle_ConditionSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ConditionSTU3'
          type: array
    Bundle_Entry_ConditionSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ConditionSTU3'
    Bundle_ConditionDSTU2:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ConditionDSTU2'
          type: array
    Bundle_Entry_ConditionDSTU2:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ConditionDSTU2'
    ConsentR4:
      type: object
      description: An instance of the R4 Consent resource.
      properties:
        category:
          $ref: '#/components/schemas/CodeableConcept'
        extension:
          $ref: '#/components/schemas/Extension'
        dateTime:
          type: string
          description: Date and time that the consent document was created.
        identifier:
          $ref: '#/components/schemas/Identifier'
        patient:
          $ref: '#/components/schemas/Reference'
        policy:
          type: object
          description: The policy of the consent document.
          properties:
            extension:
              $ref: '#/components/schemas/Extension'
            uri:
              type: string
              description: Always set to "http://hl7.org/fhir/StructureDefinition/data-absent-reason".
        provision:
          type: object
          description: The time period that this document is valid for.
          properties:
            period:
              $ref: '#/components/schemas/Period'
        scope:
          $ref: '#/components/schemas/CodeableConcept'
        status:
          type: string
          description: |-
            <p>The state of the consent. This value follows the specification of the FHIR ConsentState value set. The following values have default out-of-the-box support in Epic. Additional statuses can be mapped by Epic organizations if desired.</p>

            <ul>
            <li>draft</li>
            <ul>
            <li>Corresponds to Epic value 11-Not Received</li>
            </ul>
            <li>active</li>
            <ul>
            <li>Corresponds to Epic values 10-Received and 20-Accepted</li>
            </ul>
            <li>rejected</li>
            <ul>
            <li>Corresponds to Epic value 1-Unknown</li>
            </ul>
            <li>entered-in-error</li>
            <ul>
            <li>Corresponds to Epic value 35-Error</li>
            </ul>
            <li>inactive</li>
            <ul>
            <li>Does not correspond to any Epic value by default</li>
            </ul>
            <li>proposed</li>
            <ul>
            <li>Does not correspond to any Epic value by default</li>
            </ul>
            </ul>

            <p>The Consent resource returns data for those consent documents that have a document status that corresponds to one of the values above or an additional value that was mapped by the Epic organization. In the August 2021 version of Epic and earlier, Consent documents with no status specified in Epic cannot be retrieved by this web service. Starting in the November 2021 version of Epic, Consent documents with a status not mapped in Epic, or no status specified in Epic, return unknown.</p>
    ConsentSTU3:
      type: object
      description: An instance of the R4 Consent resource.
      properties:
        category:
          $ref: '#/components/schemas/CodeableConcept'
        extension:
          $ref: '#/components/schemas/Extension'
        consentingParty:
          $ref: '#/components/schemas/Reference'
        dateTime:
          type: string
          description: Date and time that the consent document was created.
        id:
          type: string
          description: The Consent FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This element shows that this API conforms to the profile connected to the following canonical url: http://nictiz.nl/fhir/StructureDefinition/zib-AdvanceDirective'
          required:
            - profile
        patient:
          $ref: '#/components/schemas/Reference'
        policy:
          type: object
          description: The policy of the consent document.
          properties:
            extension:
              $ref: '#/components/schemas/Extension'
        status:
          type: string
          description: |-
            <p>The state of the consent. This value follows the specification of the FHIR ConsentState value set. The following values have default out-of-the-box support in Epic. Additional statuses can be mapped by Epic organizations if desired.</p>
            <ul>
            <li>draft</li>
            <ul>
            <li>Corresponds to Epic value 11-Not Received</li>
            </ul>
            <li>active</li>
            <ul>
            <li>Corresponds to Epic values 10-Received and 20-Accepted</li>
            </ul>
            <li>rejected</li>
            <ul>
            <li>Corresponds to Epic value 1-Unknown</li>
            </ul>
            <li>entered-in-error</li>
            <ul>
            <li>Corresponds to Epic value 35-Error</li>
            </ul>
            <li>inactive</li>
            <ul>
            <li>Does not correspond to any Epic value by default</li>
            </ul>
            <li>proposed</li>
            <ul>
            <li>Does not correspond to any Epic value by default</li>
            </ul>
            </ul>
      required:
        - extension
        - consentingParty
        - meta
    Bundle_ConsentR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ConsentR4'
          type: array
    Bundle_Entry_ConsentR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ConsentR4'
    Bundle_ConsentSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ConsentSTU3'
          type: array
    Bundle_Entry_ConsentSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ConsentSTU3'
    CoverageR4:
      type: object
      description: A Response Type
      properties:
        beneficiary:
          $ref: '#/components/schemas/Reference'
        extension:
          $ref: '#/components/schemas/Extension'
        class:
          type: object
          description: Coverage classification details.
          properties:
            name:
              type: string
              description: Human-readable description of the type and value.
            type:
              $ref: '#/components/schemas/CodeableConcept'
            value:
              type: string
              description: Value associated with this class.
          required:
            - name
        dependent:
          type: string
          description: The dependent.
        id:
          type: string
          description: The FHIR Coverage ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        payor:
          $ref: '#/components/schemas/Reference'
        period:
          $ref: '#/components/schemas/Period'
        relationship:
          $ref: '#/components/schemas/CodeableConcept'
        status:
          type: string
          description: |-
            <p>Financial Resource Status Code. The following values are supported:</p>
            <ul>
              <li>active</li>
              <li>cancelled</li>
              <li>draft</li>
            </ul>
        subscriber:
          $ref: '#/components/schemas/Reference'
        subscriberId:
          type: string
          description: Subscriber ID
      required:
        - extension
        - class
        - dependent
        - identifier
        - period
        - relationship
        - subscriber
        - subscriberId
    CoverageSTU3:
      type: object
      description: A Response Type
      properties:
        beneficiary:
          $ref: '#/components/schemas/Reference'
        extension:
          $ref: '#/components/schemas/Extension'
        dependent:
          type: string
          description: The dependent.
        identifier:
          $ref: '#/components/schemas/Identifier'
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://nictiz.nl/fhir/StructureDefinition/zib-Payer'
          required:
            - profile
        payor:
          $ref: '#/components/schemas/Reference'
        period:
          $ref: '#/components/schemas/Period'
        relationship:
          $ref: '#/components/schemas/CodeableConcept'
        status:
          type: string
          description: |-
            <p>Financial Resource Status Code. The following values are supported:</p>
            <ul>
              <li>active</li>
              <li>cancelled</li>
              <li>draft</li>
            </ul>
        subscriber:
          $ref: '#/components/schemas/Reference'
        subscriberId:
          type: string
          description: Subscriber ID
      required:
        - extension
        - meta
    Bundle_CoverageR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_CoverageR4'
          type: array
    Bundle_Entry_CoverageR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/CoverageR4'
    Bundle_CoverageSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_CoverageSTU3'
          type: array
    Bundle_Entry_CoverageSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/CoverageSTU3'
    DeviceDSTU2:
      type: object
      description: A Response Type
      properties:
        expiry:
          type: string
          description: <p>Date and time of expiry of this device (if applicable)</p>
        lotNumber:
          type: string
          description: <p>Lot number of manufacture</p>
        manufacturer:
          type: string
          description: <p>Name of device manufacturer</p>
        model:
          type: string
          description: <p>Model id assigned by the manufacturer</p>
        patient:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: <p>We’ll send a status of entered-in-error for soft-deleted records.  All other records will have a status of available.</p>
        type:
          $ref: '#/components/schemas/CodeableConcept'
        udi:
          type: string
          description: <p>FDA mandated Composite Unique Device Identifier</p>
      required:
        - expiry
        - lotNumber
        - manufacturer
        - model
        - status
        - udi
    DeviceR4:
      type: object
      description: A Response Type
      properties:
        contact:
          type: object
          description: Area code and phone number.
          properties: {}
        deviceName:
          type: object
          description: <p>Device name and type details.</p>
          properties:
            name:
              type: string
              description: <p>The name of the device.</p>
            type:
              type: string
              description: <p>Always set to "other".</p>
        distinctIdentifier:
          type: string
          description: Distinct identification code.
        expirationDate:
          type: string
          description: <p>Device expiration date.</p>
        location:
          $ref: '#/components/schemas/Reference'
        lotNumber:
          type: string
          description: <p>Device lot number.</p>
        manufactureDate:
          type: string
          description: <p>Date of device manufacture.</p>
        manufacturer:
          type: string
          description: <p>Device manufacturer.</p>
        modelNumber:
          type: string
          description: <p>Device model number.</p>
        note:
          $ref: '#/components/schemas/Annotation'
        owner:
          $ref: '#/components/schemas/Reference'
        parent:
          $ref: '#/components/schemas/Reference'
        patient:
          $ref: '#/components/schemas/Reference'
        property:
          type: object
          description: |-
            Implant type information, including:
            <ul><li>Permanence
            <li>Radioactive
            <li>Site
            <li>Laterality
            <li>Size
            <li>GUDID request status
            <li>GUDID MRI safety information
            <li>GUDID contains dry or latex rubber
            <li>GMDN Preferred term name</ul>
          properties: {}
        safety:
          $ref: '#/components/schemas/CodeableConcept'
        serialNumber:
          type: string
          description: <p>Device serial number.</p>
        specialization:
          type: object
          description: Specialization information.
          properties:
            systemType:
              $ref: '#/components/schemas/CodeableConcept'
        status:
          type: string
          description: |-
            <p>One of the following values:</p>
            <ul>
              <li>active</li>
              <li>inactive</li>
              <li>entered-in-error</li>
              <li>unknown</li>
            </ul>
        type:
          $ref: '#/components/schemas/CodeableConcept'
        udiCarrier:
          type: object
          description: |-
            <p>Device carrier identification details.</p>
            <p>Under FDA regulations, all medical devices are required to include a Unique Device Identifier (UDI) on device labels and packages, in both human-readable and barcode format. The FDA also maintains a public database of medical devices and UDI information called the <a href="https://accessgudid.nlm.nih.gov/">Global Unique Device Identification Database (GUDID)</a>.</p>
            <p>A Unique Device Identifier (UDI) is a unique numeric or alphanumeric code that is comprised of two components:</p>
            <ul>
              <li>Device Identifier (DI) ("Static UDI") – a mandatory, fixed portion of a UDI that identifiers the labeler and specific version or model of a device.</li>
              <li>Production Identifiers (PI) ("Dynamic UDI") – a conditional, variable portion of a UDI that identifies one or more of the following:</li>
              <ul>
              <li>Lot or batch number within which a device was manufactured</li>
              <li>Serial number of a specific device</li>
              <li>Expiration date of a specific device</li>
              <li>Production date of a specific device</li>
              <li>Distinct identification code for a human cell, tissue, or cellular- and tissue-based product</li>
            </ul>
            </ul>
            <p>When documenting a UDI for an implant in OpTime, you will need to use an identifier that is in a valid format for the selected issuer. Here are some example UDIs you can use for testing:</p>
            <table class="table table-hover">
            <tr>
              <th>UDI Type / Issuer</th>
              <th>Example Device ID</th>
            </tr>
            <tr>
              <td>ICCBBA</td>
              <td>W4184228005T0473</td>
            </tr>
            <tr>
              <td>HIBC</td>
              <td>MDLXMAG120200</td>
            </tr>
            <tr>
              <td>GS1</td>
              <td>00822409025305</td>
            </tr>
            </table>
          properties:
            carrierHRF:
              type: string
              description: <p>Device carrier's UDI human-readable barcode string.</p>
            deviceIdentifier:
              type: string
              description: <p>Device identifier - fixed portion of UDI.</p>
            entryType:
              type: string
              description: <p>Always set to "unknown".</p>
          required:
            - carrierHRF
            - deviceIdentifier
            - entryType
        version:
          type: object
          description: Version information.
          properties:
            value:
              type: string
              description: GUDID version or model.
      required:
        - contact
        - deviceName
        - distinctIdentifier
        - expirationDate
        - location
        - lotNumber
        - manufactureDate
        - manufacturer
        - modelNumber
        - note
        - owner
        - parent
        - patient
        - property
        - safety
        - serialNumber
        - status
        - type
        - udiCarrier
    DeviceSTU3:
      type: object
      description: A Response Type
      properties:
        expirationDate:
          type: string
          description: <p>Device expiration date.</p>
        id:
          type: string
          description: The Device FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        lotNumber:
          type: string
          description: <p>Device lot number.</p>
        manufactureDate:
          type: string
          description: <p>Date of device manufacture.</p>
        manufacturer:
          type: string
          description: <p>Device manufacturer.</p>
        meta:
          type: object
          description: The document metadata.*
          properties:
            profile:
              type: string
              description: '*Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://nictiz.nl/fhir/StructureDefinition/zib-MedicalDeviceProduct'
          required:
            - profile
        model:
          type: string
          description: <p>Device model or catalog number.</p>
        patient:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: |-
            <p>One of the following values:</p>
            <ul>
              <li>active</li>
              <li>inactive</li>
              <li>entered-in-error</li>
              <li>unknown</li>
            </ul>
            <p>Configuration options for device status are available.</p>
            <p>* For external devices, this is hard coded to a value of active.</p>
        type:
          $ref: '#/components/schemas/CodeableConcept'
        udi:
          type: object
          description: A Response Type
          properties:
            carrierHRF:
              type: string
              description: <p>Human-readable barcode string.</p>
            deviceIdentifier:
              type: string
              description: <p>Device identifier.</p>
            entryType:
              type: string
              description: <p>This element is always set to a value of "unknown."</p>
            name:
              type: string
              description: <p>Device name.</p>
          required:
            - carrierHRF
            - deviceIdentifier
            - entryType
            - name
      required:
        - expirationDate
        - identifier
        - lotNumber
        - manufactureDate
        - manufacturer
        - meta
        - model
        - patient
        - status
        - type
        - udi
    Bundle_DeviceDSTU2:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_DeviceDSTU2'
          type: array
    Bundle_Entry_DeviceDSTU2:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/DeviceDSTU2'
    Bundle_DeviceR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_DeviceR4'
          type: array
    Bundle_Entry_DeviceR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/DeviceR4'
    Bundle_DeviceSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_DeviceSTU3'
          type: array
    Bundle_Entry_DeviceSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/DeviceSTU3'
    DeviceRequestR4:
      type: object
      description: A Response Type
      properties:
        authoredOn:
          type: string
          description: The date on which a request was made, or the day of the order that contains it.
        basedOn:
          $ref: '#/components/schemas/Reference'
        codeCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        encounter:
          $ref: '#/components/schemas/Reference'
        identifier:
          $ref: '#/components/schemas/Identifier'
        intent:
          type: string
          description: |-
            <p>The intent for this request. Can be one of the following:</p>
            <ul>
            <li>order</li>
            <li>proposal</li>
            <li>plan</li>
            </ul>
        occurrencePeriod:
          $ref: '#/components/schemas/Period'
        extension:
          $ref: '#/components/schemas/Extension'
        priority:
          type: string
          description: |-
            <p>The priority of a request. Can be one of the following:</p>
            <ul>
            <li>routine</li>
            <li>urgent</li>
            <li>asap</li>
            <li>stat</li>
            </ul>
        requester:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: |-
            <p>The status of a request. Can be one of the following:</p>
            <ul>
            <li>active</li>
            <li>completed</li>
            <li>draft</li>
            <li>cancelled</li>
            <li>entered-in-error</li>
            <li>unknown</li>
            </ul>
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - authoredOn
        - basedOn
        - encounter
        - identifier
        - occurrencePeriod
        - extension
        - priority
        - requester
        - status
    DeviceRequestSTU3:
      type: object
      description: A Response Type
      properties:
        authoredOn:
          type: string
          description: The date on which a request was made, or the day of the order that contains it.
        basedOn:
          $ref: '#/components/schemas/Reference'
        codeCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        context:
          $ref: '#/components/schemas/Reference'
        identifier:
          $ref: '#/components/schemas/Identifier'
        intent:
          $ref: '#/components/schemas/CodeableConcept'
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://nictiz.nl/fhir/StructureDefinition/zib-MedicalDeviceRequest'
          required:
            - profile
        occurrencePeriod:
          $ref: '#/components/schemas/Period'
        extension:
          $ref: '#/components/schemas/Extension'
        priority:
          type: string
          description: |-
            <p>The priority of a request. Can be one of the following:</p>
            <ul>
            <li>routine</li>
            <li>urgent</li>
            <li>asap</li>
            <li>stat</li>
            </ul>
        requester:
          type: object
          description: 'The provider responsible for making the request. '
          properties:
            agent:
              $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: |-
            <p>The status of a request. Can be one of the following:</p>
            <ul>
            <li>active</li>
            <li>completed</li>
            <li>draft</li>
            <li>cancelled</li>
            <li>entered-in-error</li>
            <li>unknown</li>
            </ul>
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - authoredOn
        - basedOn
        - context
        - identifier
        - meta
        - occurrencePeriod
        - extension
        - priority
        - requester
        - status
    Bundle_DeviceRequestR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_DeviceRequestR4'
          type: array
    Bundle_Entry_DeviceRequestR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/DeviceRequestR4'
    Bundle_DeviceRequestSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_DeviceRequestSTU3'
          type: array
    Bundle_Entry_DeviceRequestSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/DeviceRequestSTU3'
    DeviceUseStatementR4:
      type: object
      description: A Response Type
      properties:
        bodySite:
          $ref: '#/components/schemas/CodeableConcept'
        device:
          $ref: '#/components/schemas/Reference'
        extension:
          $ref: '#/components/schemas/Extension'
        id:
          type: string
          description: The DeviceUseStatement FHIR ID.
        note:
          $ref: '#/components/schemas/Annotation'
        status:
          type: string
          description: |-
            <p>One of the following values:</p>
            <ul>
            <li>active</li>
            <li>completed</li>
            <li>intended</li>
            <li>stopped</li>
            </ul>
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - bodySite
        - extension
        - note
        - status
    DeviceUseStatementSTU3:
      type: object
      description: A Response Type
      properties:
        bodySite:
          $ref: '#/components/schemas/CodeableConcept'
        device:
          $ref: '#/components/schemas/Reference'
        extension:
          $ref: '#/components/schemas/Extension'
        id:
          type: string
          description: The DeviceUseStatement FHIR ID.
        meta:
          type: object
          description: The document metadata.*
          properties:
            profile:
              type: string
              description: '*Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://nictiz.nl/fhir/StructureDefinition/zib-MedicalDevice'
          required:
            - profile
        note:
          $ref: '#/components/schemas/Annotation'
        status:
          type: string
          description: |
            <p>One of the following values:</p>
            <ul>
            <li>active</li>
            <li>completed</li>
            <li>intended</li>
            <li>stopped</li>
            <p>*For external devices, this is hard coded to a value of active.</p>
        subject:
          $ref: '#/components/schemas/Reference'
        whenUsed:
          $ref: '#/components/schemas/Period'
      required:
        - bodySite
        - extension
        - meta
        - note
        - status
        - whenUsed
    Bundle_DeviceUseStatementR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_DeviceUseStatementR4'
          type: array
    Bundle_Entry_DeviceUseStatementR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/DeviceUseStatementR4'
    Bundle_DeviceUseStatementSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_DeviceUseStatementSTU3'
          type: array
    Bundle_Entry_DeviceUseStatementSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/DeviceUseStatementSTU3'
    DiagnosticReportDSTU2:
      type: object
      description: An instance of the DSTU2 DiagnosticReport resource.
      properties:
        category:
          $ref: '#/components/schemas/CodeableConcept'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        effectiveDateTime:
          type: string
          description: Clinically relevant time/time period for report.
        identifier:
          $ref: '#/components/schemas/Identifier'
        issued:
          type: string
          description: DateTime this version was released.
        performer:
          $ref: '#/components/schemas/Reference'
        result:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: 'The status of the report. You can find the list of values here: <a href="http://hl7.org/fhir/diagnostic-report-status">http://hl7.org/fhir/diagnostic-report-status</a>.'
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - effectiveDateTime
        - issued
    DiagnosticReportR4:
      type: object
      description: An instance of the R4 DiagnosticReport resource.
      properties:
        category:
          $ref: '#/components/schemas/CodeableConcept'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        effectiveDateTime:
          type: string
          description: Clinically relevant time/time period for report.
        encounter:
          $ref: '#/components/schemas/Reference'
        identifier:
          $ref: '#/components/schemas/Identifier'
        issued:
          type: string
          description: |-
            DateTime this version was released.

            Available starting in the February 2022 version of Epic and in the November 2021 version with special updates.
        performer:
          $ref: '#/components/schemas/Reference'
        presentedForm:
          type: object
          description: |-
            <p>Shows links to the entire Binary textual results of the report.
            <p>Available starting in the November 2021 version of Epic and in the August 2021 version with special updates.
          properties:
            contentType:
              type: string
              description: Mime content type code.
            title:
              type: string
              description: Label to display in place of the data.
            url:
              type: string
              description: Binary link for the textual content.
        result:
          $ref: '#/components/schemas/Reference'
        resultsInterpreter:
          $ref: '#/components/schemas/Reference'
        extension:
          $ref: '#/components/schemas/Extension'
        status:
          type: string
          description: 'The status of the report. You can find the list of values here: <a href="http://hl7.org/fhir/diagnostic-report-status">http://hl7.org/fhir/diagnostic-report-status</a>.'
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - resultsInterpreter
        - extension
    DiagnosticReportSTU3:
      type: object
      description: An instance of the STU3 DiagnosticReport resource.
      properties:
        category:
          $ref: '#/components/schemas/CodeableConcept'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        context:
          $ref: '#/components/schemas/Reference'
        effectiveDateTime:
          type: string
          description: Clinically relevant time/time period for report.
        identifier:
          $ref: '#/components/schemas/Identifier'
        issued:
          type: string
          description: |-
            DateTime this version was released. 

            Available starting in the February 2022 version of Epic and in the November 2021 version with special update.
        performer:
          type: object
          description: Participants in producing the report. This is always a reference to the Practitioner resource.
          properties: {}
        result:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: 'The status of the report. You can find the list of values here: <a href="http://hl7.org/fhir/diagnostic-report-status">http://hl7.org/fhir/diagnostic-report-status</a>.'
        subject:
          $ref: '#/components/schemas/Reference'
    Bundle_DiagnosticReportDSTU2:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_DiagnosticReportDSTU2'
          type: array
    Bundle_Entry_DiagnosticReportDSTU2:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/DiagnosticReportDSTU2'
    Bundle_DiagnosticReportR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_DiagnosticReportR4'
          type: array
    Bundle_Entry_DiagnosticReportR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/DiagnosticReportR4'
    Bundle_DiagnosticReportSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_DiagnosticReportSTU3'
          type: array
    Bundle_Entry_DiagnosticReportSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/DiagnosticReportSTU3'
    DocumentReferenceSTU3:
      type: object
      description: An instance of the STU3 DocumentReference resource.
      properties:
        authenticator:
          $ref: '#/components/schemas/Reference'
        author:
          $ref: '#/components/schemas/Reference'
        class:
          $ref: '#/components/schemas/CodeableConcept'
        content:
          type: object
          description: Where to access the document.
          properties:
            attachment:
              type: object
              description: Reference to Binary FHIR resource
              properties:
                contentType:
                  type: string
                  description: Mime content type code. Always "application/pdf".
                url:
                  type: string
                  description: Link to the Binary resource for text content.
              required:
                - contentType
        context:
          type: object
          description: Context details.
          properties:
            encounter:
              $ref: '#/components/schemas/Reference'
            period:
              $ref: '#/components/schemas/Period'
            practiceSetting:
              $ref: '#/components/schemas/CodeableConcept'
          required:
            - encounter
            - period
            - practiceSetting
        created:
          type: string
          description: The instant when the exam was finalized.
        description:
          type: string
          description: The name of the procedure.
        docStatus:
          type: string
          description: If the study is addended, returns "amended". Otherwise, returns "final".
        id:
          type: string
          description: The DocumentReference FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        indexed:
          type: string
          description: The instant when the study was finalized. If the study was addended, returns the instant when the last addendum was finalized.
        masterIdentifier:
          $ref: '#/components/schemas/Identifier'
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://nictiz.nl/fhir/StructureDefinition/IHE.MHD.Minimal.DocumentReference'
          required:
            - profile
        status:
          type: string
          description: The status of the result. Always "current".
        subject:
          $ref: '#/components/schemas/Reference'
        type:
          $ref: '#/components/schemas/CodeableConcept'
      required:
        - authenticator
        - author
        - context
        - created
        - description
        - docStatus
        - identifier
        - meta
        - subject
    DocumentReferenceR4:
      type: object
      description: An instance of the R4 DocumentReference resource.
      properties:
        authenticator:
          $ref: '#/components/schemas/Reference'
        author:
          $ref: '#/components/schemas/Reference'
        category:
          $ref: '#/components/schemas/CodeableConcept'
        content:
          type: object
          description: Where to access the document.
          properties:
            attachment:
              type: object
              description: Reference to Binary FHIR resource
              properties:
                contentType:
                  type: string
                  description: Mime content type code. Always "application/pdf".
                url:
                  type: string
                  description: Link to the Binary resource for text content.
              required:
                - contentType
        context:
          type: object
          description: Context details.
          properties:
            encounter:
              $ref: '#/components/schemas/Reference'
            period:
              $ref: '#/components/schemas/Period'
            practiceSetting:
              $ref: '#/components/schemas/CodeableConcept'
          required:
            - encounter
            - period
            - practiceSetting
        date:
          type: string
          description: The instant when the study was finalized. If the study was addended, returns the instant when the last addendum was finalized.
        description:
          type: string
          description: The name of the procedure.
        docStatus:
          type: string
          description: If the study is addended, returns "amended". Otherwise, returns "final".
        id:
          type: string
          description: The DocumentReference FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        masterIdentifier:
          $ref: '#/components/schemas/Identifier'
        status:
          type: string
          description: The status of the result. Always "current".
        subject:
          $ref: '#/components/schemas/Reference'
        type:
          $ref: '#/components/schemas/CodeableConcept'
      required:
        - authenticator
        - author
        - context
        - description
        - docStatus
        - identifier
    DocumentReferenceDSTU2:
      type: object
      description: An instance of the DSTU2 DocumentReference resource.
      properties:
        class:
          $ref: '#/components/schemas/CodeableConcept'
        content:
          type: object
          description: The document referenced.
          properties:
            attachment:
              type: object
              description: Where to access the document.
              properties:
                contentType:
                  type: string
                  description: Media type of the resource.
                url:
                  type: string
                  description: A reference to the Binary resource which contains the document content.
        context:
          type: object
          description: Context details.
          properties:
            related:
              type: object
              description: The associated encounter.
              properties:
                identifier:
                  $ref: '#/components/schemas/Identifier'
        created:
          type: string
          description: |-
            Document creation time.

            This element is not populated in February 2019 and later versions of Epic. In February 2019 and later, use the Indexed element instead.
        id:
          type: string
          description: The DocumentReference FHIR ID.
        indexed:
          type: string
          description: When this document reference was created.
        masterIdentifier:
          $ref: '#/components/schemas/Identifier'
        status:
          type: string
          description: Current, superseded, or entered-in-error.
        subject:
          $ref: '#/components/schemas/Reference'
        type:
          $ref: '#/components/schemas/CodeableConcept'
    Bundle_DocumentReferenceR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_DocumentReferenceR4'
          type: array
    Bundle_Entry_DocumentReferenceR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/DocumentReferenceR4'
    Bundle_DocumentReferenceSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_DocumentReferenceSTU3'
          type: array
    Bundle_Entry_DocumentReferenceSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/DocumentReferenceSTU3'
    Bundle_DocumentReferenceDSTU2:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_DocumentReferenceDSTU2'
          type: array
    Bundle_Entry_DocumentReferenceDSTU2:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/DocumentReferenceDSTU2'
    EncounterR4:
      type: object
      description: A single Encounter resource.
      properties:
        extension:
          $ref: '#/components/schemas/Extension'
        account:
          $ref: '#/components/schemas/Reference'
        class:
          type: object
          description: |
            Classification of patient encounter.
            For organizations in the Netherlands, this element includes only the ACT encounter code, following the same logic used for Care Everywhere encounter CDA documents.
            This element is available starting in the November 2021 version of Epic.
          properties: {}
        diagnosis:
          type: object
          description: |
            Reference to the Condition (Problem) resource. Returns the principal problem for the hospital encounter. Used only for hospital encounters.
            This element is available starting in the November 2021 version of Epic.
          properties: {}
        episodeOfCare:
          $ref: '#/components/schemas/Reference'
        hospitalization:
          type: object
          description: Details about the admission to a healthcare service.
          properties:
            destination:
              $ref: '#/components/schemas/Reference'
            dischargeDisposition:
              $ref: '#/components/schemas/CodeableConcept'
            origin:
              $ref: '#/components/schemas/Reference'
            reAdmission:
              $ref: '#/components/schemas/CodeableConcept'
          required:
            - destination
            - dischargeDisposition
            - origin
            - reAdmission
        id:
          type: string
          description: The Encounter FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        location:
          type: object
          description: 'Can return a department, location, hospital room, or bed. Department and location are determined dynamically depending on a variety of factors. '
          properties:
            location:
              $ref: '#/components/schemas/Reference'
            period:
              $ref: '#/components/schemas/Period'
          required:
            - period
        participant:
          type: object
          description: List of participants involved in the encounter.
          properties:
            individual:
              $ref: '#/components/schemas/Reference'
            period:
              $ref: '#/components/schemas/Period'
            extension:
              $ref: '#/components/schemas/Extension'
            type:
              $ref: '#/components/schemas/CodeableConcept'
          required:
            - period
            - type
        partOf:
          $ref: '#/components/schemas/Reference'
        period:
          $ref: '#/components/schemas/Period'
        priority:
          $ref: '#/components/schemas/CodeableConcept'
        reasonCode:
          $ref: '#/components/schemas/CodeableConcept'
        serviceType:
          $ref: '#/components/schemas/CodeableConcept'
        status:
          type: string
          description: The encounter status. Full list of statuses can be found <a href="https://www.hl7.org/fhir/valueset-encounter-status.html">here</a>.
        subject:
          $ref: '#/components/schemas/Reference'
        type:
          $ref: '#/components/schemas/CodeableConcept'
      required:
        - extension
        - diagnosis
        - episodeOfCare
        - hospitalization
        - location
        - partOf
        - period
        - priority
        - reasonCode
        - serviceType
        - type
    EncounterSTU3:
      type: object
      description: A single Encounter resource.
      properties:
        appointment:
          $ref: '#/components/schemas/Reference'
        class:
          type: object
          description: |
            Classification of patient encounter.
            For organizations in the Netherlands, this element includes only the ACT encounter code, following the same logic used for Care Everywhere encounter CDA documents. This element is available starting in the November 2021 version of Epic.
          properties: {}
        diagnosis:
          type: object
          description: Reference to the Condition (Problem) resource. Returns the principal problem for the hospital encounter. Used only for hospital encounters. This element is available starting in the November 2021 version of Epic.
          properties: {}
        hospitalization:
          type: object
          description: Details about the admission to a healthcare service.
          properties:
            admitSource:
              $ref: '#/components/schemas/CodeableConcept'
            destination:
              $ref: '#/components/schemas/Reference'
            dischargeDisposition:
              $ref: '#/components/schemas/CodeableConcept'
            origin:
              $ref: '#/components/schemas/Reference'
            reAdmission:
              $ref: '#/components/schemas/CodeableConcept'
          required:
            - destination
            - dischargeDisposition
            - origin
            - reAdmission
        id:
          type: string
          description: The Encounter FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        location:
          type: object
          description: List of locations where the patient has been.
          properties:
            location:
              $ref: '#/components/schemas/Reference'
            period:
              $ref: '#/components/schemas/Period'
          required:
            - period
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://nictiz.nl/fhir/StructureDefinition/zib-Encounter'
          required:
            - profile
        participant:
          type: object
          description: List of participants involved in the encounter.
          properties:
            individual:
              $ref: '#/components/schemas/Reference'
            period:
              $ref: '#/components/schemas/Period'
            type:
              $ref: '#/components/schemas/CodeableConcept'
          required:
            - period
        partOf:
          $ref: '#/components/schemas/Reference'
        period:
          $ref: '#/components/schemas/Period'
        priority:
          $ref: '#/components/schemas/CodeableConcept'
        reason:
          $ref: '#/components/schemas/CodeableConcept'
        status:
          type: string
          description: The encounter status. Full list of statuses can be found <a href="http://hl7.org/fhir/stu3/valueset-encounter-status.html">here</a>.
        subject:
          $ref: '#/components/schemas/Reference'
        type:
          $ref: '#/components/schemas/CodeableConcept'
      required:
        - appointment
        - diagnosis
        - hospitalization
        - location
        - meta
        - participant
        - partOf
        - period
        - priority
        - reason
        - type
    Bundle_EncounterR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_EncounterR4'
          type: array
    Bundle_Entry_EncounterR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/EncounterR4'
    Bundle_EncounterSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_EncounterSTU3'
          type: array
    Bundle_Entry_EncounterSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/EncounterSTU3'
    EndpointR4:
      type: object
      description: A Response Type
      properties:
        address:
          type: string
          description: <p>The provider address. This is a direct address, not a general address.</p>
        connectionType:
          type: object
          description: <p>This is always "direct-project".</p>
          properties: {}
        name:
          type: string
          description: <p>A name by which you can identify this endpoint.</p>
        payloadMimeType:
          type: string
          description: <p>This element returns "text/xml", "text/plain", and "application/pdf".</p>
        payloadType:
          $ref: '#/components/schemas/CodeableConcept'
        status:
          type: string
          description: <p>This is always "active".</p>
      required:
        - name
        - payloadMimeType
        - status
    EndpointSTU3:
      type: object
      description: A Response Type
      properties:
        address:
          type: string
          description: <p>The provider address. This is a direct address, not a general address.</p>
        connectionType:
          type: object
          description: <p>This is always "direct-project".</p>
          properties: {}
        name:
          type: string
          description: <p>A name by which you can identify this endpoint.</p>
        payloadMimeType:
          type: string
          description: <p>This element returns "text/xml", "text/plain", and "application/pdf".</p>
        payloadType:
          $ref: '#/components/schemas/CodeableConcept'
        status:
          type: string
          description: <p>This is always "active".</p>
      required:
        - name
        - payloadMimeType
        - status
    EpisodeOfCareR4:
      type: object
      description: A Response Type
      properties:
        extension:
          $ref: '#/components/schemas/Extension'
        diagnosis:
          type: object
          description: Returns the list of diagnoses associated with the episode. Deleted episodes are not included.
          properties:
            condition:
              $ref: '#/components/schemas/Reference'
        id:
          type: string
          description: EpisodeOfCare FHIR ID
        identifier:
          $ref: '#/components/schemas/Identifier'
        patient:
          $ref: '#/components/schemas/Reference'
        period:
          $ref: '#/components/schemas/Period'
        status:
          type: string
          description: 'The episode status of active, finished, or cancelled. These correspond to the Epic episode statuses of active, resolved, and deleted, respectively. '
        team:
          $ref: '#/components/schemas/Reference'
        type:
          $ref: '#/components/schemas/CodeableConcept'
      required:
        - extension
        - diagnosis
    ExplanationOfBenefitR4:
      type: object
      description: An instance of the R4 ExplanationOfBenefit resource.
      properties:
        billablePeriod:
          $ref: '#/components/schemas/Period'
        careTeam:
          type: object
          description: The members of the team who provided the products and services.
          properties:
            provider:
              $ref: '#/components/schemas/Reference'
            role:
              $ref: '#/components/schemas/CodeableConcept'
            sequence:
              type: object
              description: The sequence ID.
              properties: {}
          required:
            - sequence
        created:
          type: string
          description: Date when the claim was created.
        diagnosis:
          type: object
          description: Each diagnosis on the claim will have an entry. Rx claims do not support diagnosis.
          properties:
            diagnosisCodeableConcept:
              $ref: '#/components/schemas/CodeableConcept'
            packageCode:
              $ref: '#/components/schemas/CodeableConcept'
            sequence:
              type: object
              description: The sequence ID.
              properties: {}
            type:
              $ref: '#/components/schemas/CodeableConcept'
          required:
            - sequence
        disposition:
          type: string
          description: Description of the status of the adjudication.
        facility:
          $ref: '#/components/schemas/Reference'
        id:
          type: string
          description: The FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        insurance:
          type: object
          description: Member's ID from the coverage.
          properties:
            coverage:
              $ref: '#/components/schemas/Reference'
        insurer:
          $ref: '#/components/schemas/Reference'
        item:
          type: object
          description: Service lines.
          properties:
            diagnosisSequence:
              type: object
              description: Diagnosis numbers.
              properties: {}
            locationCodeableConcept:
              $ref: '#/components/schemas/CodeableConcept'
            modifier:
              $ref: '#/components/schemas/CodeableConcept'
            productOrService:
              $ref: '#/components/schemas/CodeableConcept'
            quantity:
              type: object
              description: Quantity
              properties: {}
            revenue:
              $ref: '#/components/schemas/CodeableConcept'
            sequence:
              type: object
              description: The sequence ID.
              properties: {}
            servicedDate:
              type: string
              description: The service date.
            servicedPeriod:
              $ref: '#/components/schemas/Period'
          required:
            - diagnosisSequence
            - sequence
        outcome:
          type: string
          description: 'Non-AP Claims: complete Paid AP claims: complete Claim in the status of "new": queued (this status is very rare) All other claims: partial'
        patient:
          $ref: '#/components/schemas/Reference'
        procedure:
          type: object
          description: ICD procedures.
          properties:
            date:
              type: string
              description: Date of the procedure.
            procedureCodeableConcept:
              $ref: '#/components/schemas/CodeableConcept'
            sequence:
              type: object
              description: The sequence ID.
              properties: {}
          required:
            - sequence
        provider:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: Status of the claim. 'active' and 'cancelled' claims can be shown in search requests.
        subType:
          $ref: '#/components/schemas/CodeableConcept'
        supportingInfo:
          type: object
          description: 'The following supporting info is supported: All claims: Received date All Medical claims: Discharge disposition Occurrence span codes Admission type Admission source UB claims: Type of Bill Rx Claims: Record status code Reject Override Code Reject code Fill Number Days Supply DAW Code'
          properties:
            category:
              $ref: '#/components/schemas/CodeableConcept'
            code:
              $ref: '#/components/schemas/CodeableConcept'
            sequence:
              type: object
              description: The sequence ID.
              properties: {}
          required:
            - sequence
        type:
          $ref: '#/components/schemas/CodeableConcept'
    Bundle_ExplanationOfBenefitR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ExplanationOfBenefitR4'
          type: array
    Bundle_Entry_ExplanationOfBenefitR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ExplanationOfBenefitR4'
    FamilyMemberHistoryR4:
      type: object
      description: A Response Type
      properties:
        bornDate:
          type: string
          description: Family member’s birth date
        bornPeriod:
          $ref: '#/components/schemas/Period'
        condition:
          type: object
          description: Condition that the related person had
          properties:
            code:
              $ref: '#/components/schemas/CodeableConcept'
            note:
              $ref: '#/components/schemas/Annotation'
            onsetAge:
              type: object
              description: How old the family member was at the time of condition onset
              properties: {}
          required:
            - note
            - onsetAge
        dataAbsentReason:
          $ref: '#/components/schemas/CodeableConcept'
        date:
          type: string
          description: When history was recorded or last updated
        deceasedBoolean:
          type: boolean
          description: Whether or not the family member is deceased
        id:
          type: string
          description: FHIR ID for this FamilyMemberHistory instance
        identifier:
          $ref: '#/components/schemas/Identifier'
        name:
          type: string
          description: The family member described
        note:
          $ref: '#/components/schemas/Annotation'
        relationship:
          $ref: '#/components/schemas/CodeableConcept'
        sex:
          $ref: '#/components/schemas/CodeableConcept'
        status:
          type: string
          description: Completion status for family member's history. Either "health-unknown" or "completed".
      required:
        - bornDate
        - bornPeriod
        - condition
        - dataAbsentReason
        - date
        - deceasedBoolean
        - identifier
        - name
        - note
    Bundle_FamilyMemberHistoryDSTU2:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_FamilyMemberHistoryDSTU2'
          type: array
    Bundle_Entry_FamilyMemberHistoryDSTU2:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/FamilyMemberHistoryR4'
    FlagR4:
      type: object
      description: A single instance of a Flag resource.
      properties:
        category:
          $ref: '#/components/schemas/CodeableConcept'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        id:
          type: string
          description: The Flag FHIR ID.
        period:
          $ref: '#/components/schemas/Period'
        status:
          type: string
          description: The status of the FYI.
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - category
        - period
    FlagSTU3:
      type: object
      description: A single instance of a Flag resource.
      properties:
        category:
          $ref: '#/components/schemas/CodeableConcept'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        id:
          type: string
          description: The Flag FHIR ID.
        period:
          $ref: '#/components/schemas/Period'
        status:
          type: string
          description: The status of the FYI.
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - category
        - period
    Bundle_FlagR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_FlagR4'
          type: array
    Bundle_Entry_FlagR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/FlagR4'
    Bundle_FlagSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_FlagSTU3'
          type: array
    Bundle_Entry_FlagSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/FlagSTU3'
    GoalSTU3:
      type: object
      description: A single Goal resource.
      properties:
        addresses:
          $ref: '#/components/schemas/Reference'
        category:
          $ref: '#/components/schemas/CodeableConcept'
        description:
          $ref: '#/components/schemas/CodeableConcept'
        expressedBy:
          $ref: '#/components/schemas/Reference'
        id:
          type: string
          description: The Goal FHIR ID.
        note:
          $ref: '#/components/schemas/Annotation'
        startDate:
          type: string
          description: When pursuit of the goal begins.
        status:
          type: string
          description: |-
            <p>The current status of the goal. The following values are supported:</p>
            <ul>
            <li>in-progress</li>
            <li>achieved</li>
            <li>cancelled</li>
            </ul>

            <p>The status for received document records is always "in-progress."</p>
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - addresses
        - category
        - expressedBy
        - note
        - startDate
        - subject
    GoalR4:
      type: object
      description: A single Goal resource.
      properties:
        achievementStatus:
          $ref: '#/components/schemas/CodeableConcept'
        addresses:
          $ref: '#/components/schemas/Reference'
        category:
          $ref: '#/components/schemas/CodeableConcept'
        description:
          $ref: '#/components/schemas/CodeableConcept'
        expressedBy:
          $ref: '#/components/schemas/Reference'
        id:
          type: string
          description: The Goal FHIR ID.
        lifecycleStatus:
          type: string
          description: |-
            <p>Status of the goal. Previously "class" in STU3. Possible values are:</p>
            <ul>
            <li>active</li>
            <li>complete</li>
            <li>cancelled</li>
            </ul>
        note:
          $ref: '#/components/schemas/Annotation'
        startDate:
          type: string
          description: When goal pursuit begins.
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - achievementStatus
        - addresses
        - category
        - expressedBy
        - note
        - startDate
        - subject
    GoalDSTU2:
      type: object
      description: A single Goal resource.
      properties:
        addresses:
          $ref: '#/components/schemas/Reference'
        author:
          $ref: '#/components/schemas/Reference'
        category:
          $ref: '#/components/schemas/CodeableConcept'
        description:
          type: string
          description: What the goal entails. SNOMED code or other text describing the goal.
        id:
          type: string
          description: The Goal FHIR ID.
        startDate:
          type: string
          description: When pursuit of the goal begins.
        status:
          type: string
          description: |-
            <p>The current status of the goal. The following values are supported:</p>
            <ul>
            <li>in-progress,</li>
            <li>achieved</li>
            <li>cancelled</li>
            </ul>
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - addresses
        - author
        - category
        - startDate
        - subject
    Bundle_GoalR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_GoalR4'
          type: array
    Bundle_Entry_GoalR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/GoalR4'
    Bundle_GoalDSTU2:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_GoalDSTU2'
          type: array
    Bundle_Entry_GoalDSTU2:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/GoalDSTU2'
    Bundle_GoalSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_GoalSTU3'
          type: array
    Bundle_Entry_GoalSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/GoalSTU3'
    ImmunizationDSTU2:
      type: object
      description: A single Immunization FHIR resource.
      properties:
        date:
          type: string
          description: Vaccination administration date.
        doseQuantity:
          type: object
          description: Information about the amount of vaccine administered.
          properties:
            unit:
              type: string
              description: Unit of amount of vaccine administered.
            value:
              type: object
              description: Amount of vaccine administered.
              properties: {}
          required:
            - unit
            - value
        expirationDate:
          type: string
          description: Vaccine expiration date.
        explanation:
          type: object
          description: Vaccine administration/non-administration reasons.
          properties:
            reasonNotGiven:
              $ref: '#/components/schemas/CodeableConcept'
          required:
            - reasonNotGiven
        id:
          type: string
          description: Immunization FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        lotNumber:
          type: string
          description: Vaccine lot number.
        manufacturer:
          $ref: '#/components/schemas/Reference'
        note:
          $ref: '#/components/schemas/Annotation'
        patient:
          $ref: '#/components/schemas/Reference'
        performer:
          $ref: '#/components/schemas/Reference'
        reported:
          type: boolean
          description: Indicates a self-reported record.
        requester:
          $ref: '#/components/schemas/Reference'
        route:
          $ref: '#/components/schemas/CodeableConcept'
        site:
          $ref: '#/components/schemas/CodeableConcept'
        status:
          type: string
          description: |-
            <p>Status of the Immunization. Possible values are:</p>
            <ul>
            <li>completed</li>
            <li>entered-in-error</li>
            <li>in-progress</li>
            <li>on-hold</li>
            </ul>
        vaccineCode:
          $ref: '#/components/schemas/CodeableConcept'
        wasNotGiven:
          type: boolean
          description: Flag for whether the immunization was given.
      required:
        - date
        - doseQuantity
        - expirationDate
        - explanation
        - identifier
        - lotNumber
        - manufacturer
        - note
        - performer
        - reported
        - requester
        - route
        - site
    ImmunizationR4:
      type: object
      description: A single Immunization resource.
      properties:
        doseQuantity:
          type: object
          description: Information about the amount of vaccine administered.
          properties:
            unit:
              type: string
              description: Unit of amount of vaccine administered.
            value:
              type: object
              description: Amount of vaccine administered.
              properties: {}
          required:
            - unit
            - value
        encounter:
          $ref: '#/components/schemas/Reference'
        expirationDate:
          type: string
          description: Vaccine expiration date.
        id:
          type: string
          description: The Immunization FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        isSubpotent:
          type: boolean
          description: Indicates that the dose wasn’t full strength. Replaces the extension "isSubpotent" in STU3.
        location:
          $ref: '#/components/schemas/Reference'
        lotNumber:
          type: string
          description: Vaccine lot number.
        manufacturer:
          $ref: '#/components/schemas/Reference'
        note:
          $ref: '#/components/schemas/Annotation'
        occurrenceDateTime:
          type: string
          description: Vaccination administration date and time (if available). Previously "date" in STU3 and earlier.
        patient:
          $ref: '#/components/schemas/Reference'
        performer:
          type: object
          description: Reference to a Practitioner that participated in the Immunization and the role they played in the interaction. Renamed from "practitioner" in STU3.
          properties:
            actor:
              $ref: '#/components/schemas/Reference'
            function:
              $ref: '#/components/schemas/CodeableConcept'
          required:
            - actor
            - function
        primarySource:
          type: boolean
          description: 'Whether the immunization data is historical and therefore reported by a patient or another system. If historical, "false" is returned as this system is not the primary source of the data. '
        reportOrigin:
          $ref: '#/components/schemas/CodeableConcept'
        route:
          $ref: '#/components/schemas/CodeableConcept'
        site:
          $ref: '#/components/schemas/CodeableConcept'
        status:
          type: string
          description: |-
            <p>Status of the Immunization. Possible values are:</p>
            <ul>
            <li>completed</li>
            <li>entered-in-error</li>
            <li>not-done</li>
            </ul>
            <p>*Note: incomplete Immunizations are not returned.</p>
        statusReason:
          $ref: '#/components/schemas/CodeableConcept'
        vaccineCode:
          $ref: '#/components/schemas/CodeableConcept'
      required:
        - doseQuantity
        - encounter
        - expirationDate
        - identifier
        - isSubpotent
        - location
        - lotNumber
        - manufacturer
        - note
        - occurrenceDateTime
        - performer
        - primarySource
        - reportOrigin
        - route
        - site
        - statusReason
    ImmunizationSTU3:
      type: object
      description: A single Immunization resource.
      properties:
        date:
          type: string
          description: Vaccination administration date and time (if available).
        doseQuantity:
          type: object
          description: Information about the amount of vaccine administered.
          properties:
            unit:
              type: string
              description: Unit of amount of vaccine administered.
            value:
              type: object
              description: Amount of vaccine administered.
              properties: {}
          required:
            - unit
            - value
        encounter:
          $ref: '#/components/schemas/Reference'
        expirationDate:
          type: string
          description: Vaccine expiration date.
        explanation:
          type: object
          description: Vaccine administration/non-administration reasons.
          properties:
            reasonNotGiven:
              $ref: '#/components/schemas/CodeableConcept'
          required:
            - reasonNotGiven
        id:
          type: string
          description: The Immunization FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        extension:
          $ref: '#/components/schemas/Extension'
        location:
          $ref: '#/components/schemas/Reference'
        lotNumber:
          type: string
          description: Vaccine lot number.
        manufacturer:
          $ref: '#/components/schemas/Reference'
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://nictiz.nl/fhir/StructureDefinition/zib-Vaccination'
          required:
            - profile
        note:
          $ref: '#/components/schemas/Annotation'
        notGiven:
          type: boolean
          description: Flag for whether the immunization was given.
        patient:
          $ref: '#/components/schemas/Reference'
        practitioner:
          type: object
          description: 'Reference to a Practitioner that participated in the Immunization and the role they played in the interaction. '
          properties:
            actor:
              $ref: '#/components/schemas/Reference'
            role:
              $ref: '#/components/schemas/CodeableConcept'
          required:
            - actor
            - role
        primarySource:
          type: boolean
          description: 'Whether the immunization data is historical and therefore reported by a patient or another system. If historical, "false" is returned as this system is not the primary source of the data. '
        route:
          $ref: '#/components/schemas/CodeableConcept'
        site:
          $ref: '#/components/schemas/CodeableConcept'
        status:
          type: string
          description: |-
            <p>Status of the Immunization. Possible values are:</p>
            <ul>
            <li>completed</li>
            <li>entered-in-error</li>
            </ul>
            <p>*Note: deferred and incomplete Immunizations are not returned.</p>
        vaccineCode:
          $ref: '#/components/schemas/CodeableConcept'
      required:
        - date
        - doseQuantity
        - encounter
        - expirationDate
        - explanation
        - identifier
        - extension
        - location
        - lotNumber
        - manufacturer
        - meta
        - note
        - notGiven
        - practitioner
        - route
        - site
    Bundle_ImmunizationDSTU2:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ImmunizationDSTU2'
          type: array
    Bundle_Entry_ImmunizationDSTU2:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ImmunizationDSTU2'
    Bundle_ImmunizationR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ImmunizationR4'
          type: array
    Bundle_Entry_ImmunizationR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ImmunizationR4'
    Bundle_ImmunizationSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ImmunizationSTU3'
          type: array
    Bundle_Entry_ImmunizationSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ImmunizationSTU3'
    ImmunizationRecommendationR4:
      type: object
      description: A Response Type
      properties:
        date:
          type: string
          description: The date when the immunization recommendation was created.
        extension:
          $ref: '#/components/schemas/Extension'
        patient:
          $ref: '#/components/schemas/Reference'
        recommendation:
          type: object
          description: The immunization recommendation.
          properties:
            dateCriterion:
              type: object
              description: The date when the recommended immunization is considered due or overdue.
              properties:
                code:
                  $ref: '#/components/schemas/CodeableConcept'
                value:
                  type: string
                  description: The date when the immunization is considered due or overdue.
            forecastStatus:
              $ref: '#/components/schemas/CodeableConcept'
            vaccineCode:
              $ref: '#/components/schemas/CodeableConcept'
          required:
            - dateCriterion
            - vaccineCode
      required:
        - extension
    ImmunizationRecommendationSTU3:
      type: object
      description: A Response Type
      properties:
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://nictiz.nl/fhir/StructureDefinition/zib-VaccinationRecommendation'
          required:
            - profile
        extension:
          $ref: '#/components/schemas/Extension'
        patient:
          $ref: '#/components/schemas/Reference'
        recommendation:
          type: object
          description: The immunization recommendation.
          properties:
            date:
              type: string
              description: The date when the immunization recommendation was created.
            dateCriterion:
              type: object
              description: The date when the recommended immunization is considered due or overdue.
              properties:
                code:
                  $ref: '#/components/schemas/CodeableConcept'
                value:
                  type: string
                  description: The date when the immunization is considered due or overdue.
            forecastStatus:
              $ref: '#/components/schemas/CodeableConcept'
            vaccineCode:
              $ref: '#/components/schemas/CodeableConcept'
          required:
            - dateCriterion
            - vaccineCode
      required:
        - meta
        - extension
    Bundle_ImmunizationRecommendationR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ImmunizationRecommendationR4'
          type: array
    Bundle_Entry_ImmunizationRecommendationR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ImmunizationRecommendationR4'
    Bundle_ImmunizationRecommendationSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ImmunizationRecommendationSTU3'
          type: array
    Bundle_Entry_ImmunizationRecommendationSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ImmunizationRecommendationSTU3'
    ListR4:
      type: object
      description: An instance of the R4 List FHIR resource.
      properties:
        code:
          $ref: '#/components/schemas/CodeableConcept'
        emptyReason:
          $ref: '#/components/schemas/CodeableConcept'
        entry:
          type: object
          description: 'Each entry is a BackboneElement with the "item" property populated with a reference to the Condition resource and the "display" property populated with the problem name. '
          properties:
            item:
              $ref: '#/components/schemas/Reference'
        id:
          type: string
          description: The encoded list ID.
        mode:
          type: string
          description: The processing mode that applies to this list. Always "working".
        status:
          type: string
          description: 'Status of the problem list. Always "current" because each list represents only the patient’s current problems.  '
        subject:
          $ref: '#/components/schemas/Reference'
        title:
          type: string
          description: The title representing this entity. Always “Problem List”.
      required:
        - emptyReason
    ListSTU3:
      type: object
      description: An instance of the STU3 List resource
      properties:
        code:
          $ref: '#/components/schemas/CodeableConcept'
        date:
          type: string
          description: When the list was prepared.
        emptyReason:
          $ref: '#/components/schemas/CodeableConcept'
        entry:
          type: object
          description: Array of responses.
          properties:
            item:
              $ref: '#/components/schemas/Reference'
        mode:
          type: string
          description: |-
            The processing mode that applies to this list. Always "snapshot".

            Values can be found <a href="https://www.hl7.org/fhir/valueset-list-mode.html">here</a>.
        status:
          type: string
          description: |-
            Status of the patient list. Always "current".

            Values can be found <a href="https://www.hl7.org/fhir/valueset-list-status.html">here</a>.
        title:
          type: string
          description: The descriptive name for the list.
    Bundle_ListR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ListR4'
          type: array
    Bundle_Entry_ListR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ListR4'
    Bundle_ListSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ListSTU3'
          type: array
    Bundle_Entry_ListSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ListSTU3'
    LocationR4:
      type: object
      description: An instance of the R4 Location FHIR resource.
      properties:
        address:
          $ref: '#/components/schemas/Address'
        alias:
          type: string
          description: A list of alternative names that the location is known as or was known as in the past.
        description:
          type: string
          description: Additional details about the location that can be shown to further identify the location.
        endpoint:
          $ref: '#/components/schemas/Reference'
        extension:
          $ref: '#/components/schemas/Extension'
        id:
          type: string
          description: The Location FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        managingOrganization:
          $ref: '#/components/schemas/Reference'
        mode:
          type: string
          description: Epic supports only an instance value in this element. Instance is a specific, findable location.
        name:
          type: string
          description: The name of the location.
        partOf:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: The active status of a location (active, inactive, etc.).
        telecom:
          type: object
          description: The contact details of the location.
          properties: {}
        type:
          $ref: '#/components/schemas/CodeableConcept'
    LocationSTU3:
      type: object
      description: An instance of the STU3 Location resource.
      properties:
        address:
          $ref: '#/components/schemas/Address'
        alias:
          type: string
          description: A list of alternative names that the location is known as or was known as in the past.
        description:
          type: string
          description: Additional details about the location that can be shown to further identify the location.
        extension:
          $ref: '#/components/schemas/Extension'
        id:
          type: string
          description: The Location FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        mode:
          type: string
          description: Epic supports only an instance value in this element. Instance is a specific, findable location.
        name:
          type: string
          description: The name of the location.
        partOf:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: The active status of a location (active, inactive, etc.).
        telecom:
          type: object
          description: The contact details of the location.
          properties: {}
        type:
          $ref: '#/components/schemas/CodeableConcept'
      required:
        - address
        - alias
        - description
        - extension
        - mode
        - name
        - partOf
        - status
        - telecom
        - type
    Bundle_LocationR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_LocationR4'
          type: array
    Bundle_Entry_LocationR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/LocationR4'
    MedicationDSTU2:
      type: object
      description: An instance of the DSTU2 Medication FHIR resource.
      properties:
        code:
          $ref: '#/components/schemas/CodeableConcept'
        product:
          type: object
          description: <p>Information that only applies to products (not packages).</p>
          properties:
            form:
              $ref: '#/components/schemas/CodeableConcept'
          required:
            - form
      required:
        - code
        - product
    MedicationR4:
      type: object
      description: An instance of the R4 Medication FHIR resource.
      properties:
        code:
          $ref: '#/components/schemas/CodeableConcept'
        extension:
          $ref: '#/components/schemas/Extension'
        form:
          $ref: '#/components/schemas/CodeableConcept'
        id:
          type: string
          description: The Medication FHIR ID.
        ingredient:
          type: object
          description: An ingredient in the medication.
          properties:
            itemCodeableConcept:
              $ref: '#/components/schemas/CodeableConcept'
            itemReference:
              $ref: '#/components/schemas/Reference'
            strength:
              type: object
              description: <p>The quantity of an ingredient present if it is a single-ingredient medication.</p>
              properties: {}
          required:
            - itemCodeableConcept
            - itemReference
            - strength
      required:
        - code
        - extension
        - form
        - ingredient
    MedicationSTU3:
      type: object
      description: A Response Type
      properties:
        code:
          $ref: '#/components/schemas/CodeableConcept'
        extension:
          $ref: '#/components/schemas/Extension'
        form:
          $ref: '#/components/schemas/CodeableConcept'
        ingredient:
          type: object
          description: <p>An ingredient in the medication.</p>
          properties:
            amount:
              type: object
              description: <p>For medications that have a total volume or are IMS mixtures, this is the quantity of an ingredient present compared to the overall quantity of the mixture.</p>
              properties: {}
            itemCodeableConcept:
              $ref: '#/components/schemas/CodeableConcept'
            itemReference:
              $ref: '#/components/schemas/Reference'
          required:
            - amount
        isBrand:
          type: boolean
          description: <p>This element is true if this is a brand-name medication.</p>
        isOverTheCounter:
          type: boolean
          description: <p>This element is true if this medication doesn't require a prescription.</p>
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://nictiz.nl/fhir/StructureDefinition/zib-Product'
          required:
            - profile
      required:
        - code
        - extension
        - form
        - ingredient
        - isBrand
        - isOverTheCounter
        - meta
    Bundle_MedicationDSTU2:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_MedicationDSTU2'
          type: array
    Bundle_Entry_MedicationDSTU2:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/MedicationDSTU2'
    Bundle_MedicationR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_MedicationR4'
          type: array
    Bundle_Entry_MedicationR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/MedicationR4'
    MedicationDispenseR4:
      type: object
      description: 'A single instance of a MedicationDispense resource. '
      properties:
        extension:
          $ref: '#/components/schemas/Extension'
        authorizingPrescription:
          $ref: '#/components/schemas/Reference'
        category:
          $ref: '#/components/schemas/CodeableConcept'
        context:
          $ref: '#/components/schemas/Reference'
        dosageInstruction:
          type: object
          description: Dosage instruction details.
          properties:
            additionalInstruction:
              $ref: '#/components/schemas/CodeableConcept'
            asNeededBoolean:
              type: boolean
              description: Whether the frequency is PRN.
            doseAndRate:
              type: object
              description: Information about the ranges and quantities of doses and rates.
              properties:
                doseQuantity:
                  type: object
                  description: Amount of medication per dose. The amount of therapeutic or other substance given at one administration event.
                  properties: {}
                doseRange:
                  type: object
                  description: Parses the upper and lower bounds of the dose from above.
                  properties: {}
                rateQuantity:
                  type: object
                  description: The discrete value of a medication’s rate of infusion.
                  properties: {}
                rateRange:
                  type: object
                  description: The high and low values of a medication’s rate of infusion.
                  properties: {}
            route:
              $ref: '#/components/schemas/CodeableConcept'
            text:
              type: string
              description: The medication instructions.
            timing:
              type: object
              description: Element to describe timing.
              properties:
                repeat:
                  type: object
                  description: Element indicating an event that occurs multiple times.
                  properties:
                    boundsPeriod:
                      $ref: '#/components/schemas/Period'
                    duration:
                      type: object
                      description: The medication duration. If duration is expressed as a range, this element is populated with the minimum duration.
                      properties: {}
                    durationMax:
                      type: object
                      description: If duration is expressed as a range, this element is populated with the maximum duration.
                      properties: {}
                    frequency:
                      type: object
                      description: The frequency.
                      properties: {}
                    period:
                      type: object
                      description: The period.
                      properties: {}
                  required:
                    - duration
                    - durationMax
                    - frequency
                    - period
          required:
            - asNeededBoolean
        id:
          type: string
          description: The MedicationDispense FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        medicationReference:
          $ref: '#/components/schemas/Reference'
        performer:
          type: object
          description: The organization where the medication was verified.
          properties:
            actor:
              $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: |
            <p>The status of the medication dispense. Can be either:</p>
            <ul>
            <li>Completed</li>
            <li>Entered-in-error</li>
            </ul>
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - extension
    MedicationDispenseSTU3:
      type: object
      description: 'A single instance of the MedicationDispense resource. '
      properties:
        extension:
          $ref: '#/components/schemas/Extension'
        authorizingPrescription:
          $ref: '#/components/schemas/Reference'
        category:
          $ref: '#/components/schemas/CodeableConcept'
        context:
          $ref: '#/components/schemas/Reference'
        dosageInstruction:
          type: object
          description: A Response Type
          properties:
            additionalInstruction:
              $ref: '#/components/schemas/CodeableConcept'
            asNeededBoolean:
              type: boolean
              description: Whether the frequency is PRN.
            doseQuantity:
              type: object
              description: Amount of medication per dose. The amount of therapeutic or other substance given at one administration event.
              properties: {}
            doseRange:
              type: object
              description: Parses the lower and upper end of a dose.
              properties: {}
            rateQuantity:
              type: object
              description: The high and low values or discrete value of a medication’s rate of infusion.
              properties: {}
            rateRange:
              type: object
              description: The high and low values of a medication’s rate of infusion.
              properties: {}
            route:
              $ref: '#/components/schemas/CodeableConcept'
            text:
              type: string
              description: |+
                The medication instructions.

            timing:
              type: object
              description: Element to describe timing.
              properties:
                repeat:
                  type: object
                  description: Element indicating an event that occurs multiple times.
                  properties:
                    boundsPeriod:
                      $ref: '#/components/schemas/Period'
                    duration:
                      type: object
                      description: The medication duration. If duration is expressed as a range, this element is populated with the minimum duration.
                      properties: {}
                    durationMax:
                      type: object
                      description: If duration is expressed as a range, this element is populated with the maximum duration.
                      properties: {}
                    frequency:
                      type: object
                      description: The frequency.
                      properties: {}
                    period:
                      type: object
                      description: The period.
                      properties: {}
                    when:
                      type: string
                      description: The administration timing.
                  required:
                    - boundsPeriod
                    - duration
                    - durationMax
                    - frequency
                    - period
                    - when
          required:
            - additionalInstruction
            - asNeededBoolean
            - doseQuantity
            - doseRange
            - rateQuantity
            - rateRange
            - route
            - text
            - timing
        identifier:
          $ref: '#/components/schemas/Identifier'
        medicationReference:
          $ref: '#/components/schemas/Reference'
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://nictiz.nl/fhir/StructureDefinition/zib-AdministrationAgreement'
          required:
            - profile
        performer:
          type: object
          description: The organization where the medication was verified.
          properties:
            actor:
              $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: |-
            <p>The status of the medication dispense. Can be either:</p>
            <ul>
            <li>Completed</li>
            <li>Entered-in-error</li>
            </ul>
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - extension
        - authorizingPrescription
        - context
        - identifier
        - meta
        - performer
        - status
    Bundle_MedicationDispenseR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_MedicationDispenseR4'
          type: array
    Bundle_Entry_MedicationDispenseR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/MedicationDispenseR4'
    Bundle_MedicationDispenseSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_MedicationDispenseSTU3'
          type: array
    Bundle_Entry_MedicationDispenseSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/MedicationDispenseSTU3'
    MedicationOrderDSTU2:
      type: object
      description: An instance of the DSTU2 MedicationOrder resource.
      properties:
        dateWritten:
          type: string
          description: The date (and perhaps time) when the prescription was written.
        dispenseRequest:
          type: object
          description: Indicates details about the requested medication.
          properties:
            expectedSupplyDuration:
              type: object
              description: Identifies the period time over which the supplied product is expected to be used, or the length of time the dispense is expected to last. In some situations, this attribute may be used instead of quantity to identify the amount supplied by how long it is expected to last, rather than the physical quantity issued, e.g. 90 days supply of medication (based on an ordered dosage) When possible, it is always better to specify quantity, as this tends to be more precise. expectedSupplyDuration will always be an estimate that can be influenced by external factors.
              properties: {}
            numberOfRepeatsAllowed:
              type: object
              description: 'An integer indicating the number of repeats of the Dispense. UsageNotes: For example, the number of times the prescribed quantity is to be supplied including the initial standard fill.'
              properties: {}
            quantity:
              type: object
              description: The amount that is to be dispensed for one fill.
              properties: {}
            validityPeriod:
              $ref: '#/components/schemas/Period'
          required:
            - numberOfRepeatsAllowed
        dosageInstruction:
          type: object
          description: Indicates how the medication is to be used by the patient.
          properties:
            asNeededBoolean:
              type: boolean
              description: If set to true, indicates that the medication is only taken when needed within the specified schedule rather than at every scheduled dose.
            doseQuantity:
              type: object
              description: The amount of therapeutic or other substance given at one administration event.
              properties:
                code:
                  type: string
                  description: A computer processable form of the units in some unit representation system.
                comparator:
                  type: string
                  description: How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues. E.g. if the comparator is "<" , then the real value is < stated value.
                system:
                  type: string
                  description: The identification of the system that provides the coded form of the unit.
                unit:
                  type: string
                  description: A human-readable form of the units.
                value:
                  type: object
                  description: The value of the measured amount. The value includes an implicit precision in the presentation of the value.
                  properties: {}
              required:
                - value
            doseRange:
              type: object
              description: The amount of therapeutic or other substance given at one administration event, specified as a range.
              properties:
                high:
                  type: object
                  description: The high limit. The boundary is inclusive.
                  properties: {}
                low:
                  type: object
                  description: The low limit. The boundary is inclusive.
                  properties: {}
            method:
              $ref: '#/components/schemas/CodeableConcept'
            route:
              $ref: '#/components/schemas/CodeableConcept'
            text:
              type: string
              description: Free text dosage instructions can be used for cases where the instructions are too complex to code. When coded instructions are present, the free text instructions may still be present for display to humans taking or administering the medication.
            timing:
              type: object
              description: The timing schedule for giving the medication to the patient. The Schedule data type allows many different expressions, for example. "Every 8 hours"; "Three times a day"; "1/2 an hour before breakfast for 10 days from 23-Dec 2011:"; "15 Oct 2013, 17 Oct 2013 and 1 Nov 2013".
              properties:
                repeat:
                  type: object
                  description: A set of rules that describe when the event should occur.
                  properties:
                    frequency:
                      type: object
                      description: The number of times to repeat the action within the specified period / period range (i.e. both period and periodMax provided).
                      properties: {}
                    period:
                      type: object
                      description: Indicates the duration of time over which repetitions are to occur. E.g. to express "3 times per day", 3 would be the frequency and "1 day" would be the period.
                      properties: {}
                    periodUnits:
                      type: string
                      description: The units of time for the period in UCUM units.
                  required:
                    - frequency
                    - period
          required:
            - asNeededBoolean
        identifier:
          $ref: '#/components/schemas/Identifier'
        medicationReference:
          $ref: '#/components/schemas/Reference'
        note:
          type: string
          description: Extra information about the prescription that could not be conveyed by the other attributes.
        patient:
          $ref: '#/components/schemas/Reference'
        prescriber:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: A code specifying the state of the prescribing event. Describes the lifecycle of the prescription. For admitted patients all outpatient medications will return a status of 'on-hold'. During discharge these outpatient medications may revert back to 'active' or be discontinued based on clinical outcomes of the inpatient stay.
        substitution:
          type: object
          description: Indicates whether or not substitution can or should be part of the dispense. In some cases substitution must happen, in other cases substitution must not happen, and in others it does not matter. This block explains the prescriber's intent. If nothing is specified substitution may be done.
          properties:
            type:
              $ref: '#/components/schemas/CodeableConcept'
      required:
        - dateWritten
    Bundle_MedicationOrderDSTU2:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_MedicationOrderDSTU2'
          type: array
    Bundle_Entry_MedicationOrderDSTU2:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/MedicationOrderDSTU2'
    MedicationRequestR4:
      type: object
      description: An instance of the R4 MedicationRequest FHIR resource.
      properties:
        authoredOn:
          type: string
          description: The date the prescription was written.
        basedOn:
          $ref: '#/components/schemas/Reference'
        category:
          $ref: '#/components/schemas/CodeableConcept'
        dispenseRequest:
          type: object
          description: Medication supply authorization.
          properties:
            expectedSupplyDuration:
              type: object
              description: The duration.
              properties: {}
            numberOfRepeatsAllowed:
              type: object
              description: The number of discrete refills for the medication.
              properties: {}
            quantity:
              type: object
              description: The quantity.
              properties: {}
            validityPeriod:
              $ref: '#/components/schemas/Period'
          required:
            - expectedSupplyDuration
            - numberOfRepeatsAllowed
            - quantity
            - validityPeriod
        dosageInstruction:
          type: object
          description: Dosage instruction details.
          properties:
            asNeededBoolean:
              type: boolean
              description: Whether the frequency is PRN.
            doseAndRate:
              type: object
              description: A Response Type
              properties:
                doseQuantity:
                  type: object
                  description: Amount of medication per dose. The amount of therapeutic or other substance given at one administration event.
                  properties: {}
                doseRange:
                  type: object
                  description: A Response Type
                  properties: {}
                rateQuantity:
                  type: object
                  description: Amount of medication per unit of time.
                  properties: {}
                rateRange:
                  type: object
                  description: A Response Type
                  properties: {}
                rateRatio:
                  type: object
                  description: A Response Type
                  properties: {}
                type:
                  $ref: '#/components/schemas/CodeableConcept'
              required:
                - doseQuantity
                - rateQuantity
                - type
            method:
              $ref: '#/components/schemas/CodeableConcept'
            patientInstruction:
              type: string
              description: |-
                <p>The patient instructions for the prescription.</p>
                <p>For a multi-line sig, this is the same.</p>
            route:
              $ref: '#/components/schemas/CodeableConcept'
            sequence:
              type: object
              description: This element is populated only for multi-line sigs.
              properties: {}
            text:
              type: string
              description: |-
                <p>The patient instructions for the prescription.</p>
                <p>For a multi-line sig, this is the same.</p>
            timing:
              type: object
              description: Timing information.
              properties:
                repeat:
                  type: object
                  description: Repeat occurrence information.
                  properties:
                    boundsPeriod:
                      $ref: '#/components/schemas/Period'
                    count:
                      type: object
                      description: If the medication is not PRN, and CountType is Doses, this element is populated with the count value.
                      properties: {}
                    countMax:
                      type: object
                      description: If the medication is PRN, this element is set to Count.
                      properties: {}
                    dayOfWeek:
                      type: string
                      description: The day of the week.
                    duration:
                      type: object
                      description: The medication duration. If duration is expressed as a range, this element is populated with the minimum duration.
                      properties: {}
                    durationMax:
                      type: object
                      description: If duration is expressed as a range, this element is populated with the maximum duration.
                      properties: {}
                    durationUnit:
                      type: string
                      description: The duration unit.
                    frequency:
                      type: object
                      description: The frequency.
                      properties: {}
                    period:
                      type: object
                      description: The period.
                      properties: {}
                    periodUnit:
                      type: string
                      description: The period unit.
                    timeOfDay:
                      type: string
                      description: The time of day.
                    when:
                      type: string
                      description: The administration timing.
                  required:
                    - boundsPeriod
                    - count
                    - countMax
                    - dayOfWeek
                    - duration
                    - durationMax
                    - frequency
                    - period
                    - periodUnit
                    - timeOfDay
                    - when
              required:
                - repeat
          required:
            - asNeededBoolean
            - doseAndRate
            - method
            - patientInstruction
            - route
            - sequence
            - text
            - timing
        encounter:
          $ref: '#/components/schemas/Reference'
        groupIdentifier:
          $ref: '#/components/schemas/Identifier'
        id:
          type: string
          description: A medicationRequest FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        intent:
          type: string
          description: Returns “plan” for patient-reported and historical medications. Returns “order” for other medications.
        medicationReference:
          $ref: '#/components/schemas/Reference'
        note:
          $ref: '#/components/schemas/Annotation'
        priorPrescription:
          $ref: '#/components/schemas/Reference'
        recorder:
          $ref: '#/components/schemas/Reference'
        reportedBoolean:
          type: boolean
          description: A Response Type
        requester:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: The status of the medication request.
        subject:
          $ref: '#/components/schemas/Reference'
        substitution:
          type: object
          description: A Response Type
          properties:
            allowedBoolean:
              type: boolean
              description: Whether substitution is allowed or not.
        supportingInformation:
          $ref: '#/components/schemas/Reference'
      required:
        - authoredOn
        - basedOn
        - category
        - dispenseRequest
        - dosageInstruction
        - encounter
        - groupIdentifier
        - identifier
        - note
        - priorPrescription
        - recorder
        - reportedBoolean
        - status
        - substitution
        - supportingInformation
    MedicationRequestSTU3:
      type: object
      description: A Response Type
      properties:
        authoredOn:
          type: string
          description: The date the prescription was written.
        category:
          $ref: '#/components/schemas/CodeableConcept'
        contained:
          type: object
          description: Contains resources referenced from the supportingInformation element. Currently, body weight and height Observations are supported (LOINC 8302-2 for height and LOINC 29463-7 for weight).
          properties: {}
        dispenseRequest:
          type: object
          description: Medication supply authorization.
          properties: {}
        dosageInstruction:
          type: object
          description: A Response Type
          properties:
            additionalInstruction:
              $ref: '#/components/schemas/CodeableConcept'
            asNeededBoolean:
              type: boolean
              description: Whether the frequency is PRN.
            doseQuantity:
              type: object
              description: Amount of medication per dose. The amount of therapeutic or other substance given at one administration event.
              properties: {}
            extension:
              $ref: '#/components/schemas/Extension'
            method:
              $ref: '#/components/schemas/CodeableConcept'
            patientInstruction:
              type: string
              description: |-
                <p>The patient instructions for the prescription.</p>
                <p>For a multi-line sig, this is the same.</p>
            rateQuantity:
              type: object
              description: |-
                <p>Amount of medication per unit of time. Used when the rate is a discrete value.</p>
                <p>Available starting in February 2022 and in November 2021 by special update.</p>
              properties: {}
            rateRange:
              type: object
              description: |-
                <p>Amount of medication per unit of time. Used when the rate is a range.</p>
                <p>Available starting in February 2022 and in November 2021 by special update.</p>
              properties: {}
            route:
              $ref: '#/components/schemas/CodeableConcept'
            sequence:
              type: object
              description: This element is populated only for multi-line sigs.
              properties: {}
            text:
              type: string
              description: |-
                <p>The patient instructions for the prescription.</p>
                <p>For a multi-line sig, this is the same.</p>
            timing:
              type: object
              description: Element to describe timing.
              properties:
                repeat:
                  type: object
                  description: Element indicating an event that occurs multiple times.
                  properties:
                    boundsPeriod:
                      $ref: '#/components/schemas/Period'
                    count:
                      type: object
                      description: If the medication is not PRN, and CountType is Doses, this element is populated with the count value.
                      properties: {}
                    countMax:
                      type: object
                      description: If the medication is PRN, this element is set to Count.
                      properties: {}
                    dayOfWeek:
                      type: string
                      description: The day of the week.
                    duration:
                      type: object
                      description: The medicatioThe medication duration. If duration is expressed as a range, this element is populated with the minimum duration.n duration.
                      properties: {}
                    durationMax:
                      type: object
                      description: If duration is expressed as a range, this element is populated with the maximum duration.
                      properties: {}
                    durationUnit:
                      type: string
                      description: The duration unit.
                    frequency:
                      type: object
                      description: The frequency.
                      properties: {}
                    period:
                      type: object
                      description: The period.
                      properties: {}
                    periodUnit:
                      type: string
                      description: The period unit.
                    timeOfDay:
                      type: string
                      description: The time of day.
                    when:
                      type: string
                      description: The administration timing.
                  required:
                    - count
                    - countMax
                    - duration
                    - durationMax
                    - frequency
                    - period
          required:
            - asNeededBoolean
            - sequence
        groupIdentifier:
          $ref: '#/components/schemas/Identifier'
        identifier:
          $ref: '#/components/schemas/Identifier'
        intent:
          type: string
          description: Hardcoded to "order".
        medicationCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        medicationReference:
          $ref: '#/components/schemas/Reference'
        note:
          $ref: '#/components/schemas/Annotation'
        extension:
          $ref: '#/components/schemas/Extension'
        priorPrescription:
          $ref: '#/components/schemas/Reference'
        recorder:
          $ref: '#/components/schemas/Reference'
        requester:
          type: object
          description: A Response Type
          properties:
            agent:
              $ref: '#/components/schemas/Reference'
            onBehalfOf:
              $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: The status of the medication request.
        modifierExtension:
          $ref: '#/components/schemas/Extension'
        subject:
          $ref: '#/components/schemas/Reference'
        substitution:
          type: object
          description: A Response Type
          properties:
            allowed:
              type: boolean
              description: |-
                <p>If the Dispense as Written item is set to 1, we return this as No.</p>
                <p>If Dispense as Written does not equal 1, we don't return a substitution element.</p>
          required:
            - allowed
        supportingInformation:
          $ref: '#/components/schemas/Reference'
    Bundle_MedicationRequestR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_MedicationRequestR4'
          type: array
    Bundle_Entry_MedicationRequestR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/MedicationRequestR4'
    Bundle_MedicationRequestSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_MedicationRequestSTU3'
          type: array
    Bundle_Entry_MedicationRequestSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/MedicationRequestSTU3'
    MedicationStatementDSTU2:
      type: object
      description: An instance of the DSTU2 MedicationStatement resource.
      properties:
        dosage:
          type: object
          description: The value and unit of the dosage.
          properties:
            asNeededBoolean:
              type: boolean
              description: True if taken as needed (PRN). False otherwise.
            method:
              $ref: '#/components/schemas/CodeableConcept'
            quantityQuantity:
              type: object
              description: The medication administer amount.
              properties: {}
            route:
              $ref: '#/components/schemas/CodeableConcept'
            timing:
              type: object
              description: The frequency.
              properties: {}
          required:
            - asNeededBoolean
        effectiveDateTime:
          type: string
          description: The effective date and time when the patient started taking the medication.
        effectivePeriod:
          $ref: '#/components/schemas/Period'
        identifier:
          $ref: '#/components/schemas/Identifier'
        informationSource:
          $ref: '#/components/schemas/Reference'
        medicationCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        medicationReference:
          $ref: '#/components/schemas/Reference'
        patient:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: The order status of the medication.
      required:
        - effectiveDateTime
    MedicationStatementSTU3:
      type: object
      description: An instance of the STU3 MedicationStatement resource.
      properties:
        extension:
          $ref: '#/components/schemas/Extension'
        basedOn:
          $ref: '#/components/schemas/Reference'
        category:
          $ref: '#/components/schemas/CodeableConcept'
        dateAsserted:
          type: string
          description: The date the prescription was written.
        dosage:
          type: object
          description: The value and unit of the dosage.
          properties:
            additionalInstruction:
              $ref: '#/components/schemas/CodeableConcept'
            asNeededBoolean:
              type: boolean
              description: True if taken as needed (PRN). False otherwise.
            doseQuantity:
              type: object
              description: Amount of medication per dose. The amount of therapeutic or other substance given at one administration event.
              properties: {}
            method:
              $ref: '#/components/schemas/CodeableConcept'
            patientInstruction:
              type: string
              description: |-
                <p>The patient instructions for the prescription.</p>
                <p>Starting in February 2022 and in November 2021 by special update, the patient-reported sig is returned as well.</p>
            rateQuantity:
              type: object
              description: |-
                <p>Amount of medication per unit of time. Used when the rate is a discrete value.</p>
                <p>Available starting in February 2022 and in November 2021 by special update.</p>
              properties: {}
            rateRange:
              type: object
              description: |-
                <p>Amount of medication per unit of time. Used when the rate is a range.</p>
                <p>Available starting in February 2022 and in November 2021 by special update.</p>
              properties: {}
            route:
              $ref: '#/components/schemas/CodeableConcept'
            text:
              type: string
              description: The patient instructions for the prescription.
            timing:
              type: object
              description: |-
                <p>The frequency.</p>
                <p>Starting in February 2022 and in November 2021 by special update, patient-reported frequency information is returned.</p>
              properties:
                repeat:
                  type: object
                  description: Element indicating an event that occurs multiple times.
                  properties:
                    boundsPeriod:
                      $ref: '#/components/schemas/Period'
                    count:
                      type: object
                      description: If the medication is not PRN, and CountType is Doses, this element is populated with the count value.
                      properties: {}
                    countMax:
                      type: object
                      description: If the medication is PRN, this element is set to Count.
                      properties: {}
                    dayOfWeek:
                      type: string
                      description: The day of the week.
                    duration:
                      type: object
                      description: The medication duration. If duration is expressed as a range, this element is populated with the minimum duration.
                      properties: {}
                    durationMax:
                      type: object
                      description: If duration is expressed as a range, this element is populated with the maximum duration.
                      properties: {}
                    frequency:
                      type: object
                      description: The frequency.
                      properties: {}
                    period:
                      type: object
                      description: The period for taking the medication.
                      properties: {}
                    periodUnit:
                      type: string
                      description: The period unit.
                    timeOfDay:
                      type: string
                      description: The time of day.
                    when:
                      type: string
                      description: The administration timing.
                  required:
                    - count
                    - countMax
                    - duration
                    - durationMax
                    - frequency
                    - period
          required:
            - additionalInstruction
            - asNeededBoolean
            - rateQuantity
            - rateRange
        effectivePeriod:
          $ref: '#/components/schemas/Period'
        identifier:
          $ref: '#/components/schemas/Identifier'
        informationSource:
          $ref: '#/components/schemas/Reference'
        medicationCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        medicationReference:
          $ref: '#/components/schemas/Reference'
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://nictiz.nl/fhir/StructureDefinition/zib-MedicationUse'
          required:
            - profile
        note:
          $ref: '#/components/schemas/Annotation'
        status:
          type: string
          description: The order status of the medication.
        subject:
          $ref: '#/components/schemas/Reference'
        taken:
          type: string
          description: This element is set to "unk" for unknown.
      required:
        - extension
        - meta
    Bundle_MedicationStatementDSTU2:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_MedicationStatementDSTU2'
          type: array
    Bundle_Entry_MedicationStatementDSTU2:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/MedicationStatementDSTU2'
    Bundle_MedicationStatementSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_MedicationStatementSTU3'
          type: array
    Bundle_Entry_MedicationStatementSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/MedicationStatementSTU3'
    NutritionOrderR4:
      type: object
      description: An instance of the R4 NutritionOrder resource.
      properties:
        dateTime:
          type: string
          description: The date and time of the order.
        id:
          type: string
          description: Identifier.
        intent:
          type: string
          description: |-
            <p>The current intention for an order. Supported values include:</p>
            <ul><li>order
            <li>plan
            <li>proposal
            </ul>
        note:
          $ref: '#/components/schemas/Annotation'
        oralDiet:
          type: object
          description: The details of a diet order.
          properties:
            instruction:
              type: string
              description: The name of a diet.
            texture:
              type: object
              description: Texture information
              properties:
                modifier:
                  $ref: '#/components/schemas/CodeableConcept'
              required:
                - modifier
            type:
              $ref: '#/components/schemas/CodeableConcept'
          required:
            - instruction
            - texture
            - type
        patient:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: |-
            <p>The status of a nutrition order. Supported value include:</p>
            <ul><li>draft
            <li>active
            <li>completed
            <li>revoked
            <li>unknown
            <li>entered-in-error
      required:
        - oralDiet
    NutritionOrderSTU3:
      type: object
      description: An instance of the STU3 NutritionOrder resource.
      properties:
        extension:
          $ref: '#/components/schemas/Extension'
        dateTime:
          type: string
          description: The date and time of an order.
        id:
          type: string
          description: Identifier.
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://nictiz.nl/fhir/StructureDefinition/zib-NutritionAdvice'
          required:
            - profile
        oralDiet:
          type: object
          description: The details of a diet order.
          properties:
            instruction:
              type: string
              description: The name of a diet.
            texture:
              type: object
              description: Texture information.
              properties:
                modifier:
                  $ref: '#/components/schemas/CodeableConcept'
              required:
                - modifier
            type:
              $ref: '#/components/schemas/CodeableConcept'
          required:
            - instruction
            - texture
            - type
        patient:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: |-
            <p>The status of a nutrition order. Possible statuses include:</p>
            <ul><li>draft
            <li>active
            <li>completed
            <li>revoked
            <li>unknown
            <li>entered-in-error
      required:
        - extension
        - meta
        - oralDiet
        - status
    Bundle_NutritionOrderR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_NutritionOrderR4'
          type: array
    Bundle_Entry_NutritionOrderR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/NutritionOrderR4'
    Bundle_NutritionOrderSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_NutritionOrderSTU3'
          type: array
    Bundle_Entry_NutritionOrderSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/NutritionOrderSTU3'
    Bundle_ObservationSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ObservationSTU3'
          type: array
    Bundle_Entry_ObservationSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ObservationSTU3'
    ObservationR4:
      type: object
      description: An instance of the R4 Observation resource.
      properties:
        bodySite:
          $ref: '#/components/schemas/CodeableConcept'
        category:
          $ref: '#/components/schemas/CodeableConcept'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        component:
          type: object
          description: Component information.
          properties:
            code:
              $ref: '#/components/schemas/CodeableConcept'
          required:
            - code
        dataAbsentReason:
          $ref: '#/components/schemas/CodeableConcept'
        effectiveDateTime:
          type: string
          description: |-
            <p>The date and time the observation was taken.
            <p>When multiple measurements are involved, such as for growth chart percentiles (supported starting in Epic version August 2021), the date and time of the most recent is returned.
        encounter:
          $ref: '#/components/schemas/Reference'
        interpretation:
          $ref: '#/components/schemas/CodeableConcept'
        issued:
          type: string
          description: The date and time the observation was documented. This is always the current time.
        method:
          $ref: '#/components/schemas/CodeableConcept'
        note:
          $ref: '#/components/schemas/Annotation'
        performer:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: The status of the observation. This is set to amended or final depending on whether the field has been corrected.
        subject:
          $ref: '#/components/schemas/Reference'
        extension:
          $ref: '#/components/schemas/Extension'
        valueCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        valueDateTime:
          type: string
          description: This element is populated if the data type is date. Only one of the value* elements is required.
        valueQuantity:
          type: object
          description: This element is populated if a value has units or the data type is numeric or a percentile. Only one of the value* elements is required.
          properties: {}
        valueString:
          type: string
          description: This element is populated if a value doesn't have units or the data type is string. Only one of the value[x] elements is required.
        valueTime:
          type: string
          description: This element is populated if the data type is time. Only one of the value* elements is required.
      required:
        - dataAbsentReason
        - interpretation
        - method
        - note
        - extension
    ObservationSTU3:
      type: object
      description: A single Observation FHIR resource.
      properties:
        bodySite:
          $ref: '#/components/schemas/CodeableConcept'
        category:
          $ref: '#/components/schemas/CodeableConcept'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        comment:
          type: string
          description: Comments about the observation value.
        component:
          type: object
          description: A Response Type
          properties:
            code:
              $ref: '#/components/schemas/CodeableConcept'
          required:
            - code
        dataAbsentReason:
          $ref: '#/components/schemas/CodeableConcept'
        effectiveDateTime:
          type: string
          description: The date and time the observation was taken.
        issued:
          type: string
          description: The date and time the observation was documented. This is always the current time.
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: "Available in Netherlands environments only. This element shows that this API conforms to the profile connected to one of the following canonical urls:\n•\thttp://nictiz.nl/fhir/StructureDefinition/zib-BloodPressure\n•\thttp://nictiz.nl/fhir/StructureDefinition/zib-BodyWeight\n•\thttp://nictiz.nl/fhir/StructureDefinition/zib-BodyHeight"
          required:
            - profile
        method:
          $ref: '#/components/schemas/CodeableConcept'
        performer:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: The status of the observation. This is set to amended or final depending on whether the field has been corrected.
        subject:
          $ref: '#/components/schemas/Reference'
        valueCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        valueDateTime:
          type: string
          description: This element is populated if the data type is date. Only one of the value* elements is required.
        valueQuantity:
          type: object
          description: This element is populated if a value has units or the data type is numeric. Only one of the value* elements is required.
          properties: {}
        valueString:
          type: string
          description: This element is populated if a value doesn't have units or the data type is string. Only one of the value[x] elements is required.
        valueTime:
          type: string
          description: This element is populated if the data type is time. Only one of the value* elements is required.
      required:
        - comment
        - dataAbsentReason
        - meta
        - method
    ObservationDSTU2:
      type: object
      description: A single Observation FHIR resource.
      properties:
        bodySite:
          $ref: '#/components/schemas/CodeableConcept'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        comments:
          type: string
          description: Comments about the observation value.
        dataAbsentReason:
          $ref: '#/components/schemas/CodeableConcept'
        effectiveDateTime:
          type: string
          description: Date the observation applies to.
        encounter:
          $ref: '#/components/schemas/Reference'
        identifier:
          $ref: '#/components/schemas/Identifier'
        interpretation:
          $ref: '#/components/schemas/CodeableConcept'
        issued:
          type: string
          description: Date/Time this result was documented or made available.
        performer:
          $ref: '#/components/schemas/Reference'
        referenceRange:
          type: object
          description: A Response Type
          properties:
            age:
              type: object
              description: Age range.
              properties: {}
            high:
              type: object
              description: High range.
              properties: {}
            low:
              type: object
              description: Low range.
              properties: {}
            meaning:
              $ref: '#/components/schemas/CodeableConcept'
            text:
              type: string
              description: Text based reference range.
        related:
          type: object
          description: A Response Type
          properties:
            target:
              $ref: '#/components/schemas/Reference'
            type:
              type: string
              description: How is this related to the observation.
        status:
          type: string
          description: Status of the observation - hard coded to either Amended or Final depending on if the field has been corrected or not. Deleted observations will not be returned.
        subject:
          $ref: '#/components/schemas/Reference'
        valueQuantity:
          type: object
          description: Only one value[x] element will be returned - when a value has units we will use valueQuantity.
          properties: {}
        valueString:
          type: string
          description: Only one value[x] element will be returned - when we do not have a unit we will use valueString.
      required:
        - identifier
        - issued
        - referenceRange
        - related
    Bundle_ObservationR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ObservationR4'
          type: array
    Bundle_Entry_ObservationR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ObservationR4'
    Bundle_ObservationDSTU2:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ObservationDSTU2'
          type: array
    Bundle_Entry_ObservationDSTU2:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ObservationDSTU2'
    OrganizationR4:
      type: object
      description: An instance of the R4 Organization FHIR resource.
      properties:
        active:
          type: boolean
          description: <p>Whether the organization's record is in active use.</p>
        address:
          $ref: '#/components/schemas/Address'
        alias:
          type: string
          description: <p>The synonyms for the organization.</p>
        extension:
          $ref: '#/components/schemas/Extension'
        id:
          type: string
          description: <p>The Organization FHIR ID.</p>
        identifier:
          $ref: '#/components/schemas/Identifier'
        name:
          type: string
          description: <p>The name used for the organization.</p>
        partOf:
          $ref: '#/components/schemas/Reference'
        telecom:
          type: object
          description: <p>The phone number, fax number, and emergency phone number.</p>
          properties: {}
        type:
          $ref: '#/components/schemas/CodeableConcept'
      required:
        - active
        - address
        - alias
        - extension
        - identifier
        - name
        - partOf
        - telecom
        - type
    OrganizationSTU3:
      type: object
      description: A Response Type
      properties:
        active:
          type: boolean
          description: <p>Whether the organization's record is in active use.</p>
        address:
          $ref: '#/components/schemas/Address'
        extension:
          $ref: '#/components/schemas/Extension'
        id:
          type: string
          description: <p>The Organization FHIR ID.</p>
        identifier:
          $ref: '#/components/schemas/Identifier'
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://fhir.nl/fhir/StructureDefinition/nl-core-organization'
          required:
            - profile
        name:
          type: string
          description: <p>The name used for the organization.</p>
        partOf:
          $ref: '#/components/schemas/Reference'
        telecom:
          type: object
          description: <p>The phone number, fax number, and emergency phone number.</p>
          properties: {}
        type:
          $ref: '#/components/schemas/CodeableConcept'
      required:
        - active
        - address
        - extension
        - identifier
        - meta
        - name
        - partOf
        - telecom
        - type
    Bundle_OrganizationR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_OrganizationR4'
          type: array
    Bundle_Entry_OrganizationR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/OrganizationR4'
    PatientR4:
      type: object
      description: A single instance of a Patient FHIR resource.
      properties:
        active:
          type: boolean
          description: Whether or not the patient record is active.
        address:
          $ref: '#/components/schemas/Address'
        extension:
          $ref: '#/components/schemas/Extension'
        birthDate:
          type: string
          description: The patient's date of birth in the format YYYY-MM-DD.
        communication:
          type: object
          description: A list of languages used to communicate with the patient, along with an indicator of which is preferred.
          properties:
            language:
              $ref: '#/components/schemas/CodeableConcept'
            preferred:
              type: boolean
              description: Whether the language is the patient's preferred language.
          required:
            - preferred
        contact:
          type: object
          description: Contact details.
          properties:
            address:
              $ref: '#/components/schemas/Address'
            name:
              type: object
              description: |-
                <p>The contact’s preferred name. The system determines this from the contact’s linked patient record if available.</p>
                <p>For organizations in the Netherlands, this element represents an <a href="https://simplifier.net/NictizSTU3-Zib2017/nl-core-humanname">nl-core-humanname</a> value.</p>
              properties:
                extension:
                  $ref: '#/components/schemas/Extension'
            period:
              $ref: '#/components/schemas/Period'
            relationship:
              $ref: '#/components/schemas/CodeableConcept'
            telecom:
              type: object
              description: A Response Type
              properties: {}
          required:
            - address
            - name
            - period
            - relationship
            - telecom
        deceasedBoolean:
          type: boolean
          description: 'Whether the patient is deceased. '
        deceasedDateTime:
          type: string
          description: The date and time of death.
        gender:
          type: string
          description: The patient's legal sex.
        generalPractitioner:
          $ref: '#/components/schemas/Reference'
        id:
          type: string
          description: The patient FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        managingOrganization:
          $ref: '#/components/schemas/Reference'
        maritalStatus:
          $ref: '#/components/schemas/CodeableConcept'
        multipleBirthInteger:
          type: object
          description: The patient's birth order.
          properties: {}
        name:
          type: object
          description: |-
            <p>The patient's name.</p>
            <ul>
            <li>Starting in the May 2020 version of Epic, this element includes both the patient's "official" name, which is the patient's legal name, and the patient's "usual" name, which is the patient's preferred name.
            <ul><li>If the patient does not have a preferred name defined in your system, the "usual" name also holds the patient's legal name.</li>
            <li>In a patient-facing context, this web service always shows the patient's preferred name, unless a user has security point 'Only Show Legal Name'.</li></ul></li>
            <li>In February 2020 and earlier, this element returns only the patient's legal name with a use code of "usual".</li>
            </ul>
          properties:
            family:
              type: string
              description: The patient's family (last) name.
            given:
              type: string
              description: The patient's given name. May include first and middle names.
            prefix:
              type: string
              description: The patient's name prefix.
            suffix:
              type: string
              description: The patient's name suffix. Acquired as a title due to academic, legal, employment or nobility status, etc.
            text:
              type: string
              description: The patient's full name as a string.
            use:
              type: string
              description: The purpose of the name. May be "legal" or "usual". See the name parameter for full details on use.
          required:
            - prefix
            - suffix
        telecom:
          type: object
          description: Telephone numbers and email addresses for the patient, along with their use (i.e. home, work, etc.)
          properties:
            system:
              type: string
              description: |-
                <p>The type of telecom. Potential values are:</p>
                <ul>
                <li>email</li>
                <li>phone</li>
                </ul>
            use:
              type: string
              description: |-
                <p>If the telecom entry is a phone number, possible values are:</p>
                <ul>
                <li>home</li>
                <li>mobile</li>
                <li>work</li>
                </ul>
            value:
              type: string
              description: Value of the telecom method. May be an email address or phone number.
          required:
            - use
      required:
        - active
        - extension
        - birthDate
        - communication
        - contact
        - generalPractitioner
        - managingOrganization
        - maritalStatus
        - multipleBirthInteger
        - telecom
    PatientSTU3:
      type: object
      description: A single Patient resource.
      properties:
        active:
          type: boolean
          description: Whether or not the patient record is active.
        address:
          $ref: '#/components/schemas/Address'
        extension:
          $ref: '#/components/schemas/Extension'
        birthDate:
          type: string
          description: The patient's date of birth in the format YYYY-MM-DD.
        communication:
          type: object
          description: A list of languages used to communicate with the patient, along with an indicator of which is preferred.
          properties:
            language:
              $ref: '#/components/schemas/CodeableConcept'
            preferred:
              type: boolean
              description: Whether the language is the patient's preferred language.
          required:
            - preferred
        contact:
          type: object
          description: Contact details.
          properties:
            address:
              $ref: '#/components/schemas/Address'
            name:
              type: object
              description: |
                <p>The contact’s preferred name. The system determines this from the contact’s linked patient record if available.</p>
                <p>For organizations in the Netherlands, this element represents an <a href="https://simplifier.net/NictizSTU3-Zib2017/nl-core-humanname">nl-core-humanname</a> value.</p>
              properties:
                extension:
                  $ref: '#/components/schemas/Extension'
              required:
                - extension
            period:
              $ref: '#/components/schemas/Period'
            relationship:
              $ref: '#/components/schemas/CodeableConcept'
            telecom:
              type: object
              description: |
                <p>Telephone numbers and email address for the contact.</p>
                <p>For organizations in the Netherlands, this element represents an <a href="https://simplifier.net/NictizSTU3-Zib2017/nl-core-contactpoint">nl-core-contactpoint</a> value.</p>
              properties: {}
          required:
            - address
            - name
            - period
            - relationship
            - telecom
        deceasedBoolean:
          type: boolean
          description: 'Whether the patient is deceased. '
        deceasedDateTime:
          type: string
          description: The date and time of death.
        gender:
          type: string
          description: The patient's legal sex.
        generalPractitioner:
          $ref: '#/components/schemas/Reference'
        id:
          type: string
          description: The patient FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        managingOrganization:
          $ref: '#/components/schemas/Reference'
        maritalStatus:
          $ref: '#/components/schemas/CodeableConcept'
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://fhir.nl/fhir/StructureDefinition/nl-core-patient'
          required:
            - profile
        multipleBirthInteger:
          type: object
          description: The patient's birth order.
          properties: {}
        name:
          type: object
          description: |-
            <p>The patient's name.</p>
            <ul>
            <li>Starting in the May 2020 version of Epic, this element includes both the patient's "official" name, which is the patient's legal name, and the patient's "usual" name, which is the patient's preferred name.
            <ul><li>If the patient does not have a preferred name defined in your system, the "usual" name also holds the patient's legal name.</li>
            <li>In a patient-facing context, this web service always shows the patient's preferred name, unless a user has security point 'Only Show Legal Name'.</li></ul></li>
            <li>In February 2020 and earlier, this element returns only the patient's legal name with a use code of "usual".</li>
            </ul>
          properties:
            family:
              type: string
              description: The patient's family (last) name.
            given:
              type: string
              description: The patient's given name. May include first and middle names.
            prefix:
              type: string
              description: The patient's name prefix.
            suffix:
              type: string
              description: The patient's name suffix. Acquired as a title due to academic, legal, employment or nobility status, etc.
            text:
              type: string
              description: The patient's full name as a string.
            use:
              type: string
              description: The purpose of the name. May be "legal" or "usual". See the name parameter for full details on use.
          required:
            - prefix
            - suffix
        telecom:
          type: object
          description: Telephone numbers and email addresses for the patient, along with their use (i.e. home, work, etc.)
          properties:
            system:
              type: string
              description: |-
                <p>The type of telecom. Potential values are:</p>
                <ul>
                <li>email</li>
                <li>phone</li>
                </ul>
            use:
              type: string
              description: |-
                <p>If the telecom entry is a phone number, possible values are:</p>
                <ul>
                <li>home</li>
                <li>mobile</li>
                <li>work</li>
                </ul>
            value:
              type: string
              description: Value of the telecom method. May be an email address or phone number.
          required:
            - use
      required:
        - extension
        - birthDate
        - communication
        - contact
        - generalPractitioner
        - managingOrganization
        - maritalStatus
        - meta
        - multipleBirthInteger
        - telecom
    PatientDSTU2:
      type: object
      description: A single Patient FHIR resource.
      properties:
        active:
          type: boolean
          description: Whether the patient record is active.
        address:
          $ref: '#/components/schemas/Address'
        birthDate:
          type: string
          description: The patient's date of birth in the format YYYY-MM-DD.
        careProvider:
          $ref: '#/components/schemas/Reference'
        communication:
          type: object
          description: A list of languages used to communicate with the patient, along with an indicator of which is preferred.
          properties:
            language:
              $ref: '#/components/schemas/CodeableConcept'
            preferred:
              type: boolean
              description: Whether the language is the patient's preferred language.
          required:
            - preferred
        deceasedBoolean:
          type: boolean
          description: Whether the patient is deceased.
        deceasedDateTime:
          type: string
          description: The date and time at which the patient was deceased.
        gender:
          type: string
          description: The patient's legal sex.
        id:
          type: string
          description: The Patient's FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        maritalStatus:
          $ref: '#/components/schemas/CodeableConcept'
        name:
          type: object
          description: |-
            <p>The patient's name. </p>
            <ul>
            <li>Starting in the May 2020 version of Epic, this element includes both the patient's "official" name, which is the patient's legal name, and the patient's "usual" name, which is the patient's preferred name.
            <ul><li>
            If the patient does not have a preferred name defined in your system, the "usual" name also holds the patient's legal name.</li>
            <li>In a patient-facing context, this web service always shows the patient's preferred name, unless a user has the security point 'Only Show Legal Name'.</li></ul></li>
            <li>In February 2020 and earlier, this element returns only the patient's legal name with a use code of "usual".</li>
            </ul>
          properties:
            family:
              type: string
              description: 'The patient''s family (last) name. '
            given:
              type: string
              description: The patient's given name. May include first and middle names.
            prefix:
              type: string
              description: 'The patient''s name prefix. '
            suffix:
              type: string
              description: The patient's name suffix. Acquired as a title due to academic, legal, employment or nobility status, etc.
            text:
              type: string
              description: The patient's full name as a string.
            use:
              type: string
              description: The purpose of the name. May be "legal" or "usual". See the name parameter for full details on use.
          required:
            - prefix
            - suffix
        telecom:
          type: object
          description: 'Telephone numbers and email addresses for the patient, along with their use (i.e. home, work, etc.)  '
          properties:
            system:
              type: string
              description: |-
                <p>The type of telecom. Potential values are:</p>
                <ul>
                <li>email</li>
                <li>phone</li>
                </ul>
            use:
              type: string
              description: |-
                <p>If the telecom entry is a phone number, possible values are:</p>
                <ul>
                <li>home</li>
                <li>mobile</li>
                <li>work</li>
                </ul>
            value:
              type: string
              description: <p>Value of the telecom method. May be an email address or phone number.</p>
          required:
            - use
      required:
        - birthDate
        - careProvider
        - telecom
    Bundle_PatientDSTU2:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_PatientDSTU2'
          type: array
    Bundle_Entry_PatientDSTU2:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/PatientDSTU2'
    Bundle_PatientR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_PatientR4'
          type: array
    Bundle_Entry_PatientR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/PatientR4'
    Bundle_PatientSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_PatientSTU3'
          type: array
    Bundle_Entry_PatientSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/PatientSTU3'
    PractitionerDSTU2:
      type: object
      description: A single Practitioner FHIR resource.
      properties:
        communication:
          $ref: '#/components/schemas/CodeableConcept'
        gender:
          type: string
          description: The sex of the provider.
        identifier:
          $ref: '#/components/schemas/Identifier'
        name:
          type: object
          description: The name of the provider, including all prefixes and suffixes available.
          properties: {}
        practitionerRole:
          type: object
          description: The practitioner's role at the organization.
          properties:
            role:
              $ref: '#/components/schemas/CodeableConcept'
            specialty:
              $ref: '#/components/schemas/CodeableConcept'
          required:
            - role
            - specialty
      required:
        - communication
        - gender
        - identifier
        - name
        - practitionerRole
    PractitionerR4:
      type: object
      description: A Response Type
      properties:
        active:
          type: boolean
          description: Whether the practitioner's record is in active use.
        communication:
          $ref: '#/components/schemas/CodeableConcept'
        gender:
          type: string
          description: The gender of the practitioner.
        identifier:
          $ref: '#/components/schemas/Identifier'
        name:
          type: object
          description: The name of the practitioner, including all prefixes and suffixes available.
          properties: {}
        photo:
          type: object
          description: Contains parameters related to the practitioner photo.
          properties:
            url:
              type: string
              description: The URI or URL where the photo can be found. If this is a BLOB key, we will return a URL to a binary resource.
          required:
            - url
        qualification:
          type: object
          description: The practitioner's qualifications.
          properties: {}
        telecom:
          type: object
          description: Returned only for Epic user-based practitioners. Not returned in a MyChart context.
          properties:
            system:
              type: string
              description: Always set to "email"
            value:
              type: string
              description: The email for the Epic user-based practitioner. Obtained from the user record.
          required:
            - value
      required:
        - active
        - communication
        - gender
        - identifier
        - name
        - photo
        - qualification
        - telecom
    PractitionerSTU3:
      type: object
      description: An instance of the STU3 Practitioner resource.
      properties:
        active:
          type: boolean
          description: Whether the practitioner's record is in active use.
        communication:
          $ref: '#/components/schemas/CodeableConcept'
        gender:
          type: string
          description: The gender of the practitioner.
        identifier:
          $ref: '#/components/schemas/Identifier'
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://fhir.nl/fhir/StructureDefinition/nl-core-practitioner'
          required:
            - profile
        name:
          type: object
          description: The name of the practitioner, including all prefixes and suffixes available.
          properties: {}
        photo:
          type: object
          description: Contains parameters related to the practitioner photo.
          properties:
            url:
              type: string
              description: The URI or URL where the photo can be found. If this is a BLOB key, we will return a URL to a binary resource.
          required:
            - url
        qualification:
          type: object
          description: The practitioner's qualifications.
          properties: {}
        telecom:
          type: object
          description: Returned only for Epic user-based practitioners. Not returned in a MyChart context.
          properties:
            system:
              type: string
              description: Always set to "email"
            value:
              type: string
              description: The email for the Epic user-based practitioner. Obtained from the user record.
          required:
            - value
      required:
        - active
        - communication
        - gender
        - identifier
        - meta
        - name
        - photo
        - qualification
        - telecom
    Bundle_PractitionerDSTU2:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_PractitionerDSTU2'
          type: array
    Bundle_Entry_PractitionerDSTU2:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/PractitionerDSTU2'
    Bundle_PractitionerR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_PractitionerR4'
          type: array
    Bundle_Entry_PractitionerR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/PractitionerR4'
    Bundle_PractitionerSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_PractitionerSTU3'
          type: array
    Bundle_Entry_PractitionerSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/PractitionerSTU3'
    PractitionerRoleR4:
      type: object
      description: An instance of the R4 PractitionerRole resource.
      properties:
        active:
          type: boolean
          description: Whether the unique address is active.
        code:
          $ref: '#/components/schemas/CodeableConcept'
        location:
          $ref: '#/components/schemas/Reference'
        practitioner:
          $ref: '#/components/schemas/Reference'
        specialty:
          $ref: '#/components/schemas/CodeableConcept'
        telecom:
          type: object
          description: Contact information specific to the unique address.
          properties: {}
      required:
        - active
        - code
        - location
        - practitioner
        - specialty
        - telecom
    PractitionerRoleSTU3:
      type: object
      description: An instance of the STU3 PractitionerRole resource.
      properties:
        active:
          type: boolean
          description: Whether the unique address is active.
        code:
          $ref: '#/components/schemas/CodeableConcept'
        location:
          $ref: '#/components/schemas/Reference'
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://fhir.nl/fhir/StructureDefinition/nl-core-practitionerrole'
          required:
            - profile
        practitioner:
          $ref: '#/components/schemas/Reference'
        specialty:
          $ref: '#/components/schemas/CodeableConcept'
        telecom:
          type: object
          description: Contact information specific to the unique address.
          properties: {}
      required:
        - active
        - code
        - location
        - meta
        - practitioner
        - specialty
        - telecom
    Bundle_PractitionerRoleR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_PractitionerRoleR4'
          type: array
    Bundle_Entry_PractitionerRoleR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/PractitionerRoleR4'
    Bundle_PractitionerRoleSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_PractitionerRoleSTU3'
          type: array
    Bundle_Entry_PractitionerRoleSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/PractitionerRoleSTU3'
    ProcedureDSTU2:
      type: object
      description: A Response Type
      properties:
        code:
          $ref: '#/components/schemas/CodeableConcept'
        identifier:
          $ref: '#/components/schemas/Identifier'
        performedDateTime:
          type: string
          description: When the procedure was performed.
        performedPeriod:
          $ref: '#/components/schemas/Period'
        performer:
          type: object
          description: Who performed the Procedure.
          properties:
            actor:
              $ref: '#/components/schemas/Reference'
          required:
            - actor
        reasonCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        reasonReference:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: |-
            <p>The status of the Procedure. </p>
            <table class="table table-hover">
            <tr>
            <th>API Value</th>
            <th><a href="http://hl7.org/fhir/DSTU2/valueset-procedure-status.html">FHIR Event Status</a></th>
            </tr>
            <tr>
            <td>cancelled</td>
            <td>aborted</td>
            </tr>
            <tr>
            <td>completed</td>
            <td>completed</td>
            </tr>
            </table>
            <p>*Note: Omitted FHIR event status equivalent values are not returned by this search.</p>
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - performer
        - reasonReference
    ProcedureR4:
      type: object
      description: A Response Type
      properties:
        bodySite:
          $ref: '#/components/schemas/CodeableConcept'
        category:
          $ref: '#/components/schemas/CodeableConcept'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        note:
          $ref: '#/components/schemas/Annotation'
        performedDateTime:
          type: string
          description: When the procedure was performed.
        status:
          type: string
          description: |-
            <p>The status of the Procedure. </p>
            <table class="table table-hover">
            <tr>
            <th><a href="http://hl7.org/fhir/R4/valueset-event-status.html">FHIR Event Status</a></th>
            <th>Returned when...</th>
            </tr>
            <tr>
            <td>completed</td>
            <td>positive procedure</td>
            </tr>
            <tr>
            <td>not-done</td>
            <td>pertinent negative</td>
            </tr>
            </table>
            <p>*Note: Omitted FHIR event status equivalent values are not returned by this search</p>
        subject:
          $ref: '#/components/schemas/Reference'
        extension:
          $ref: '#/components/schemas/Extension'
      required:
        - bodySite
        - category
        - code
        - note
        - performedDateTime
        - extension
    ProcedureSTU3:
      type: object
      description: A Response Type
      properties:
        basedOn:
          $ref: '#/components/schemas/Reference'
        bodySite:
          $ref: '#/components/schemas/CodeableConcept'
        category:
          $ref: '#/components/schemas/CodeableConcept'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        context:
          $ref: '#/components/schemas/Reference'
        focalDevice:
          type: object
          description: |
            Reference to a device marked as implanted, explanted, or adjusted during the procedure.
            Only supported for resources with a category of Surgical Procedure.
          properties: {}
        identifier:
          $ref: '#/components/schemas/Identifier'
        location:
          $ref: '#/components/schemas/Reference'
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://nictiz.nl/fhir/StructureDefinition/zib-Procedure'
          required:
            - profile
        notDone:
          type: boolean
          description: If the procedure was not performed as scheduled. True if status is aborted, otherwise false.
        performedDateTime:
          type: string
          description: When the procedure was performed.
        performedPeriod:
          $ref: '#/components/schemas/Period'
        performer:
          type: object
          description: Who performed the Procedure.
          properties:
            actor:
              $ref: '#/components/schemas/Reference'
          required:
            - actor
        reasonCode:
          $ref: '#/components/schemas/CodeableConcept'
        reasonReference:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: |-
            <p>The status of the Procedure. </p>
            <table class="table table-hover">
            <tr>
            <th>API Value</th>
            <th><a href="http://hl7.org/fhir/DSTU2/valueset-procedure-status.html">FHIR Event Status</a></th>
            </tr>
            <tr>
            <td>active</td>
            <td>in-progress</td>
            </tr>
            <tr>
            <td>cancelled</td>
            <td>aborted</td>
            </tr>
            <tr>
            <td>completed</td>
            <td>completed</td>
            </tr>
            <tr>
            <td>aborted</td>
            <td>aborted</td>
            </tr>
            </table>
            <p>*Note: Omitted FHIR event status equivalent values are not returned by this search.</p>
        subject:
          $ref: '#/components/schemas/Reference'
        usedReference:
          $ref: '#/components/schemas/Reference'
      required:
        - basedOn
        - bodySite
        - category
        - context
        - focalDevice
        - location
        - meta
        - notDone
        - performer
        - reasonReference
    Bundle_ProcedureDSTU2:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ProcedureDSTU2'
          type: array
    Bundle_Entry_ProcedureDSTU2:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ProcedureDSTU2'
    Bundle_ProcedureR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ProcedureR4'
          type: array
    Bundle_Entry_ProcedureR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ProcedureR4'
    Bundle_ProcedureSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ProcedureSTU3'
          type: array
    Bundle_Entry_ProcedureSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ProcedureSTU3'
    ProcedureRequestSTU3:
      type: object
      description: A Response Type
      properties:
        _status:
          type: object
          description: In Netherlands environments, this extension maps an order’s status to OrderStatusCodelijst, if possible
          properties: {}
        asNeededBoolean:
          type: boolean
          description: If set to true, indicates that the order is only performed when needed within the specified schedule.
        authoredOn:
          type: string
          description: The order instant. This is the date and time when the status is not draft or unknown.
        basedOn:
          $ref: '#/components/schemas/Reference'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        context:
          $ref: '#/components/schemas/Reference'
        doNotPerform:
          type: boolean
          description: This is set to true if the status is draft, cancelled, or unknown.
        id:
          type: string
          description: FHIR ProcedureRequest ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        intent:
          type: string
          description: The intent code. The full list of potential values can be found <a href'"http://hl7.org/fhir/stu3/valueset-request-intent.html">here</a>.
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://nictiz.nl/fhir/StructureDefinition/zib-ProcedureRequest'
          required:
            - profile
        note:
          $ref: '#/components/schemas/Annotation'
        occurrenceTiming:
          type: object
          description: This event element is populated for auto-released orders.
          properties: {}
        priority:
          type: string
          description: The priority. The full list of potential values can be found <a href="http://hl7.org/fhir/stu3/valueset-request-priority.html">here</a>.
        reasonCode:
          $ref: '#/components/schemas/CodeableConcept'
        requester:
          type: object
          description: Reference to a practitioner resource who is the authorizing provider for the procedure request.
          properties:
            agent:
              $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: The status code. The full list of potential values can be found <a href="http://hl7.org/fhir/stu3/valueset-request-status.html">here</a>.
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - _status
        - asNeededBoolean
        - doNotPerform
        - meta
    Bundle_ProcedureRequestSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ProcedureRequestSTU3'
          type: array
    Bundle_Entry_ProcedureRequestSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ProcedureRequestSTU3'
    ProvenanceR4:
      type: object
      description: A Response Type
      properties:
        agent:
          type: object
          description: Actors involved, such as the author and transmitter.
          properties:
            onBehalfOf:
              $ref: '#/components/schemas/Reference'
            type:
              $ref: '#/components/schemas/CodeableConcept'
            who:
              $ref: '#/components/schemas/Reference'
          required:
            - onBehalfOf
            - type
        id:
          type: string
          description: Provenance FHIR ID.
        recorded:
          type: string
          description: Timestamp that the activity was recorded or updated.
        target:
          $ref: '#/components/schemas/Reference'
    QuestionnaireR4:
      type: object
      description: An instance of the R4 Questionnaire FHIR resource.
      properties:
        code:
          type: object
          description: <p>The ID and ID type items of the questionnaire</p>
          properties: {}
        copyright:
          type: string
          description: <p>The questionnaire post-text</p>
        date:
          type: string
          description: <p>The date for a given version of the questionnaire</p>
        identifier:
          $ref: '#/components/schemas/Identifier'
        name:
          type: string
          description: <p>The name of the questionnaire.</p>
        status:
          type: string
          description: <p>Always "active"</p>
        title:
          type: string
          description: <p>The patient-facing name of the questionnaire.</p>
        version:
          type: string
          description: <p>The version of the questionnaire.</p>
      required:
        - code
        - copyright
        - date
        - identifier
        - name
        - title
        - version
    Bundle_QuestionnaireR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_QuestionnaireR4'
          type: array
    Bundle_Entry_QuestionnaireR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/QuestionnaireR4'
    QuestionnaireResponseR4:
      type: object
      description: An instance of the R4 QuestionnaireResponse FHIR resource.
      properties:
        authored:
          type: string
          description: <p>Date and time the answers were gathered (in UTC). The default is the current time.</p>
        encounter:
          $ref: '#/components/schemas/Reference'
        id:
          type: string
          description: Identifier for this QuestionnaireResponse resource.
        identifier:
          $ref: '#/components/schemas/Identifier'
        item:
          type: object
          description: <p>Answers to the questions in the questionnaire.</p>
          properties:
            answer:
              type: object
              description: |-
                <p>The answer submitted for the question.</p>
                <p>Single-valued answer to the question. Depending on the type of question, the value sent will be one of the following types:</p>
                <ul>
                  <li>valueBoolean</li>
                  <li>valueDecimal</li>
                  <li>valueCoding</li>
                  <li>valueDate</li>
                  <li>valueTime</li>
                  <li>valueString</li>
                  <li>valueQuantity</li>
                  <li>valueAttachment</li>
                </ul>
              properties:
                valueAttachment:
                  type: object
                  description: The attachment as a binary resource URL.
                  properties: {}
                valueBoolean:
                  type: boolean
                  description: Boolean value
                valueCoding:
                  type: object
                  description: Coding value.
                  properties: {}
                valueDate:
                  type: string
                  description: Date value
                valueDecimal:
                  type: object
                  description: Decimal value
                  properties: {}
                valueQuantity:
                  type: object
                  description: Quantity value.
                  properties: {}
                valueString:
                  type: string
                  description: String value
                valueTime:
                  type: string
                  description: Time value
              required:
                - valueAttachment
                - valueBoolean
                - valueCoding
                - valueDate
                - valueDecimal
                - valueQuantity
                - valueString
                - valueTime
            linkId:
              type: string
              description: This property lists the questionnaire ID, the question ID, along with the DAT of the question as a dot-delimited (.) string.
            text:
              type: string
              description: The prompt of the question or question group.
          required:
            - answer
            - text
        language:
          type: string
          description: 'Language the questionnaire was answered in. For questionnaire response records that do not list the submission language, no language code is returned. '
        questionnaire:
          type: string
          description: <p>The FHIR questionnaire.</p>
        source:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: <p>Set to In-progress, unless all questionnaires are answered. If all questionnaires are answered, set to Completed.</p>
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - authored
        - encounter
        - item
        - language
        - questionnaire
        - source
        - subject
    Bundle_QuestionnaireResponseR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_QuestionnaireResponseR4'
          type: array
    Bundle_Entry_QuestionnaireResponseR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/QuestionnaireResponseR4'
    RelatedPersonR4:
      type: object
      description: A Response Type
      properties:
        name:
          type: object
          description: <p>The name of the RelatedPerson.</p>
          properties: {}
        patient:
          $ref: '#/components/schemas/Reference'
      required:
        - name
    RequestGroupR4:
      type: object
      description: An instance of the R4 RequestGroup FHIR resource.
      properties:
        action:
          type: object
          description: Treatment order information.
          properties:
            description:
              type: string
              description: Treatment order display name.
            resource:
              $ref: '#/components/schemas/Reference'
            title:
              type: string
              description: Treatment order category title.
          required:
            - description
            - resource
            - title
        basedOn:
          $ref: '#/components/schemas/Reference'
        intent:
          type: string
          description: For oncology RequestGroup, this always equals "plan".
        status:
          type: string
          description: |-
            Plan/cycle status value. Supported values include:
            <ul>
            <li>Planned</li>
            <li>Scheduled</li>
            <li>Completed</li>
            <li>Deleted</li>
            <li>Started</li>
            <li>Canceled</li>
            <li>Given Externally</li>
            <li>Unscheduled</li>
            <li>Non-Treatment Orders</li>
            </ul>
        subject:
          $ref: '#/components/schemas/Reference'
      required:
        - action
        - basedOn
        - subject
    Bundle_RequestGroupR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_RequestGroupR4'
          type: array
    Bundle_Entry_RequestGroupR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/RequestGroupR4'
    ResearchStudyR4:
      type: object
      description: A Response Type
      properties:
        arm:
          type: object
          description: |
            <p>Available starting in the August 2021 Epic version.
            <p>A group or subgroup of a research study.
          properties:
            description:
              type: string
              description: Short explanation of the study path.
            name:
              type: string
              description: Label for the study arm.
          required:
            - description
        description:
          type: string
          description: |
            <p>Available starting in the August 2021 Epic version.
            <p>What this study is doing.
        id:
          type: string
          description: The ResearchStudy FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        principalInvestigator:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: The current state of the study.
        title:
          type: string
          description: The name of the study.
      required:
        - arm
        - description
        - identifier
        - principalInvestigator
        - title
    Bundle_ResearchStudyR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ResearchStudyR4'
          type: array
    Bundle_Entry_ResearchStudyR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ResearchStudyR4'
    ResearchSubjectR4:
      type: object
      description: An instance of the R4 ResearchSubject resource.
      properties:
        assignedArm:
          type: string
          description: The study branch the subject is part of.
        id:
          type: string
          description: The FHIR ID
        identifier:
          $ref: '#/components/schemas/Identifier'
        individual:
          $ref: '#/components/schemas/Reference'
        period:
          $ref: '#/components/schemas/Period'
        status:
          type: string
          description: |-
            <p>The progression of a study subject through a study.
            <p>Contains values from the research subject status value set. Mapping might vary from one Epic organization to another.
        study:
          $ref: '#/components/schemas/Reference'
      required:
        - assignedArm
        - identifier
        - period
    ScheduleSTU3:
      type: object
      description: An instance of the STU3 Schedule resource.
      properties:
        actor:
          $ref: '#/components/schemas/Reference'
    ServiceRequestR4:
      type: object
      description: An instance of the R4 ServiceRequest resource.
      properties:
        id:
          type: string
          description: FHIR ID for this ServiceRequest instance.
        identifier:
          $ref: '#/components/schemas/Identifier'
        intent:
          type: string
          description: Request intent. Always "proposal".
        status:
          type: string
          description: Request status. Always "unknown".
        subject:
          $ref: '#/components/schemas/Reference'
        supportingInfo:
          $ref: '#/components/schemas/Reference'
      required:
        - supportingInfo
    Bundle_ServiceRequestR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_ServiceRequestR4'
          type: array
    Bundle_Entry_ServiceRequestR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/ServiceRequestR4'
    SlotSTU3:
      type: object
      description: An instance of the STU3 Slot resource.
      properties:
        end:
          type: string
          description: The end time.
        schedule:
          $ref: '#/components/schemas/Reference'
        start:
          type: string
          description: The start time.
        status:
          type: string
          description: Will be busy-tentative, but only included if returned by $find.
    SpecimenR4:
      type: object
      description: A single Specimen resource.
      properties:
        accessionIdentifier:
          $ref: '#/components/schemas/Identifier'
        collection:
          type: object
          description: Collection details.
          properties:
            bodySite:
              $ref: '#/components/schemas/CodeableConcept'
            extension:
              $ref: '#/components/schemas/Extension'
            collectedDateTime:
              type: string
              description: Instant derived from the date and time of collection. When there is no date, this item returns null.
            collector:
              $ref: '#/components/schemas/Reference'
            method:
              $ref: '#/components/schemas/CodeableConcept'
            quantity:
              type: object
              description: Total collection volume. Available starting in November 2021 version of Epic.
              properties: {}
          required:
            - bodySite
            - extension
            - collectedDateTime
            - collector
            - method
            - quantity
        id:
          type: string
          description: The Specimen FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        note:
          $ref: '#/components/schemas/Annotation'
        receivedTime:
          type: string
          description: The time when the specimen was received for processing. Available starting in November 2021 version of Epic.
        subject:
          $ref: '#/components/schemas/Reference'
        type:
          $ref: '#/components/schemas/CodeableConcept'
      required:
        - accessionIdentifier
        - collection
        - identifier
        - note
        - receivedTime
        - type
    SpecimenSTU3:
      type: object
      description: A Response Type
      properties:
        collection:
          type: object
          description: Collection details.
          properties:
            bodySite:
              $ref: '#/components/schemas/CodeableConcept'
            extension:
              $ref: '#/components/schemas/Extension'
            collectedDateTime:
              type: string
              description: Instant derived from the date and time of collection. When there is no date, this item returns null.
            collector:
              $ref: '#/components/schemas/Reference'
            method:
              $ref: '#/components/schemas/CodeableConcept'
            quantity:
              type: object
              description: Total collection volume.
              properties: {}
          required:
            - bodySite
            - extension
            - collectedDateTime
            - collector
            - method
            - quantity
        id:
          type: string
          description: The specimen’s FHIR ID.
        identifier:
          $ref: '#/components/schemas/Identifier'
        meta:
          type: object
          description: The document metadata.
          properties:
            profile:
              type: string
              description: 'Available in Netherlands environments only. This environment shows that this API conforms to the profile connected to the following canonical url: http://nictiz.nl/fhir/StructureDefinition/zib-LaboratoryTestResult-Specimen'
          required:
            - profile
        note:
          $ref: '#/components/schemas/Annotation'
        processing:
          type: object
          description: Processing and processing step details.
          properties: {}
        receivedTime:
          type: string
          description: The time when the specimen was received for processing.
        subject:
          $ref: '#/components/schemas/Reference'
        type:
          $ref: '#/components/schemas/CodeableConcept'
      required:
        - collection
        - identifier
        - meta
        - note
        - receivedTime
        - type
    Bundle_SpecimenR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_SpecimenR4'
          type: array
    Bundle_Entry_SpecimenR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/SpecimenR4'
    Bundle_SpecimenSTU3:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_SpecimenSTU3'
          type: array
    Bundle_Entry_SpecimenSTU3:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/SpecimenSTU3'
    SubstanceR4:
      type: object
      description: An instance of the R4 Substance resource.
      properties:
        code:
          $ref: '#/components/schemas/CodeableConcept'
    Bundle_SubstanceR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_SubstanceR4'
          type: array
    Bundle_Entry_SubstanceR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/SubstanceR4'
    TaskR4:
      type: object
      description: A single instance of an R4 Task FHIR resource.
      properties:
        authoredOn:
          type: string
          description: The date and time when the task was created.
        basedOn:
          $ref: '#/components/schemas/Reference'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        encounter:
          $ref: '#/components/schemas/Reference'
        for:
          $ref: '#/components/schemas/Reference'
        intent:
          type: string
          description: 'The FHIR intent code: TaskIntent.'
        lastModified:
          type: string
          description: The date and time when the task was last modified.
        extension:
          $ref: '#/components/schemas/Extension'
        owner:
          $ref: '#/components/schemas/Reference'
        priority:
          type: string
          description: 'The FHIR priority code: RequestPriority.'
        requester:
          $ref: '#/components/schemas/Reference'
        status:
          type: string
          description: 'The FHIR status code: TaskStatus.'
        statusReason:
          $ref: '#/components/schemas/CodeableConcept'
      required:
        - extension
        - statusReason
    Bundle_TaskR4:
      description: Contains a collection of resources.
      properties:
        entry:
          description: Entry in the bundle.
          items:
            $ref: '#/components/schemas/Bundle_Entry_TaskR4'
          type: array
    Bundle_Entry_TaskR4:
      type: object
      description: Entry in the bundle.
      properties:
        resource:
          $ref: '#/components/schemas/TaskR4'
    ValueSetR4:
      type: object
      description: A single ValueSet resource.
      properties:
        expansion:
          type: object
          description: ValueSet expansion details.
          properties:
            contains:
              type: object
              description: Array of codes in the ValueSet.
              properties:
                code:
                  type: string
                  description: Code value.
                display:
                  type: string
                  description: User display value associated with the code.
                system:
                  type: string
                  description: System value for the code.
              required:
                - display
                - system
            parameter:
              type: object
              description: Parameter that controlled the expansion process.
              properties:
                name:
                  type: string
                  description: Parameter name as assigned by the client or server.
                valueBoolean:
                  type: boolean
                  description: Parameter value.
                valueCode:
                  type: string
                  description: Parameter value.
                valueDateTime:
                  type: string
                  description: Parameter value.
                valueDecimal:
                  type: object
                  description: Parameter value.
                  properties: {}
                valueInteger:
                  type: object
                  description: Parameter value.
                  properties: {}
                valueString:
                  type: string
                  description: Parameter value.
                valueUri:
                  type: string
                  description: Parameter value.
              required:
                - valueBoolean
                - valueCode
                - valueDateTime
                - valueDecimal
                - valueInteger
                - valueString
                - valueUri
            timestamp:
              type: string
              description: Time that the ValueSet expansion occurred.
            total:
              type: object
              description: Total number of codes in the expansion.
              properties: {}
          required:
            - contains
            - total
        id:
          type: string
          description: The ValueSet FHIR ID.
        status:
          type: string
          description: Status of the ValueSet. Always "active".
      required:
        - expansion
  securitySchemes:
    bearer_auth:
      type: apiKey
      description: This is the Bearer Token for the User in context
      name: Authorization
      in: header